name: Publish Docker image to GHCR

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*.*.*'
  workflow_dispatch:
  repository_dispatch:
    types: [build-releases-doc]
  schedule:
    - cron: "0 22 * * *"


permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DOCKERFILE: Dockerfile
  CONTEXT: .

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check for Dockerfile
        id: dockerfile_check
        run: |
          if [[ -f "${DOCKERFILE}" ]]; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Prepare image name (lowercase)
        id: prep
        run: |
          IMAGE="${{ env.IMAGE_NAME }}"
          IMAGE_LC=$(echo "${IMAGE}" | tr '[:upper:]' '[:lower:]')
          echo "image=${IMAGE_LC}" >> "$GITHUB_OUTPUT"

      - name: Set up Docker Buildx
        if: steps.dockerfile_check.outputs.exists == 'true'
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker

      - name: Log in to GHCR
        if: steps.dockerfile_check.outputs.exists == 'true'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        if: steps.dockerfile_check.outputs.exists == 'true'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ steps.prep.outputs.image }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            type=ref,event=tag
            type=sha

      - name: Build and push
        if: steps.dockerfile_check.outputs.exists == 'true'
        env:
          WORKFLOW_TOKEN: ${{ secrets.workflow_token }}
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.CONTEXT }}
          file: ${{ env.DOCKERFILE }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          secrets: |
            id=GH_TOKEN,env=WORKFLOW_TOKEN
          platforms: linux/amd64
          build-args: |
            BUILD_DATE=${{ github.run_number }}-${{ github.sha }}

      - name: Skip (no Dockerfile)
        if: steps.dockerfile_check.outputs.exists != 'true'
        run: |
          echo "No Dockerfile found at path '${DOCKERFILE}'. Skipping Docker build and push."

      - name: Notify hook
        if: ${{ success() }}
        run: |
          curl -sS -X POST "http://hook.slowlyo.top/h/47fb4784-6f40-43da-9d6f-cd0eaca61333?signature=${{ secrets.HOOK_SECRET }}"
