[{"id":0,"title":"","content":"v4.3.8#\n\n> 2025-09-23 24:41:38\n\n\n更新内容#\n\n * refactor: Renderer 类升级 6.13.0\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\n> ❗由于 amis Release Schema.json 改版 ( 6.12.0: 4.06MB 👉 6.13.0: 929KB ) ❗Renderer\n> 类改动较大, 历史项目谨慎升级~\n\nFull Changelog: https://github.com/slowlyo/owl-admin/compare/v4.3.7...v4.3.8\n\nView on GitHub\n\n\nv4.3.7#\n\n> 2025-09-16 10:27:39\n\n\n更新内容#\n\n * ✨ fix: 修复 amis Form 中存在 status/no 等字段时提示 fetchFailed 的问题\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n * 发布前端资源: php artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv4.3.6#\n\n> 2025-08-23 14:17:59\n\n\n更新内容#\n\n * refactor: 为 jsonSerialize 方法添加返回类型声明\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv4.3.5#\n\n> 2025-08-17 13:12:17\n\n\n更新内容#\n\n * fix: Renderer 类缺失问题修复\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv4.3.4#\n\n> 2025-08-16 21:17:27\n\n\n更新内容#\n\n * refactor: amis 更新至 6.13.0\n * refactor: 优化图标选择器实现方式\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n * 发布前端资源: php artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv4.3.3#\n\n> 2025-07-24 16:35:48\n\n\n更新内容#\n\n * jsonSerialize方法返回类型声明 by @luscio in\n   https://github.com/slowlyo/owl-admin/pull/210\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nFull Changelog: https://github.com/slowlyo/owl-admin/compare/v4.3.2...v4.3.3\n\nView on GitHub\n\n\nv4.3.2#\n\n> 2025-07-15 22:00:47\n\n\n更新内容#\n\n * 修复代码生成器获取连接筛选错误 by @asundust in https://github.com/slowlyo/owl-admin/pull/209\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nFull Changelog: https://github.com/slowlyo/owl-admin/compare/v4.3.1...v4.3.2\n\nView on GitHub\n\n\nv4.3.1#\n\n> 2025-07-11 09:31:56\n\n\n更新内容#\n\n * PHP8.4废弃隐式类型声明 by @luscio in https://github.com/slowlyo/owl-admin/pull/208\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nFull Changelog: https://github.com/slowlyo/owl-admin/compare/v4.3.0...v4.3.1\n\nView on GitHub\n\n\nv4.3.0#\n\n> 2025-07-04 22:27:12\n\n\n更新内容#\n\n * 部分样式优化\n * 富文本增加默认上传配置\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n * 发布前端资源: php artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv4.2.9#\n\n> 2025-06-27 11:45:20\n\n\n更新内容#\n\n * fix: 动态关联 - 统一缓存驱动获取逻辑，确保在所有相关方法中使用一致的缓存实现\n * 代码生成器相关代码结构优化\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv4.2.8#\n\n> 2025-06-18 09:48:53\n\n\n更新内容#\n\n * fix: 更新 ServiceProvider.stub 模板以使用动态命名空间替代静态模块名\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv4.2.7#\n\n> 2025-05-27 20:57:58\n\n\n更新内容#\n\n * fix: 试用 driver 判断数据库类型, 而不是 connection 名称 (#204 )\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv4.2.6#\n\n> 2025-05-26 09:20:29\n\n\n更新内容#\n\n * fix: 菜单/权限筛选后的处理逻辑 (#203 )\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv4.2.5#\n\n> 2025-05-16 17:03:00\n\n\n更新内容#\n\n * fix: cache默认使用database导致的初始化异常\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv4.2.4#\n\n> 2025-05-10 15:30:33\n\n\n更新内容#\n\n * fix: 菜单排序保存失败\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv4.2.3#\n\n> 2025-05-10 10:04:36\n\n\n更新内容#\n\n * 代码生成器\n   * 处理行内按钮(delete) 文字异常\n   * 处理 label 中可能存在的单引号\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv4.2.2#\n\n> 2025-05-09 24:12:10\n\n\n修复安装异常#\n\nView on GitHub\n\n\nv4.2.1#\n\n> 2025-05-09 21:20:03\n\n\n更新内容#\n\n * 避免初始化时查库\n * fix: 修复 pgsql 作为数据库的错误，修改菜单排序报错 by @ctfang in\n   https://github.com/slowlyo/owl-admin/pull/202\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n * 发布前端资源: php artisan admin:publish --config --force (可选)\n\n\nNew Contributors#\n\n * @ctfang made their first contribution in\n   https://github.com/slowlyo/owl-admin/pull/202\n\nView on GitHub\n\n\nv4.2.0#\n\n> 2025-04-27 20:53:38\n\n\n更新内容#\n\n * 修复 loadRelations 方法异常\n * 修复布局切换时因 KeepAlive 导致的页面白屏问题\n * 补充 Renderer 缺少的属性\n * 调整默认首页的动画效果\n * 优化 _settings 接口, 避免数据库查询\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n * 发布前端资源: php artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv4.1.11#\n\n> 2025-04-23 09:56:03\n\n\n更新内容#\n\n * 优化代码生成器生成的查询代码\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv4.1.10#\n\n> 2025-04-22 16:58:14\n\n\n更新内容#\n\n * 优化自定义数据库连接使用\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv4.1.9#\n\n> 2025-04-09 21:38:28\n\n\n更新内容#\n\n * 适配表前缀配置\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv4.1.8#\n\n> 2025-04-09 12:12:16\n\n\n更新内容#\n\n * fix: file_upload_handle_multi方法，多文件上传时返回[\"\"] by @niuf416 in\n   https://github.com/slowlyo/owl-admin/pull/197\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv4.1.7#\n\n> 2025-04-07 21:56:24\n\n\n更新内容#\n\n * 替换框架中使用的 /Illuminate/Database/Schema 相关方法, 适配多版本 laravel\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv4.1.6#\n\n> 2025-04-05 13:11:01\n\n\n更新内容#\n\n * feat: amis 更新至 6.12.0\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n * 发布前端资源: php artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv4.1.5#\n\n> 2025-03-19 23:00:31\n\n\n更新内容#\n\n * 🎈 perf(settings): 兼容 laravel 12 的 asJson 方法\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv4.1.4#\n\n> 2025-03-19 14:31:49\n\n\n更新内容#\n\n * fix: 保存权限parent_id异常 (#191 )\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv4.1.3#\n\n> 2025-03-18 21:08:07\n\n\n更新内容#\n\n * fix: 保存权限parent_id异常 (#191 )\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv4.1.2#\n\n> 2025-03-16 11:08:49\n\n\n更新内容#\n\n * fix: 新增权限parent_id为null (#190 )\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv4.1.1#\n\n> 2025-03-13 22:02:17\n\n\n更新内容#\n\n * 美化默认控制台页面\n * 优化系统内置功能使用体验\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv4.1.0#\n\n> 2025-03-10 16:32:10\n\n\n更新内容#\n\n * 美化 amis 登录页\n * 表格操作列错位问题尝试修复\n * 修复可能存在的SQL注入\n * 默认不展示权限自动生成按钮\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv4.0.9#\n\n> 2024-12-07 24:07:32\n\n\n更新内容#\n\n * feat: amis 更新至 6.10.0\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n * 发布前端资源: php artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv4.0.8#\n\n> 2024-12-03 15:14:58\n\n\n更新内容#\n\n * fix: 修复数据库表前缀导致的获取字段失败 (#170)\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv4.0.7#\n\n> 2024-11-30 10:58:03\n\n\n更新内容#\n\n * feat: 修改getDatabaseColumns方法，兼容sqlite数据库 by @wowthree in\n   https://github.com/slowlyo/owl-admin/pull/167\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv4.0.6#\n\n> 2024-11-16 13:37:11\n\n\n更新内容#\n\n * fix: antd 升级导致的主题色配置回显失败\n * fix: export 对象参数处理 (#161)\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n * 发布前端资源: php artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv4.0.5#\n\n> 2024-11-05 22:06:14\n\n\n更新内容#\n\n * refactor: AdminService 调整, 增加事务\n * style(admin-views): 优化组件样式和主题变量\n * refactor: 非超管账号不可编辑超管账号\n * feat: amis update to v6.9.0\n * fix: 手风琴菜单异常\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n * 发布前端资源: php artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv4.0.4#\n\n> 2024-11-05 22:03:56\n\n\n更新内容#\n\n * MergePR\n   * 修复 导出工具类模型关联查询问题 by @itxiao6 in\n     https://github.com/slowlyo/owl-admin/pull/160\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv4.0.3#\n\n> 2024-10-28 22:39:15\n\n\n更新内容#\n\n * feat: logo 设置为空则不显示\n * feat: tab 栏增加刷新操作\n * refactor: 只有超管才能分配超管\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n * 发布前端资源: php artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv4.0.2#\n\n> 2024-09-29 10:12:27\n\n\n更新内容#\n\n * fix: token 有效期问题修复 (#153)\n * feat: service 增加 formatRows 方法 (list 数据返回前方便格式化数据)\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv4.0.1#\n\n> 2024-09-27 17:30:50\n\n\n更新内容#\n\n * Merge PR\n   * fix: 动态 api 中统一模板的多个配置返回结果不变 by @ilvsx in\n     https://github.com/slowlyo/owl-admin/pull/152\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv4.0.0#\n\n> 2024-09-23 23:15:57\n\n\n更新内容#\n\n * feat: 升级 Laravel 到 11 版本 (最低要求, 因 laravel 目录结构调整, 推荐尽早开始使用 laravel 11)\n * feat: 调整 Context 类文件位置\n * feat: 重写实现 CRUD 自带的页码切换组件，解决下拉被遮挡的问题\n * feat: 前端优化（多次提交）\n * feat: 部分代码优化（多次提交）\n * feat: 处理因为 class 不存在导致的异常\n * feat: 超级管理员禁止修改\n * feat: 框架安装时携带代码生成器常用字段 (低版本升级可使用 php artisan admin:update --v=400 获得模板数据)\n * feat: 代码生成器支持配置新增和批量删除按钮\n * feat: 动态 API：get 方式的 API 支持预览，添加更多 API 模板\n * feat: 避免 admin.php 路由文件中的注释被折叠\n * refactor: 使用 last_used_at 判断 token 失效时间\n * refactor: amis 更新到 v6.8.0\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\n * 请确保在升级前备份相关数据，以防升级过程中出现不可预见的问题\n\n * 根据升级日志，检查是否有特殊说明或需要手动处理的步骤\n\n * 在升级过程中，如遇到问题，请及时查看 GitHub 仓库的 issues 或联系维护者 @slowlyo\n   请注意，此次更新包含大量功能和优化，建议在测试环境中先行升级验证，确保新版本与现有业务兼容。\n\nView on GitHub\n\n\nv3.9.7#\n\n> 2024-08-16 21:35:03\n\n\n更新内容#\n\n * refactor: amis 更新 v6.7.0\n * Merge PR\n   * 文件分块上传时生成uuid报错 by @niuf416 in\n     https://github.com/slowlyo/owl-admin/pull/146\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv3.9.6#\n\n> 2024-08-06 09:30:59\n\n\n更新内容#\n\n * Merge PR\n   * 修正动态API功能检索所有模型的时候检索到抽象类型 by @asundust in\n     https://github.com/slowlyo/owl-admin/pull/144\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv3.9.5#\n\n> 2024-08-04 21:35:28\n\n\n更新内容#\n\n * Merge PR\n   * 模型显式配置 connection，__construct不再setConnection by @wxfjamdc in\n     https://github.com/slowlyo/owl-admin/pull/142\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv3.9.4#\n\n> 2024-07-23 21:50:20\n\n\n更新内容#\n\n * refactor: admin_abort 不上报异常\n * refactor: 分片上传文件仅返回路径\n * refactor: 导出失败上报异常\n * refactor: 优化 Renderer\n * Merge PR\n   * 修复网站logo非env设定bug by @maliang in\n     https://github.com/slowlyo/owl-admin/pull/141\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv3.9.3#\n\n> 2024-07-15 14:42:32\n\n\n更新内容#\n\n * feat: 通过管道增强组件扩展性\n * Merge PR\n   * 验证码未开启时,登录失败不再获取验证码 by @wxfjamdc in\n     https://github.com/slowlyo/owl-admin/pull/139\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n * 发布前端资源: php artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv3.9.2#\n\n> 2024-07-11 15:37:59\n\n\n更新内容#\n\n * Merge PR\n   * 调整组件注册和进入登录页面的顺序 by @wxfjamdc in\n     https://github.com/slowlyo/owl-admin/pull/137\n   * Update AdminPermissionController.php by @MaleWeb in\n     https://github.com/slowlyo/owl-admin/pull/138\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n * 发布前端资源: php artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv3.9.1#\n\n> 2024-07-09 14:26:17\n\n\n更新内容#\n\n * feat: 导出文件下载 api 增加校验\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv3.9.0#\n\n> 2024-07-08 17:21:11\n\n\n更新内容#\n\n * feat: 扩展菜单支持自定义排序 by @khs1001 in\n   https://github.com/slowlyo/owl-admin/pull/132\n * feat: 扩展菜单父级支持根据url路径对应 by @khs1001 in\n   https://github.com/slowlyo/owl-admin/pull/133\n * feat: amis 升级 v6.6.0\n * feat: 代码生成器增加克隆记录功能 🌟\n * feat: 移除行内按钮的默认图标 ❗️\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\n * 发布前端资源: php artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv3.8.10#\n\n> 2024-07-03 15:07:34\n\n\n更新内容#\n\n * fix: 代码模板内容统一\n * feat: 调整默认分页控件\n * feat: config 部分配置默认从 env 取值\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\n * 发布配置文件: php artisan admin:publish --config --force (可选)\n\nView on GitHub\n\n\nv3.8.9#\n\n> 2024-07-01 09:39:13\n\n\n更新内容#\n\n * feat: 调整保存角色权限的路由\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv3.8.8#\n\n> 2024-06-29 16:21:40\n\n\n更新内容#\n\n * feat: 调整 service 中的 $tableColumn (#127 )\n * fix: 修复滚动区域样式异常\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\n * 发布前端资源: php artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv3.8.7#\n\n> 2024-06-27 14:53:53\n\n\nWhat's Changed#\n\n * 修复扩展卸载列表不更新bug by @maliang in https://github.com/slowlyo/owl-admin/pull/129\n\nFull Changelog: https://github.com/slowlyo/owl-admin/compare/v3.8.6...v3.8.7\n\nView on GitHub\n\n\nv3.8.6#\n\n> 2024-06-22 14:06:00\n\n\n更新内容#\n\n * feat: 优化 update 方法主键获取逻辑\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv3.8.5#\n\n> 2024-06-20 17:49:14\n\n\n更新内容#\n\n * feat: 多语言设置区分模块\n\n * feat: 扩展查询增加缓存机制\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv3.8.4#\n\n> 2024-06-13 22:57:26\n\n\n更新内容#\n\nfix: 模块配置文件补充\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv3.8.3#\n\n> 2024-06-13 09:39:19\n\n\n更新内容#\n\n * feat: 新增/修改/详情, 支持抽屉模式\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv3.8.2#\n\n> 2024-06-11 23:17:01\n\n\n更新内容#\n\n * feat: amis 版本更新为 6.5.0\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\n * 发布前端资源: php artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv3.8.1#\n\n> 2024-06-11 23:15:54\n\n\n更新内容#\n\n * fix: 代码生成器, 切换路径时更新对应文件路径\n * fix: 菜单管理, 父级菜单不能选择自己\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv3.8.0#\n\n> 2024-06-09 25:50:09\n\n\n更新内容#\n\n * fix: 部分参数注释导致 phpstan 异常\n * fix: api 模板目录不存在时, 无法保存模板问题\n * fix: 扩展启用参数 bug (@maliang in https://github.com/slowlyo/owl-admin/pull/117)\n * feat: 调整组件选择实现 (❗注意: 此项为破坏性更新, 历史数据中的组件结构将 无法使用)\n * feat: 👏 文件上传组件, 默认支持分块上传\n * feat: ✨ 代码生成器支持配置 筛选项\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv3.7.4#\n\n> 2024-06-03 16:44:41\n\n\n更新内容#\n\n * fix: laravel11 中, 因为 sqlite 无法获取字段信息导致的列表报错\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv3.7.3#\n\n> 2024-06-02 21:11:10\n\n\n更新内容#\n\n * feat: ❗ 调整排序字段为 custom_order\n\n * fix: 部分样式问题修复\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\n * 更新: php artisan admin:update --v=373\n\nView on GitHub\n\n\nv3.7.2#\n\n> 2024-05-26 21:30:21\n\n优化代码生成器表单填充逻辑\n\nView on GitHub\n\n\nv3.7.1#\n\n> 2024-05-25 09:01:16\n\n解决原有代码生成记录无法编辑保存的问题 (#114 )\n\nView on GitHub\n\n\nv3.7.0#\n\n> 2024-05-24 23:31:19\n\n\n更新内容#\n\n * feat: 多语言动态切换 by @luscio in https://github.com/slowlyo/owl-admin/pull/109\n   * 框架初始化默认加载中文\n * feat: 框架翻译加载逻辑调整 (不用发布翻译文件也能多语言了~)\n * feat: 前端部分样式优化, 部分异常样式修复\n * feat: 代码生成器优化\n   \n   * 文件字段支持配置成多文件\n   \n   * 列表 created_at / updated_at 可配置是否显示\n   \n   * ✨ 增加 [常用字段] 功能 (可复用已有字段~)\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\n * 发布前端资源: php artisan admin:publish --assets --config --force\n\nView on GitHub\n\n\nv3.6.10#\n\n> 2024-05-22 15:15:17\n\n\n更新内容#\n\n * fix: 数据库迁移文件路径处理\n\n * fix: 代码生成器, 编辑时文件路径回显问题处理\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv3.6.9#\n\n> 2024-05-21 24:33:53\n\n\n更新内容#\n\n * feat: 主要字体字号 12 -> 14\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\n * 发布前端资源: php artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv3.6.8#\n\n> 2024-05-21 23:48:30\n\n\n更新内容#\n\n * feat: 前端样式优化\n\n * fix: 内容区域上边距异常问题修复\n\n * fix: 模块配置文件 bootstrap 设置项生成错误问题\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\n * 发布前端资源: php artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv3.6.7#\n\n> 2024-05-11 13:32:22\n\n * 处理 Alert 组件多语言问题\n\n * 需要执行命令 : php artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv3.6.6#\n\n> 2024-05-11 09:47:36\n\n * 处理 Alert 组件多语言问题\n\n * 需要执行命令 : php artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv3.6.5#\n\n> 2024-05-10 24:00:57\n\n代码生成器, 选择生成内容问题修复\n\nView on GitHub\n\n\nv3.6.4#\n\n> 2024-05-10 14:40:56\n\n\n更新内容#\n\n * feat: amis 更新 v6.4.1\n\n * feat: 调整 ide-helper 文件位置\n\n * fix: 代码生成器勾选生成不生效的问题\n\n * fix: 高分辨率下双栏布局样式异常问题\n\n * fix: 文件大小超限提示问题 (#105 )\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\n * 发布前端资源: php artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv3.6.3#\n\n> 2024-05-09 09:29:41\n\n\nWhat's Changed#\n\n * 新增admin-module:init-db命令初始化模块数据库 by @maliang in\n   https://github.com/slowlyo/owl-admin/pull/104\n\n\nNew Contributors#\n\n * @maliang made their first contribution in\n   https://github.com/slowlyo/owl-admin/pull/104\n\nFull Changelog: https://github.com/slowlyo/owl-admin/compare/v3.6.2...v3.6.3\n\nView on GitHub\n\n\nv3.6.2#\n\n> 2024-05-02 10:19:04\n\n代码生成器编辑页面获取数据问题修复\n\nView on GitHub\n\n\nv3.6.1#\n\n> 2024-05-02 09:59:07\n\n\n更新内容#\n\n * 入口路由定义到 app/Admin/routes.php 中\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n * 手动添加路由\n\n\n\nView on GitHub\n\n\nv3.6.0#\n\n> 2024-05-01 11:13:27\n\n\n更新内容#\n\n * feat: admin:update 命令根据配置连接数据库\n\n * feat: 代码生成器优化\n   \n   * 组件属性填写优化, 组件保存操作优化\n   * 增加代码清除功能, 移除 admin:gen-code-clear 命令\n   * 生成代码按钮增加生成项选择功能\n\n * fix: 分页下拉选项被遮挡问题 (#96)\n\n * fix: 个人设置页面数据不更新问题\n\n * fix: 删除按钮 confirm 弹窗多语言问题\n\n\n低版本升级步骤#\n\n * 获取最新版本: composer update slowlyo/owl-admin\n\n * 发布前端资源: php artisan admin:publish --lang --force\n\nView on GitHub\n\n\nv3.5.8#\n\n> 2024-04-16 22:24:08\n\n * 调整\n   \n   * 优化登录页重定向逻辑\n\n * 低版本升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n   \n   * 发布前端资源: php artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv3.5.7#\n\n> 2024-04-06 09:29:59\n\n * 调整\n   \n   * sqlite 适配\n   \n   * 处理记录 sql 的全局变量可能存在的内存泄漏问题\n   \n   * 修复 toast 在事件中无法使用的问题\n\n * 低版本升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n   \n   * 发布前端资源: php artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv3.5.6#\n\n> 2024-04-02 14:14:08\n\n * 调整\n   \n   * 新增: admin:ide-helper 命令, 优化开发体验\n   \n   * 修复: fontawesome 部分图标显示异常的问题\n\n * 低版本升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n   \n   * 发布前端资源: php artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv3.5.5#\n\n> 2024-04-01 15:45:01\n\n * 调整\n   \n   * 动态api, 查询/响应逻辑优化\n   \n   * 超管禁用选中 by @luscio in https://github.com/slowlyo/owl-admin/pull/88\n\n * 低版本升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n\n\nNew Contributors#\n\n * @luscio made their first contribution in\n   https://github.com/slowlyo/owl-admin/pull/88\n\nView on GitHub\n\n\nv3.5.4#\n\n> 2024-03-30 17:10:22\n\n * 调整\n   \n   * renderer 优化\n   \n   * queryPath 获取逻辑优化\n\n * 低版本升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv3.5.3#\n\n> 2024-03-30 14:16:29\n\n * 调整\n   \n   * amis 更新 v6.3.0\n   \n   * Renderer 优化, phpstorm 中增加部分方法的参数提示\n\n * 低版本升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n   \n   * 发布前端资源: php artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv3.5.2#\n\n> 2024-03-29 15:17:58\n\n * 调整\n   \n   * 修复: 用户设置页面, 消息提示不显示问题\n   \n   * 代码生成器消息提示优化\n   \n   * 首页模板调整\n\n * 低版本升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv3.5.1#\n\n> 2024-03-27 10:43:24\n\n * 调整\n   \n   * 修复 amis 登录模板无法使用问题\n   \n   * api 模板增加导入功能\n\n * 低版本升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n   \n   * 发布资源: php artisan admin:publish --assets --lang --force\n\nView on GitHub\n\n\nv3.5.0#\n\n> 2024-03-26 16:00:25\n\n * 新增\n   \n   * 开发者工具\n     * 页面管理\n     * 动态 API\n     * 动态关联\n   * 回到顶部按钮\n   * token 过期时间设置项\n\n * 调整\n   \n   * 优化 queryPath 获取逻辑\n   \n   * 菜单管理增加类型: 页面\n\n * 低版本升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n   \n   * 更新: php artisan admin:update --v=350\n\nView on GitHub\n\n\nv3.4.1#\n\n> 2024-03-20 10:46:56\n\n * 调整\n   \n   * add: 菜单页增加 iframe类型 by @lphkxd in\n     https://github.com/slowlyo/owl-admin/pull/86\n   \n   * 优化 amis 页面结构加载逻辑\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n   \n   * 更新: php artisan admin:update --v=341\n\nView on GitHub\n\n\nv3.4.0#\n\n> 2024-03-16 11:58:59\n\n * 调整\n   \n   * 支持 laravel 11\n   * 修复amis toast 不显示问题\n   * 优化图形验证码逻辑\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n   \n   * 发布资源: php artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv3.3.9#\n\n> 2024-03-13 10:29:26\n\n * 调整\n   \n   * 优化后端报错时, 前端的提示\n   * 修复 admin_resource_full_path 方法中存在的问题\n   * 优化: 列表支持自动加载多层级的关联关系\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n   \n   * 发布资源: php artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv3.3.8#\n\n> 2024-03-06 14:39:11\n\n * 调整\n   \n   * admin-module:init 命令支持一次性创建多个模块\n     * eg: php artisan admin-module:init Master Store User\n   * admin-modules 目录及命名空间支持在 config/admin.php 配置文件中配置\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv3.3.7#\n\n> 2024-03-05 23:59:39\n\n * 调整\n   \n   * 文件上传处理辅助函数优化\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv3.3.6#\n\n> 2024-03-05 13:56:33\n\n * 调整\n   \n   * service saving 问题修复\n   * 系统用户 / 角色 删除增加判断\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv3.3.5#\n\n> 2024-03-02 11:21:53\n\n * 调整\n   \n   * 导出按钮优化, 增加 loading 效果\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv3.3.4#\n\n> 2024-03-01 24:06:30\n\n\n❗ 注意, 此版本更新对于 [ Excel 导出 ] 功能是破坏性的, 从低版本升级需要手动处理历史的导出逻辑代码#\n\n * 调整\n   \n   * 默认使用的 Excel 导出扩展替换为 rap2hpoutre/fast-excel (\n     laravel-excel经常由于各种依赖版本问题导致安装失败 )\n     * 新增: exportMap 方法\n     * 移除: exportHeadings & exportColumns 方法\n   * 优化导出菜单只能点击文字的问题\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n   \n   * 发布资源: php artisan admin:publish --lang --assets --force\n\nView on GitHub\n\n\nv3.3.3#\n\n> 2024-03-01 10:52:28\n\n * 调整\n   \n   * amis 更新 6.2.2\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n   \n   * 发布资源: php artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv3.3.2#\n\n> 2024-03-01 10:11:36\n\n * 调整\n   \n   * service 中新增部分方法, 更方便重写逻辑\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv3.3.1#\n\n> 2024-02-28 23:59:37\n\n * 调整\n   \n   * 修复 admin:gen-code-clear 命令中的错误\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv3.3.0#\n\n> 2024-02-28 15:18:44\n\n * 调整\n   \n   * AdminMenu 模型中, 处理扩展的菜单多语言 (#77 )\n   \n   * 修复 message 不显示问题 (#76 )\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n   \n   * 发布资源: php artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv3.2.9#\n\n> 2024-02-26 13:57:49\n\n * 调整\n   \n   * 修复收起菜单白屏问题\n   \n   * 优化: 关闭用户认证时, 保证系统可正常使用\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n   \n   * 发布资源: php artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv3.2.8#\n\n> 2024-02-25 15:03:30\n\n * 调整\n   \n   * 配置文件优化: 后台数据库连接配置\n   \n   * 扩展管理: 更多扩展按钮调整\n   \n   * 代码生成器: 替换图标选择器\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n   \n   * 发布资源: php artisan admin:publish --config --force\n\nView on GitHub\n\n\nv3.2.7#\n\n> 2024-02-22 23:27:58\n\n * 调整\n   \n   * 新增: 应用开启 debug 时, 接口响应包含 sql 执行记录\n   * 前端优化\n     \n     * 消息气泡优化\n     \n     * 系统错误消息提示优化\n     \n     * 新增手风琴菜单\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n   \n   * 发布资源: php artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv3.2.6#\n\n> 2024-02-22 15:45:28\n\n * 调整\n   \n   * 重构 modules 功能, 弃用 nwidart/laravel-modules (#73 )\n   \n   * 移除 admin-module:update 命令, 现在视图部分由框架自动处理\n   \n   * 各模块之间的主题配置隔离\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n\n * ❗注意\n   \n   * 更新后, modules 与之前的版本并不兼容, 如果你已经使用了该功能, 需要手动迁移你的代码\n\nView on GitHub\n\n\nv3.2.5#\n\n> 2024-02-21 09:14:31\n\n\nWhat's Changed#\n\n * add: 增加生成代码可选保存指定目录 by @lphkxd in\n   https://github.com/Slowlyo/owl-admin/pull/72\n\n * 升级步骤\n   * 获取最新版本: composer update slowlyo/owl-admin\n   * 执行命令: php artisan admin:update --v=325\n\nFull Changelog: https://github.com/Slowlyo/owl-admin/compare/v3.2.4...v3.2.5\n\nView on GitHub\n\n\nv3.2.4#\n\n> 2024-02-19 17:01:21\n\n * 调整\n   \n   * iconify图标选择器: 搜索逻辑本地化, 避免网络原因无法使用\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv3.2.3#\n\n> 2024-02-19 13:41:05\n\n * 调整\n   \n   * 增加助手函数: 多文件上传处理\n   \n   * 菜单管理优化: 列表拖拽排序、图标选择器\n   \n   * 系统用户管理: 增加启用禁用字段\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n   * 执行命令: php artisan admin:update --v=323\n\nView on GitHub\n\n\nv3.2.2#\n\n> 2024-02-19 11:21:30\n\n * 调整\n   \n   * 代码生成器, 代码清理异常问题修复\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv3.2.1#\n\n> 2024-02-10 15:41:52\n\n * 调整\n   \n   * 首页问题修复\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n   * 安装 3.2.0 出现问题的, 在 app/Admin/Controllers/HomeController.php 加上 use\n     Slowlyo\\OwlAdmin\\Controllers\\AdminController;\n\nView on GitHub\n\n\nv3.2.0#\n\n> 2024-02-07 10:22:10\n\n * 调整\n   \n   * 代码生成器优化: 组件值识别 json 字符串, 并转换为 php 数组 (#70)\n   \n   * 框架默认首页调整: 原 一言 卡片, 更改为 bing 壁纸轮播\n   \n   * 各 service 移除方法返回值类型\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n\n\nWhat's Changed#\n\n * optimize:优化代码生成器中需要用到多个数组的字段类型。 by @taotecode in\n   https://github.com/Slowlyo/owl-admin/pull/70\n\n\nNew Contributors#\n\n * @taotecode made their first contribution in\n   https://github.com/Slowlyo/owl-admin/pull/70\n\nFull Changelog: https://github.com/Slowlyo/owl-admin/compare/v3.1.11...v3.2.0\n\nView on GitHub\n\n\nv3.1.11#\n\n> 2024-02-06 14:13:40\n\n * 调整\n   \n   * listQuery 新增: 根据 tableColumn 配置, 自动加载关联关系\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n\n\nWhat's Changed#\n\n * add:新增自动with功能，根据column配置，字段名以 user.name 方式，只要模型定义的有user这个关联关系，即可自动启用 by\n   @lphkxd in https://github.com/Slowlyo/owl-admin/pull/69\n\n\nNew Contributors#\n\n * @lphkxd made their first contribution in\n   https://github.com/Slowlyo/owl-admin/pull/69\n\nFull Changelog: https://github.com/Slowlyo/owl-admin/compare/v3.1.10...v3.1.11\n\nView on GitHub\n\n\nv3.1.10#\n\n> 2024-02-01 21:01:54\n\n * 调整\n   \n   * 菜单无法快速编辑问题修复\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n\nView on GitHub\n\n\nv3.1.9#\n\n> 2024-01-31 23:24:18\n\n * 调整\n   \n   * amis 更新 v6.1.0\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n   * 发布资源文件: php artisan admin:publish --assets --force\n\n * 注意: v3.1.8 版本中需要发布 --lang 如果跳过 v3.1.8 直接更新 v3.1.9 的, 需要发布 --lang\n\nFull Changelog: https://github.com/Slowlyo/owl-admin/compare/v3.1.8...v3.1.9\n\nView on GitHub\n\n\nv3.1.8#\n\n> 2024-01-31 13:37:50\n\n * 调整\n   \n   * 菜单增加路径唯一限制\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n   * 发布语言文件: php artisan admin:publish --lang --force\n\nFull Changelog: https://github.com/Slowlyo/owl-admin/compare/v3.1.7...v3.1.8\n\nView on GitHub\n\n\nv3.1.7#\n\n> 2024-01-28 17:38:48\n\n * 调整\n   \n   * 排序异常问题修复\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n\nFull Changelog: https://github.com/Slowlyo/owl-admin/compare/v3.1.6...v3.1.7\n\nView on GitHub\n\n\nv3.1.6#\n\n> 2024-01-15 11:17:22\n\n * 调整\n   \n   * 部分代码优化\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n\nFull Changelog: https://github.com/Slowlyo/owl-admin/compare/v3.1.5...v3.1.6\n\nView on GitHub\n\n\nv3.1.5#\n\n> 2024-01-11 09:26:47\n\n * 调整\n   \n   * 合并 PR (#63 )\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n\n\nWhat's Changed#\n\n * 在获取数据前先过滤 null 值 by @NotMings in https://github.com/Slowlyo/owl-admin/pull/63\n\nFull Changelog: https://github.com/Slowlyo/owl-admin/compare/v3.1.4...v3.1.5\n\nView on GitHub\n\n\nv3.1.4#\n\n> 2024-01-05 09:57:28\n\n * 调整\n   \n   * 可独立配置 admin 数据库连接\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n\n--------------------------------------------------------------------------------\n\n\nWhat's Changed#\n\n * 数据库连接可配置 by @NotMings in https://github.com/Slowlyo/owl-admin/pull/61\n\n\nNew Contributors#\n\n * @NotMings made their first contribution in\n   https://github.com/Slowlyo/owl-admin/pull/61\n\nFull Changelog: https://github.com/Slowlyo/owl-admin/compare/v3.1.3...v3.1.4\n\nView on GitHub\n\n\nv3.1.3#\n\n> 2023-12-30 22:18:43\n\n * 调整\n   \n   * amis 更新 v6.0.0\n   \n   * 修复 v3.1.2 产生的部分问题 (#60)\n\n * 升级步骤\n   \n   * 为了避免产生意料以外的问题, 请删除 /public/admin 目录\n   * 获取最新版本: composer update slowlyo/owl-admin\n   * 发布资源: php artisan admin:publish --assets --config --force\n     * 如果使用了 modules 需要执行: php artisan admin-module:update\n\nView on GitHub\n\n\nv3.1.2#\n\n> 2023-12-28 10:57:19\n\n * 调整\n   \n   * 更改应用访问逻辑, 适配 laravel-debugbar\n\n * 升级步骤\n   \n   * 为了避免产生意料以外的问题, 请删除 /public/admin 目录\n   * 获取最新版本: composer update slowlyo/owl-admin\n   * 发布资源: php artisan admin:publish --assets --config --force\n     * 如果使用了 modules 需要执行: php artisan admin-module:update\n\nView on GitHub\n\n\nv3.1.1#\n\n> 2023-12-28 10:55:28\n\n * 调整\n   \n   * 顶部菜单异常展开问题修复 (#57 )\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n   * 发布资源: php artisan admin:publish --assets --force\n     * 如果使用了 modules 需要执行: php artisan admin-module:update\n\nView on GitHub\n\n\nv3.1.0#\n\n> 2023-12-16 14:48:13\n\n * 调整\n   \n   * 退出登录, 保留当前页面路径\n   \n   * 增加自定义组件 Watermark\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n   * 发布资源: php artisan admin:publish --assets --force\n     * 如果使用了 modules 需要执行: php artisan admin-module:update\n\nView on GitHub\n\n\nv3.0.9#\n\n> 2023-12-16 10:45:25\n\n * 调整\n   \n   * 滚动条样式优化\n   \n   * amis 更新 v3.6.3\n   \n   * Top 布局菜单优化 (#54 )\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n   * 发布资源: php artisan admin:publish --assets --force\n     * 如果使用了 modules 需要执行: php artisan admin-module:update\n\nView on GitHub\n\n\nv3.0.8#\n\n> 2023-12-01 23:02:11\n\n * 调整\n   \n   * 整体边框颜色减淡\n   \n   * amis 更新 v3.6.1\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n   * 发布资源: php artisan admin:publish --assets --force\n     * 如果使用了 modules 需要执行: php artisan admin-module:update\n\nView on GitHub\n\n\nv3.0.7#\n\n> 2023-12-01 09:07:57\n\n * 调整\n   \n   * 双栏布局 二级菜单顶部展示文字更改为 应用名称\n   \n   * 扩展管理&代码生成器, 部分框架代码优化\n   \n   * amis 更新 v3.6.0 (#51)\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n   * 发布资源: php artisan admin:publish --assets --force\n     * 如果使用了 modules 需要执行: php artisan admin-module:update\n\nView on GitHub\n\n\nv3.0.6#\n\n> 2023-11-24 22:09:00\n\n * 调整\n   \n   * 修复 双栏布局 显示不完整问题\n   \n   * 补充前端代码注释\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n   * 发布资源: php artisan admin:publish --assets --force\n     * 如果使用了 modules 需要执行: php artisan admin-module:update\n\nView on GitHub\n\n\nv3.0.5#\n\n> 2023-11-22 10:21:11\n\n * 调整\n   \n   * amis 更新 v3.5.3\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n   * 发布资源: php artisan admin:publish --assets --force\n     * 如果使用了 modules 需要执行: php artisan admin-module:update\n\nView on GitHub\n\n\nv3.0.4#\n\n> 2023-11-13 15:21:25\n\n * 调整\n   \n   * BaseRenderer 支持 Macro\n   * 修复无法导出 Excel 问题 (#49)\n   * 处理 Nav 不会根据地址自动选中的问题\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n   * 发布资源: php artisan admin:publish --assets --force\n     * 如果使用了 modules 需要执行: php artisan admin-module:update\n\nView on GitHub\n\n\nv3.0.3#\n\n> 2023-11-08 11:10:43\n\n * 新增\n   \n   * 基于 condition-builder 组件实现的条件组合查询\n   * 代码生成器-字段配置: 新增字段配置保存功能\n\n * 调整\n   \n   * 处理 WangEditor 上传文件提示登录问题\n   * laravel-modules 适配 v10 版本\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n   * 发布资源: php artisan admin:publish --assets --lang --force\n     \n     * 如果使用了 modules 需要执行: php artisan admin-module:update\n\nView on GitHub\n\n\nv3.0.2#\n\n> 2023-11-02 13:59:16\n\n * 变更\n   \n   * amis 更新 v3.5.2\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n   * 发布资源: php artisan admin:publish --assets --force\n     \n     * 如果使用了 modules 需要执行: php artisan admin-module:update\n\nView on GitHub\n\n\nv3.0.1#\n\n> 2023-11-02 11:19:34\n\n * 变更\n   \n   * 部分样式优化\n   * amis 更新 v3.5.1\n\n * 升级步骤\n   \n   * 获取最新版本: composer update slowlyo/owl-admin\n   * 发布资源: php artisan admin:publish --assets --force\n     \n     * 如果使用了 modules 需要执行: php artisan admin-module:update\n\nView on GitHub\n\n\nv3.0.0#\n\n> 2023-10-31 22:01:52\n\n\n调整#\n\n * 前端\n   \n   * 整体 layout 重写优化\n   * 组件库由 arco-design react 更换为 antd\n   * 增加全局 loading 遮罩\n   * 增加 深色主题\n   * 弃用 UnoCSS, 改用 TailwindCSS\n   * amis 更新 v3.5.0\n   * amis 获取页面时携带当前 url 信息 (#41)\n   * 固定底部栏\n\n * 后端\n   \n   * 框架配置: auth 和 permission 开关分离 (#43)\n   * 弃用 amisMake(), 由 amis() 替代\n   * 新增 admin_abort() 、admin_abort_if() 方法\n\n\n修复#\n\n * 多应用模式下, 设置权限不生效, 非超管无菜单 (#40)\n\n\n从低版本升级#\n\n 1. 获取最新框架代码: composer require slowlyo/owl-admin:v3.0.0\n 2. 升级框架: php artisan admin:update --v=300 (如有需要, 请先备份 config/admin.php)\n 3. 全局搜索 amisMake( 替换为 amis( (可选)\n\nView on GitHub\n\n\nv2.8.2#\n\n> 2023-09-26 15:27:56\n\n\nWhat's Changed#\n\n * 代码生成器与权限生成功能修复 by @wowthree in https://github.com/Slowlyo/owl-admin/pull/43\n\n\nNew Contributors#\n\n * @wowthree made their first contribution in\n   https://github.com/Slowlyo/owl-admin/pull/43\n\nFull Changelog: https://github.com/Slowlyo/owl-admin/compare/v2.8.1...v2.8.2\n\nView on GitHub\n\n\nv2.8.1#\n\n> 2023-09-01 10:05:05\n\n更新 amis v3.4.0\n\n\n更新方式#\n\n * composer require slowlyo/owl-admin 获取最新框架代码\n * 执行 php artisan admin:publish --assets --force 发布前端资源\n\nView on GitHub\n\n\nv2.8.0#\n\n> 2023-08-29 14:03:49\n\n\n修复#\n\n * 菜单名称重复, 导致权限自动生成失败 (#34 )\n * 查询时携带排序条件, 需要清除默认排序条件 (#33 )\n\nFull Changelog: https://github.com/Slowlyo/owl-admin/compare/v2.7.9...v2.8.0\n\nView on GitHub\n\n\nv2.7.9#\n\n> 2023-08-15 21:16:18\n\n扩展增加 change 事件\n\n无需发布资源\n\nView on GitHub\n\n\nv2.7.8#\n\n> 2023-08-07 20:55:57\n\n修复控制器代码生成错误问题\n\n无需发布资源\n\nView on GitHub\n\n\nv2.7.7#\n\n> 2023-08-07 17:26:35\n\n修复amis更新3.3导致的部分问题\n\n无需发布资源\n\nView on GitHub\n\n\nv2.7.6#\n\n> 2023-08-01 14:09:15\n\n更新内容#\n\n * 支持菜单参数\n * 支持自定义菜单对应的组件\n * 支持无菜单页面\n * amis 更新 v3.3.0\n\n更新方式#\n\n 1. composer require slowlyo/owl-admin 获取最新框架代码\n 2. 执行 php artisan admin:update --v=276 升级框架\n\nView on GitHub\n\n\nv2.7.5#\n\n> 2023-07-24 14:16:23\n\n优化扩展管理\n\n无需发布资源~\n\nView on GitHub\n\n\nv2.7.4#\n\n> 2023-07-18 15:01:07\n\n管理员保存问题修复\n\n无需发布资源\n\nView on GitHub\n\n\nv2.7.3#\n\n> 2023-07-17 14:50:01\n\n多应用, 权限生成功能问题修复, 中间件调整\n\nView on GitHub\n\n\nv2.7.2#\n\n> 2023-07-04 22:25:01\n\n更新内容#\n\n * 部分框架代码调整\n * 移除 Class OwlAdmin\n * 优化框架路由加载, 解决模块路由缓存问题\n\n更新方式#\n\n 1. composer require slowlyo/owl-admin 获取最新框架代码\n\nView on GitHub\n\n\nv2.7.1#\n\n> 2023-07-03 22:58:50\n\n更新内容#\n\n * amis 更新 v3.2.0\n * crud 支持基础快速编辑\n * 由于3个富文本编辑器上传api各不相同, 移除组件内的默认的 api 设置\n\n更新方式#\n\n 1. composer require slowlyo/owl-admin 获取最新框架代码\n 2. php artisan admin:publish --assets --force 发布静态资源``\n\nView on GitHub\n\n\nv2.7.0#\n\n> 2023-07-02 22:54:52\n\n更新内容#\n\n * ✨ 适配 laravel-modules , 现在可以很方便在应用中创建多个全新的后台模块了~\n * 移除了控制器中的 rowActionOnlyEditAndDelete() 方法\n * 调整 rowActions() 方法, 可通过向该方法的第一个参数传入 数组 来自定义行操作按钮\n\n更新方式#\n\n 1. composer require slowlyo/owl-admin 获取最新框架代码\n 2. php artisan admin:publish --force 发布静态资源\n\nView on GitHub\n\n\nv2.6.10#\n\n> 2023-06-26 19:56:03\n\n修复 v2.6.9 引发的中间件异常的问题, 此版本无需发布资源\n\nView on GitHub\n\n\nv2.6.9#\n\n> 2023-06-25 24:03:10\n\n更新内容#\n\n * ✨ 增加组件鉴权, 更精细化的权限控制\n * 框架中间件代码优化\n * 前端弹窗提示逻辑优化\n\n更新方式#\n\n 1. composer require slowlyo/owl-admin 获取最新框架代码\n 2. php artisan admin:publish --assets --lang --force 发布静态资源\n\nView on GitHub\n\n\nv2.6.8#\n\n> 2023-06-24 15:58:13\n\n更新内容#\n\n * 新增: 可动态添加菜单\n\n更新方式#\n\n 1. composer require slowlyo/owl-admin 获取最新框架代码\n\nView on GitHub\n\n\nv2.6.7#\n\n> 2023-06-20 24:29:28\n\n更新内容#\n\n * ✨ 新开发工具: 可视化编辑器\n * 问题修复\n   * tab栏未启用时, form报错的问题\n   * 编辑/详情页面面包屑不显示问题\n\n更新方式#\n\n 1. composer require slowlyo/owl-admin 获取最新框架代码\n 2. php artisan admin:publish --assets --lang --force 发布静态资源\n\nView on GitHub\n\n\nv2.6.6#\n\n> 2023-06-18 20:42:42\n\n更新内容#\n\n * 移除暗色模式\n * 移除无用的前端代码\n\n更新方式#\n\n 1. composer require slowlyo/owl-admin 获取最新框架代码\n 2. php artisan admin:publish --assets --config --force 发布静态资源\n\nView on GitHub\n\n\nv2.6.5#\n\n> 2023-06-14 17:28:47\n\n\n更新内容#\n\n * 菜单展开/选中逻辑优化\n * amisPage增加loading动画\n * 菜单管理功能中, 父级菜单选择框数据优化\n * Alert 组件样式优化\n\n\n更新方式#\n\n 1. composer require slowlyo/owl-admin 获取最新框架代码\n 2. php artisan admin:publish --assets --force 发布静态资源\n\nView on GitHub\n\n\nv2.6.4#\n\n> 2023-06-14 09:28:40\n\n\n更新内容#\n\n * 菜单样式优化\n * 修复 admin:gen-code-clear 命令的问题\n\n\n更新方式#\n\n 1. composer require slowlyo/owl-admin 获取最新框架代码\n 2. php artisan admin:publish --assets --force 发布静态资源\n\nView on GitHub\n\n\nv2.6.3#\n\n> 2023-06-09 17:00:32\n\n\n更新内容#\n\n * 部分样式优化\n * 消息提醒优化\n * 优化生成菜单生成逻辑\n * 框架模型类问题修复\n * 角色管理中一处多语言问题优化\n\n\n更新方式#\n\n 1. composer require slowlyo/owl-admin 获取最新框架代码\n 2. php artisan admin:publish --assets --lang --force 发布静态资源\n\nView on GitHub\n\n\nv2.6.2#\n\n> 2023-06-08 17:50:00\n\n\n修复#\n\n * 筛选失效问题 (v2.6.0 产生的bug)\n * 框架表格初始化字段补充 (v2.5.9 产生的bug, 仅新安装的应用会有该问题)\n\n\n更新方式#\n\n 1. composer require slowlyo/owl-admin 获取最新框架代码\n 2. php artisan admin:publish --assets --force 发布静态资源\n\nView on GitHub\n\n\nv2.6.1#\n\n> 2023-06-07 21:36:41\n\n\n更新内容#\n\n * tab栏在新安装的应用中默认启用\n * 优化tab栏逻辑\n * 页面模式的表单/详情, 适配tab栏交互逻辑\n * 新增全局js方法 window.$owl.closeTabByPath()\n\n\n更新方式#\n\n 1. composer require slowlyo/owl-admin 获取最新框架代码\n 2. php artisan admin:publish --assets --force 发布静态资源\n\nView on GitHub\n\n\nv2.6.0#\n\n> 2023-06-06 22:45:10\n\n\n更新内容#\n\n * amis 版本更新至 v3.1.1\n * 优化\n   * 页面刷新保留查询参数\n   * 优化部分硬编码\n\n\n更新方式#\n\n 1. composer require slowlyo/owl-admin 获取最新框架代码\n 2. php artisan admin:publish --assets --config --force 更新框架资源\n\nView on GitHub\n\n\nv2.5.9#\n\n> 2023-06-05 15:03:11\n\n\n更新内容#\n\n * 代码生成器优化\n   * 增加: 表单可配置为页面/弹窗, 可配置弹窗大小\n   * 优化记录储存数据\n   * 增加单条记录导入导出(方便生成记录共享)\n\n\n更新方式#\n\n 1. 使用 composer require slowlyo/owl-admin 获取最新版本 (v2.5.9)\n 2. 执行 php artisan admin:update --v=259 升级框架\n\nView on GitHub\n\n\nv2.5.8#\n\n> 2023-06-04 22:32:17\n\n\n更新内容#\n\n✨ 让一个完整的功能, 召之即来挥之即去~\n\n * 增加 artisan 命令 admin:gen-code-clear\n   * 作用: 清除代码生成器生成的内容\n     * controller 文件\n     * model 文件\n     * service 文件\n     * migration 文件及迁移记录\n     * route 文件\n     * 创建的数据表\n   * 使用: php artisan admin:gen-code-clear --id=1\n     * 此处 id 为代码生成器生成的记录的 id 值\n\n\n更新方式#\n\n * 通过 composer 获取最新版本\n   * composer require slowlyo/owl-admin\n\nView on GitHub\n\n\nv2.5.7#\n\n> 2023-06-03 25:48:29\n\n\n更新内容#\n\n * amis 升级 v3.1.0\n * service 增加对 searchable 属性的支持\n   * 原理: 判断请求参数中是否存在字段名, 如果存在则使用 where 进行模糊查询\n * ️🧨代码生成器升级\n   * 支持预览\n   * 支持保存记录\n   * 支持字段组件配置\n   * 支持菜单/路由自动生成\n * 增加 artisan 命令\n   * admin:update: 框架升级\n   * admin:gen-route: 根据代码生成记录维护框架路由\n\n\n更新步骤#\n\n 1. 使用 composer require slowlyo/owl-admin 获取最新版本 (v2.5.7)\n 2. 执行 php artisan admin:update --v=257 命令升级框架\n 3. 执行 php artisan cache:clear 清除缓存 (可选)\n\nView on GitHub\n\n\nv2.5.6#\n\n> 2023-05-17 20:49:05\n\namis 调试工具 现在可由 admin.show_development_tools 控制\n\n注意#\n\n此次更新需要重新发布 assets\n\nphp artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv2.5.5#\n\n> 2023-05-17 10:18:50\n\n\n更新内容#\n\n * 框架代码优化\n * 提供可追加 nav 的方法\n\n\n注意#\n\n此次更新涉及 config、lang、assets、views\n\n全部的资源都需要重新发布\n\n * 覆盖 config 前注意备份自己已有的配置信息\n * 如果自行该更了前端, 发布 views 前注意备份自己的代码\n\n在清楚注意事项后, 你可以直接执行以下命令\n\n\n\nView on GitHub\n\n\nv2.5.4#\n\n> 2023-05-15 08:37:30\n\n * 代码生成优化\n\nView on GitHub\n\n\nv2.5.3#\n\n> 2023-05-13 20:11:31\n\n * 优化样式\n\n\n注意#\n\n此次升级需要重新发布 assets\n\nphp artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv2.5.2#\n\n> 2023-05-13 19:50:49\n\n * 升级 amis v3.0\n\n * 页面缓存逻辑优化 #I71QJ3\n\n * 增加配置项: 配置某些路由不追加额外路由\n\n\n注意#\n\n此次升级需要重新发布资源与配置文件\n\nphp artisan admin:publish --assets --config --force\n\nView on GitHub\n\n\nv2.5.1#\n\n> 2023-05-13 19:44:47\n\n代码生成器问题修复\n\nView on GitHub\n\n\nv2.5.0#\n\n> 2023-04-27 16:23:35\n\n修复日期组件显示英文的问题\n\n需要重新发布 assets#\n\nphp artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv2.4.9#\n\n> 2023-04-27 13:41:33\n\n代码生成器使用体验优化\n\nView on GitHub\n\n\nv2.4.8#\n\n> 2023-04-23 15:19:50\n\nRenderer 优化\n\nView on GitHub\n\n\nv2.4.7#\n\n> 2023-04-23 15:18:28\n\n * 左侧菜单模式下菜单滚动问题修复\n * Tab 增加定位当前选中项\n\n需要重新发布 assets#\n\nphp artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv2.4.6#\n\n> 2023-04-21 09:45:20\n\n样式优化#\n\n * 多层级菜单title不显示问题\n * inputNumber 暗色悬浮背景问题\n * 菜单滚动问题\n\n需要重新发布 assets#\n\nphp artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv2.4.5#\n\n> 2023-04-20 15:53:19\n\n优化#\n\n * 用户菜单优化\n * 登录成功逻辑优化\n * tab缓存逻辑优化\n\n注意#\n\n此次更新需要重新发布 assets php artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv2.4.4#\n\n> 2023-04-20 14:48:16\n\n修复#\n\nTab 栏样式问题\n\n新增#\n\n * Tab 栏增加滚轮横向滚动\n * ✨自定义组件: wangEditor 富文本编辑器\n\n注意#\n\n此次更新需要重新发布 assets php artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv2.4.3#\n\n> 2023-04-19 20:24:36\n\n修复copy失效的问题\n\n首页模板调整\n\n注意#\n\n此次更新需要重新发布 assets\n\nphp artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv2.4.2#\n\n> 2023-04-19 10:06:47\n\n移除更多扩展中的去安装操作\n\nView on GitHub\n\n\nv2.4.1#\n\n> 2023-04-18 23:12:18\n\n移除内置的 Terminal\n\nView on GitHub\n\n\nv2.4.0#\n\n> 2023-04-17 21:52:05\n\nTab 关闭逻辑优化\n\n注意#\n\n此次更新需要重新发布 assets\n\nphp artisan admin:publish --assets --force\n\nView on GitHub\n\n\nv2.3.9#\n\n> 2023-04-17 16:40:00\n\n✨ 新增 Tab 栏\n\n注意#\n\n此次更新需要重新发布 assets 和 config\n\nphp artisan admin:publish --assets --config --force\n\nView on GitHub","routePath":"/docs/changelog/","lang":"","toc":[{"text":"v4.3.8","id":"v438","depth":2,"charIndex":-1},{"text":"更新内容","id":"更新内容","depth":3,"charIndex":32},{"text":"低版本升级步骤","id":"低版本升级步骤","depth":3,"charIndex":74},{"text":"v4.3.7","id":"v437","depth":2,"charIndex":325},{"text":"更新内容","id":"更新内容-1","depth":3,"charIndex":358},{"text":"低版本升级步骤","id":"低版本升级步骤-1","depth":3,"charIndex":427},{"text":"v4.3.6","id":"v436","depth":2,"charIndex":554},{"text":"更新内容","id":"更新内容-2","depth":3,"charIndex":587},{"text":"低版本升级步骤","id":"低版本升级步骤-2","depth":3,"charIndex":636},{"text":"v4.3.5","id":"v435","depth":2,"charIndex":709},{"text":"更新内容","id":"更新内容-3","depth":3,"charIndex":742},{"text":"低版本升级步骤","id":"低版本升级步骤-3","depth":3,"charIndex":776},{"text":"v4.3.4","id":"v434","depth":2,"charIndex":849},{"text":"更新内容","id":"更新内容-4","depth":3,"charIndex":882},{"text":"低版本升级步骤","id":"低版本升级步骤-4","depth":3,"charIndex":945},{"text":"v4.3.3","id":"v433","depth":2,"charIndex":1072},{"text":"更新内容","id":"更新内容-5","depth":3,"charIndex":1105},{"text":"低版本升级步骤","id":"低版本升级步骤-5","depth":3,"charIndex":1202},{"text":"v4.3.2","id":"v432","depth":2,"charIndex":1353},{"text":"更新内容","id":"更新内容-6","depth":3,"charIndex":1386},{"text":"低版本升级步骤","id":"低版本升级步骤-6","depth":3,"charIndex":1476},{"text":"v4.3.1","id":"v431","depth":2,"charIndex":1627},{"text":"更新内容","id":"更新内容-7","depth":3,"charIndex":1660},{"text":"低版本升级步骤","id":"低版本升级步骤-7","depth":3,"charIndex":1747},{"text":"v4.3.0","id":"v430","depth":2,"charIndex":1898},{"text":"更新内容","id":"更新内容-8","depth":3,"charIndex":1931},{"text":"低版本升级步骤","id":"低版本升级步骤-8","depth":3,"charIndex":1965},{"text":"v4.2.9","id":"v429","depth":2,"charIndex":2092},{"text":"更新内容","id":"更新内容-9","depth":3,"charIndex":2125},{"text":"低版本升级步骤","id":"低版本升级步骤-9","depth":3,"charIndex":2197},{"text":"v4.2.8","id":"v428","depth":2,"charIndex":2270},{"text":"更新内容","id":"更新内容-10","depth":3,"charIndex":2303},{"text":"低版本升级步骤","id":"低版本升级步骤-10","depth":3,"charIndex":2363},{"text":"v4.2.7","id":"v427","depth":2,"charIndex":2436},{"text":"更新内容","id":"更新内容-11","depth":3,"charIndex":2469},{"text":"低版本升级步骤","id":"低版本升级步骤-11","depth":3,"charIndex":2531},{"text":"v4.2.6","id":"v426","depth":2,"charIndex":2604},{"text":"更新内容","id":"更新内容-12","depth":3,"charIndex":2637},{"text":"低版本升级步骤","id":"低版本升级步骤-12","depth":3,"charIndex":2676},{"text":"v4.2.5","id":"v425","depth":2,"charIndex":2749},{"text":"更新内容","id":"更新内容-13","depth":3,"charIndex":2782},{"text":"低版本升级步骤","id":"低版本升级步骤-13","depth":3,"charIndex":2825},{"text":"v4.2.4","id":"v424","depth":2,"charIndex":2898},{"text":"更新内容","id":"更新内容-14","depth":3,"charIndex":2931},{"text":"低版本升级步骤","id":"低版本升级步骤-14","depth":3,"charIndex":2957},{"text":"v4.2.3","id":"v423","depth":2,"charIndex":3030},{"text":"更新内容","id":"更新内容-15","depth":3,"charIndex":3063},{"text":"低版本升级步骤","id":"低版本升级步骤-15","depth":3,"charIndex":3130},{"text":"v4.2.2","id":"v422","depth":2,"charIndex":3203},{"text":"修复安装异常","id":"修复安装异常","depth":3,"charIndex":3236},{"text":"v4.2.1","id":"v421","depth":2,"charIndex":3262},{"text":"更新内容","id":"更新内容-16","depth":3,"charIndex":3295},{"text":"低版本升级步骤","id":"低版本升级步骤-16","depth":3,"charIndex":3414},{"text":"New Contributors","id":"new-contributors","depth":2,"charIndex":3530},{"text":"v4.2.0","id":"v420","depth":2,"charIndex":3660},{"text":"更新内容","id":"更新内容-17","depth":3,"charIndex":3693},{"text":"低版本升级步骤","id":"低版本升级步骤-17","depth":3,"charIndex":3823},{"text":"v4.1.11","id":"v4111","depth":2,"charIndex":3950},{"text":"更新内容","id":"更新内容-18","depth":3,"charIndex":3984},{"text":"低版本升级步骤","id":"低版本升级步骤-18","depth":3,"charIndex":4011},{"text":"v4.1.10","id":"v4110","depth":2,"charIndex":4084},{"text":"更新内容","id":"更新内容-19","depth":3,"charIndex":4118},{"text":"低版本升级步骤","id":"低版本升级步骤-19","depth":3,"charIndex":4143},{"text":"v4.1.9","id":"v419","depth":2,"charIndex":4216},{"text":"更新内容","id":"更新内容-20","depth":3,"charIndex":4249},{"text":"低版本升级步骤","id":"低版本升级步骤-20","depth":3,"charIndex":4269},{"text":"v4.1.8","id":"v418","depth":2,"charIndex":4342},{"text":"更新内容","id":"更新内容-21","depth":3,"charIndex":4375},{"text":"低版本升级步骤","id":"低版本升级步骤-21","depth":3,"charIndex":4496},{"text":"v4.1.7","id":"v417","depth":2,"charIndex":4569},{"text":"更新内容","id":"更新内容-22","depth":3,"charIndex":4602},{"text":"低版本升级步骤","id":"低版本升级步骤-22","depth":3,"charIndex":4671},{"text":"v4.1.6","id":"v416","depth":2,"charIndex":4744},{"text":"更新内容","id":"更新内容-23","depth":3,"charIndex":4777},{"text":"低版本升级步骤","id":"低版本升级步骤-23","depth":3,"charIndex":4811},{"text":"v4.1.5","id":"v415","depth":2,"charIndex":4938},{"text":"更新内容","id":"更新内容-24","depth":3,"charIndex":4971},{"text":"低版本升级步骤","id":"低版本升级步骤-24","depth":3,"charIndex":5028},{"text":"v4.1.4","id":"v414","depth":2,"charIndex":5101},{"text":"更新内容","id":"更新内容-25","depth":3,"charIndex":5134},{"text":"低版本升级步骤","id":"低版本升级步骤-25","depth":3,"charIndex":5175},{"text":"v4.1.3","id":"v413","depth":2,"charIndex":5248},{"text":"更新内容","id":"更新内容-26","depth":3,"charIndex":5281},{"text":"低版本升级步骤","id":"低版本升级步骤-26","depth":3,"charIndex":5322},{"text":"v4.1.2","id":"v412","depth":2,"charIndex":5395},{"text":"更新内容","id":"更新内容-27","depth":3,"charIndex":5428},{"text":"低版本升级步骤","id":"低版本升级步骤-27","depth":3,"charIndex":5472},{"text":"v4.1.1","id":"v411","depth":2,"charIndex":5545},{"text":"更新内容","id":"更新内容-28","depth":3,"charIndex":5578},{"text":"低版本升级步骤","id":"低版本升级步骤-28","depth":3,"charIndex":5616},{"text":"v4.1.0","id":"v410","depth":2,"charIndex":5689},{"text":"更新内容","id":"更新内容-29","depth":3,"charIndex":5722},{"text":"低版本升级步骤","id":"低版本升级步骤-29","depth":3,"charIndex":5796},{"text":"v4.0.9","id":"v409","depth":2,"charIndex":5869},{"text":"更新内容","id":"更新内容-30","depth":3,"charIndex":5902},{"text":"低版本升级步骤","id":"低版本升级步骤-30","depth":3,"charIndex":5936},{"text":"v4.0.8","id":"v408","depth":2,"charIndex":6063},{"text":"更新内容","id":"更新内容-31","depth":3,"charIndex":6096},{"text":"低版本升级步骤","id":"低版本升级步骤-31","depth":3,"charIndex":6138},{"text":"v4.0.7","id":"v407","depth":2,"charIndex":6211},{"text":"更新内容","id":"更新内容-32","depth":3,"charIndex":6244},{"text":"低版本升级步骤","id":"低版本升级步骤-32","depth":3,"charIndex":6362},{"text":"v4.0.6","id":"v406","depth":2,"charIndex":6435},{"text":"更新内容","id":"更新内容-33","depth":3,"charIndex":6468},{"text":"低版本升级步骤","id":"低版本升级步骤-33","depth":3,"charIndex":6534},{"text":"v4.0.5","id":"v405","depth":2,"charIndex":6661},{"text":"更新内容","id":"更新内容-34","depth":3,"charIndex":6694},{"text":"低版本升级步骤","id":"低版本升级步骤-34","depth":3,"charIndex":6847},{"text":"v4.0.4","id":"v404","depth":2,"charIndex":6974},{"text":"更新内容","id":"更新内容-35","depth":3,"charIndex":7007},{"text":"低版本升级步骤","id":"低版本升级步骤-35","depth":3,"charIndex":7115},{"text":"v4.0.3","id":"v403","depth":2,"charIndex":7188},{"text":"更新内容","id":"更新内容-36","depth":3,"charIndex":7221},{"text":"低版本升级步骤","id":"低版本升级步骤-36","depth":3,"charIndex":7298},{"text":"v4.0.2","id":"v402","depth":2,"charIndex":7425},{"text":"更新内容","id":"更新内容-37","depth":3,"charIndex":7458},{"text":"低版本升级步骤","id":"低版本升级步骤-37","depth":3,"charIndex":7550},{"text":"v4.0.1","id":"v401","depth":2,"charIndex":7623},{"text":"更新内容","id":"更新内容-38","depth":3,"charIndex":7656},{"text":"低版本升级步骤","id":"低版本升级步骤-38","depth":3,"charIndex":7775},{"text":"v4.0.0","id":"v400","depth":2,"charIndex":7848},{"text":"更新内容","id":"更新内容-39","depth":3,"charIndex":7881},{"text":"低版本升级步骤","id":"低版本升级步骤-39","depth":3,"charIndex":8376},{"text":"v3.9.7","id":"v397","depth":2,"charIndex":8622},{"text":"更新内容","id":"更新内容-40","depth":3,"charIndex":8655},{"text":"低版本升级步骤","id":"低版本升级步骤-40","depth":3,"charIndex":8791},{"text":"v3.9.6","id":"v396","depth":2,"charIndex":8864},{"text":"更新内容","id":"更新内容-41","depth":3,"charIndex":8897},{"text":"低版本升级步骤","id":"低版本升级步骤-41","depth":3,"charIndex":9016},{"text":"v3.9.5","id":"v395","depth":2,"charIndex":9089},{"text":"更新内容","id":"更新内容-42","depth":3,"charIndex":9122},{"text":"低版本升级步骤","id":"低版本升级步骤-42","depth":3,"charIndex":9260},{"text":"v3.9.4","id":"v394","depth":2,"charIndex":9333},{"text":"更新内容","id":"更新内容-43","depth":3,"charIndex":9366},{"text":"低版本升级步骤","id":"低版本升级步骤-43","depth":3,"charIndex":9579},{"text":"v3.9.3","id":"v393","depth":2,"charIndex":9652},{"text":"更新内容","id":"更新内容-44","depth":3,"charIndex":9685},{"text":"低版本升级步骤","id":"低版本升级步骤-44","depth":3,"charIndex":9819},{"text":"v3.9.2","id":"v392","depth":2,"charIndex":9946},{"text":"更新内容","id":"更新内容-45","depth":3,"charIndex":9979},{"text":"低版本升级步骤","id":"低版本升级步骤-45","depth":3,"charIndex":10197},{"text":"v3.9.1","id":"v391","depth":2,"charIndex":10324},{"text":"更新内容","id":"更新内容-46","depth":3,"charIndex":10357},{"text":"低版本升级步骤","id":"低版本升级步骤-46","depth":3,"charIndex":10391},{"text":"v3.9.0","id":"v390","depth":2,"charIndex":10464},{"text":"更新内容","id":"更新内容-47","depth":3,"charIndex":10497},{"text":"低版本升级步骤","id":"低版本升级步骤-47","depth":3,"charIndex":10756},{"text":"v3.8.10","id":"v3810","depth":2,"charIndex":10884},{"text":"更新内容","id":"更新内容-48","depth":3,"charIndex":10918},{"text":"低版本升级步骤","id":"低版本升级步骤-48","depth":3,"charIndex":10993},{"text":"v3.8.9","id":"v389","depth":2,"charIndex":11126},{"text":"更新内容","id":"更新内容-49","depth":3,"charIndex":11159},{"text":"低版本升级步骤","id":"低版本升级步骤-49","depth":3,"charIndex":11189},{"text":"v3.8.8","id":"v388","depth":2,"charIndex":11262},{"text":"更新内容","id":"更新内容-50","depth":3,"charIndex":11295},{"text":"低版本升级步骤","id":"低版本升级步骤-50","depth":3,"charIndex":11367},{"text":"v3.8.7","id":"v387","depth":2,"charIndex":11495},{"text":"What's Changed","id":"whats-changed","depth":3,"charIndex":11528},{"text":"v3.8.6","id":"v386","depth":2,"charIndex":11720},{"text":"更新内容","id":"更新内容-51","depth":3,"charIndex":11753},{"text":"低版本升级步骤","id":"低版本升级步骤-51","depth":3,"charIndex":11790},{"text":"v3.8.5","id":"v385","depth":2,"charIndex":11863},{"text":"更新内容","id":"更新内容-52","depth":3,"charIndex":11896},{"text":"低版本升级步骤","id":"低版本升级步骤-52","depth":3,"charIndex":11945},{"text":"v3.8.4","id":"v384","depth":2,"charIndex":12018},{"text":"更新内容","id":"更新内容-53","depth":3,"charIndex":12051},{"text":"低版本升级步骤","id":"低版本升级步骤-53","depth":3,"charIndex":12074},{"text":"v3.8.3","id":"v383","depth":2,"charIndex":12147},{"text":"更新内容","id":"更新内容-54","depth":3,"charIndex":12180},{"text":"低版本升级步骤","id":"低版本升级步骤-54","depth":3,"charIndex":12215},{"text":"v3.8.2","id":"v382","depth":2,"charIndex":12288},{"text":"更新内容","id":"更新内容-55","depth":3,"charIndex":12321},{"text":"低版本升级步骤","id":"低版本升级步骤-55","depth":3,"charIndex":12356},{"text":"v3.8.1","id":"v381","depth":2,"charIndex":12484},{"text":"更新内容","id":"更新内容-56","depth":3,"charIndex":12517},{"text":"低版本升级步骤","id":"低版本升级步骤-56","depth":3,"charIndex":12580},{"text":"v3.8.0","id":"v380","depth":2,"charIndex":12653},{"text":"更新内容","id":"更新内容-57","depth":3,"charIndex":12686},{"text":"低版本升级步骤","id":"低版本升级步骤-57","depth":3,"charIndex":12939},{"text":"v3.7.4","id":"v374","depth":2,"charIndex":13012},{"text":"更新内容","id":"更新内容-58","depth":3,"charIndex":13045},{"text":"低版本升级步骤","id":"低版本升级步骤-58","depth":3,"charIndex":13101},{"text":"v3.7.3","id":"v373","depth":2,"charIndex":13174},{"text":"更新内容","id":"更新内容-59","depth":3,"charIndex":13207},{"text":"低版本升级步骤","id":"低版本升级步骤-59","depth":3,"charIndex":13266},{"text":"v3.7.2","id":"v372","depth":2,"charIndex":13380},{"text":"v3.7.1","id":"v371","depth":2,"charIndex":13444},{"text":"v3.7.0","id":"v370","depth":2,"charIndex":13522},{"text":"更新内容","id":"更新内容-60","depth":3,"charIndex":13555},{"text":"低版本升级步骤","id":"低版本升级步骤-60","depth":3,"charIndex":13842},{"text":"v3.6.10","id":"v3610","depth":2,"charIndex":13979},{"text":"更新内容","id":"更新内容-61","depth":3,"charIndex":14013},{"text":"低版本升级步骤","id":"低版本升级步骤-61","depth":3,"charIndex":14072},{"text":"v3.6.9","id":"v369","depth":2,"charIndex":14145},{"text":"更新内容","id":"更新内容-62","depth":3,"charIndex":14178},{"text":"低版本升级步骤","id":"低版本升级步骤-62","depth":3,"charIndex":14212},{"text":"v3.6.8","id":"v368","depth":2,"charIndex":14340},{"text":"更新内容","id":"更新内容-63","depth":3,"charIndex":14373},{"text":"低版本升级步骤","id":"低版本升级步骤-63","depth":3,"charIndex":14457},{"text":"v3.6.7","id":"v367","depth":2,"charIndex":14585},{"text":"v3.6.6","id":"v366","depth":2,"charIndex":14711},{"text":"v3.6.5","id":"v365","depth":2,"charIndex":14837},{"text":"v3.6.4","id":"v364","depth":2,"charIndex":14905},{"text":"更新内容","id":"更新内容-64","depth":3,"charIndex":14938},{"text":"低版本升级步骤","id":"低版本升级步骤-64","depth":3,"charIndex":15078},{"text":"v3.6.3","id":"v363","depth":2,"charIndex":15206},{"text":"What's Changed","id":"whats-changed-1","depth":3,"charIndex":15239},{"text":"New Contributors","id":"new-contributors-1","depth":3,"charIndex":15358},{"text":"v3.6.2","id":"v362","depth":2,"charIndex":15567},{"text":"v3.6.1","id":"v361","depth":2,"charIndex":15635},{"text":"更新内容","id":"更新内容-65","depth":3,"charIndex":15668},{"text":"低版本升级步骤","id":"低版本升级步骤-65","depth":3,"charIndex":15711},{"text":"v3.6.0","id":"v360","depth":2,"charIndex":15796},{"text":"更新内容","id":"更新内容-66","depth":3,"charIndex":15829},{"text":"低版本升级步骤","id":"低版本升级步骤-66","depth":3,"charIndex":16061},{"text":"v3.5.8","id":"v358","depth":2,"charIndex":16187},{"text":"v3.5.7","id":"v357","depth":2,"charIndex":16386},{"text":"v3.5.6","id":"v356","depth":2,"charIndex":16649},{"text":"v3.5.5","id":"v355","depth":2,"charIndex":16906},{"text":"New Contributors","id":"new-contributors-2","depth":3,"charIndex":17110},{"text":"v3.5.4","id":"v354","depth":2,"charIndex":17239},{"text":"v3.5.3","id":"v353","depth":2,"charIndex":17405},{"text":"v3.5.2","id":"v352","depth":2,"charIndex":17652},{"text":"v3.5.1","id":"v351","depth":2,"charIndex":17839},{"text":"v3.5.0","id":"v350","depth":2,"charIndex":18073},{"text":"v3.4.1","id":"v341","depth":2,"charIndex":18378},{"text":"v3.4.0","id":"v340","depth":2,"charIndex":18659},{"text":"v3.3.9","id":"v339","depth":2,"charIndex":18895},{"text":"v3.3.8","id":"v338","depth":2,"charIndex":19161},{"text":"v3.3.7","id":"v337","depth":2,"charIndex":19432},{"text":"v3.3.6","id":"v336","depth":2,"charIndex":19570},{"text":"v3.3.5","id":"v335","depth":2,"charIndex":19737},{"text":"v3.3.4","id":"v334","depth":2,"charIndex":19884},{"text":"❗ 注意, 此版本更新对于 [ Excel 导出 ] 功能是破坏性的, 从低版本升级需要手动处理历史的导出逻辑代码","id":"-注意-此版本更新对于--excel-导出--功能是破坏性的-从低版本升级需要手动处理历史的导出逻辑代码","depth":3,"charIndex":19917},{"text":"v3.3.3","id":"v333","depth":2,"charIndex":20309},{"text":"v3.3.2","id":"v332","depth":2,"charIndex":20506},{"text":"v3.3.1","id":"v331","depth":2,"charIndex":20656},{"text":"v3.3.0","id":"v330","depth":2,"charIndex":20812},{"text":"v3.2.9","id":"v329","depth":2,"charIndex":21061},{"text":"v3.2.8","id":"v328","depth":2,"charIndex":21287},{"text":"v3.2.7","id":"v327","depth":2,"charIndex":21536},{"text":"v3.2.6","id":"v326","depth":2,"charIndex":21828},{"text":"v3.2.5","id":"v325","depth":2,"charIndex":22140},{"text":"What's Changed","id":"whats-changed-2","depth":3,"charIndex":22173},{"text":"v3.2.4","id":"v324","depth":2,"charIndex":22471},{"text":"v3.2.3","id":"v323","depth":2,"charIndex":22630},{"text":"v3.2.2","id":"v322","depth":2,"charIndex":22871},{"text":"v3.2.1","id":"v321","depth":2,"charIndex":23014},{"text":"v3.2.0","id":"v320","depth":2,"charIndex":23268},{"text":"What's Changed","id":"whats-changed-3","depth":3,"charIndex":23491},{"text":"New Contributors","id":"new-contributors-3","depth":3,"charIndex":23610},{"text":"v3.1.11","id":"v3111","depth":2,"charIndex":23821},{"text":"What's Changed","id":"whats-changed-4","depth":3,"charIndex":23973},{"text":"New Contributors","id":"new-contributors-4","depth":3,"charIndex":24127},{"text":"v3.1.10","id":"v3110","depth":2,"charIndex":24336},{"text":"v3.1.9","id":"v319","depth":2,"charIndex":24475},{"text":"v3.1.8","id":"v318","depth":2,"charIndex":24818},{"text":"v3.1.7","id":"v317","depth":2,"charIndex":25086},{"text":"v3.1.6","id":"v316","depth":2,"charIndex":25298},{"text":"v3.1.5","id":"v315","depth":2,"charIndex":25508},{"text":"What's Changed","id":"whats-changed-5","depth":3,"charIndex":25630},{"text":"v3.1.4","id":"v314","depth":2,"charIndex":25824},{"text":"What's Changed","id":"whats-changed-6","depth":3,"charIndex":26033},{"text":"New Contributors","id":"new-contributors-5","depth":3,"charIndex":26125},{"text":"v3.1.3","id":"v313","depth":2,"charIndex":26334},{"text":"v3.1.2","id":"v312","depth":2,"charIndex":26670},{"text":"v3.1.1","id":"v311","depth":2,"charIndex":26988},{"text":"v3.1.0","id":"v310","depth":2,"charIndex":27246},{"text":"v3.0.9","id":"v309","depth":2,"charIndex":27526},{"text":"v3.0.8","id":"v308","depth":2,"charIndex":27823},{"text":"v3.0.7","id":"v307","depth":2,"charIndex":28094},{"text":"v3.0.6","id":"v306","depth":2,"charIndex":28416},{"text":"v3.0.5","id":"v305","depth":2,"charIndex":28688},{"text":"v3.0.4","id":"v304","depth":2,"charIndex":28941},{"text":"v3.0.3","id":"v303","depth":2,"charIndex":29254},{"text":"v3.0.2","id":"v302","depth":2,"charIndex":29638},{"text":"v3.0.1","id":"v301","depth":2,"charIndex":29897},{"text":"v3.0.0","id":"v300","depth":2,"charIndex":30168},{"text":"调整","id":"调整","depth":3,"charIndex":30201},{"text":"修复","id":"修复","depth":3,"charIndex":30530},{"text":"从低版本升级","id":"从低版本升级","depth":3,"charIndex":30570},{"text":"v2.8.2","id":"v282","depth":2,"charIndex":30760},{"text":"What's Changed","id":"whats-changed-7","depth":3,"charIndex":30793},{"text":"New Contributors","id":"new-contributors-6","depth":3,"charIndex":30891},{"text":"v2.8.1","id":"v281","depth":2,"charIndex":31100},{"text":"更新方式","id":"更新方式","depth":3,"charIndex":31149},{"text":"v2.8.0","id":"v280","depth":2,"charIndex":31277},{"text":"修复","id":"修复-1","depth":3,"charIndex":31310},{"text":"v2.7.9","id":"v279","depth":2,"charIndex":31472},{"text":"v2.7.8","id":"v278","depth":2,"charIndex":31545},{"text":"v2.7.7","id":"v277","depth":2,"charIndex":31617},{"text":"v2.7.6","id":"v276","depth":2,"charIndex":31694},{"text":"更新内容","id":"更新内容-67","depth":4,"charIndex":31726},{"text":"更新方式","id":"更新方式-1","depth":4,"charIndex":31789},{"text":"v2.7.5","id":"v275","depth":2,"charIndex":31907},{"text":"v2.7.4","id":"v274","depth":2,"charIndex":31973},{"text":"v2.7.3","id":"v273","depth":2,"charIndex":32041},{"text":"v2.7.2","id":"v272","depth":2,"charIndex":32114},{"text":"更新内容","id":"更新内容-68","depth":4,"charIndex":32146},{"text":"更新方式","id":"更新方式-2","depth":4,"charIndex":32211},{"text":"v2.7.1","id":"v271","depth":2,"charIndex":32284},{"text":"更新内容","id":"更新内容-69","depth":4,"charIndex":32316},{"text":"更新方式","id":"更新方式-3","depth":4,"charIndex":32400},{"text":"v2.7.0","id":"v270","depth":2,"charIndex":32529},{"text":"更新内容","id":"更新内容-70","depth":4,"charIndex":32561},{"text":"更新方式","id":"更新方式-4","depth":4,"charIndex":32716},{"text":"v2.6.10","id":"v2610","depth":2,"charIndex":32834},{"text":"v2.6.9","id":"v269","depth":2,"charIndex":32918},{"text":"更新内容","id":"更新内容-71","depth":4,"charIndex":32950},{"text":"更新方式","id":"更新方式-5","depth":4,"charIndex":33008},{"text":"v2.6.8","id":"v268","depth":2,"charIndex":33142},{"text":"更新内容","id":"更新内容-72","depth":4,"charIndex":33174},{"text":"更新方式","id":"更新方式-6","depth":4,"charIndex":33197},{"text":"v2.6.7","id":"v267","depth":2,"charIndex":33270},{"text":"更新内容","id":"更新内容-73","depth":4,"charIndex":33302},{"text":"更新方式","id":"更新方式-7","depth":4,"charIndex":33383},{"text":"v2.6.6","id":"v266","depth":2,"charIndex":33517},{"text":"更新内容","id":"更新内容-74","depth":4,"charIndex":33549},{"text":"更新方式","id":"更新方式-8","depth":4,"charIndex":33580},{"text":"v2.6.5","id":"v265","depth":2,"charIndex":33716},{"text":"更新内容","id":"更新内容-75","depth":3,"charIndex":33749},{"text":"更新方式","id":"更新方式-9","depth":3,"charIndex":33836},{"text":"v2.6.4","id":"v264","depth":2,"charIndex":33963},{"text":"更新内容","id":"更新内容-76","depth":3,"charIndex":33996},{"text":"更新方式","id":"更新方式-10","depth":3,"charIndex":34048},{"text":"v2.6.3","id":"v263","depth":2,"charIndex":34175},{"text":"更新内容","id":"更新内容-77","depth":3,"charIndex":34208},{"text":"更新方式","id":"更新方式-11","depth":3,"charIndex":34282},{"text":"v2.6.2","id":"v262","depth":2,"charIndex":34416},{"text":"修复","id":"修复-2","depth":3,"charIndex":34449},{"text":"更新方式","id":"更新方式-12","depth":3,"charIndex":34527},{"text":"v2.6.1","id":"v261","depth":2,"charIndex":34654},{"text":"更新内容","id":"更新内容-78","depth":3,"charIndex":34687},{"text":"更新方式","id":"更新方式-13","depth":3,"charIndex":34795},{"text":"v2.6.0","id":"v260","depth":2,"charIndex":34922},{"text":"更新内容","id":"更新内容-79","depth":3,"charIndex":34955},{"text":"更新方式","id":"更新方式-14","depth":3,"charIndex":35020},{"text":"v2.5.9","id":"v259","depth":2,"charIndex":35156},{"text":"更新内容","id":"更新内容-80","depth":3,"charIndex":35189},{"text":"更新方式","id":"更新方式-15","depth":3,"charIndex":35279},{"text":"v2.5.8","id":"v258","depth":2,"charIndex":35407},{"text":"更新内容","id":"更新内容-81","depth":3,"charIndex":35440},{"text":"更新方式","id":"更新方式-16","depth":3,"charIndex":35722},{"text":"v2.5.7","id":"v257","depth":2,"charIndex":35809},{"text":"更新内容","id":"更新内容-82","depth":3,"charIndex":35842},{"text":"更新步骤","id":"更新步骤","depth":3,"charIndex":36092},{"text":"v2.5.6","id":"v256","depth":2,"charIndex":36263},{"text":"注意","id":"注意","depth":4,"charIndex":36343},{"text":"v2.5.5","id":"v255","depth":2,"charIndex":36428},{"text":"更新内容","id":"更新内容-83","depth":3,"charIndex":36461},{"text":"注意","id":"注意-1","depth":3,"charIndex":36497},{"text":"v2.5.4","id":"v254","depth":2,"charIndex":36654},{"text":"v2.5.3","id":"v253","depth":2,"charIndex":36714},{"text":"注意","id":"注意-2","depth":3,"charIndex":36756},{"text":"v2.5.2","id":"v252","depth":2,"charIndex":36841},{"text":"注意","id":"注意-3","depth":3,"charIndex":36937},{"text":"v2.5.1","id":"v251","depth":2,"charIndex":37031},{"text":"v2.5.0","id":"v250","depth":2,"charIndex":37091},{"text":"需要重新发布 assets","id":"需要重新发布-assets","depth":4,"charIndex":37138},{"text":"v2.4.9","id":"v249","depth":2,"charIndex":37215},{"text":"v2.4.8","id":"v248","depth":2,"charIndex":37277},{"text":"v2.4.7","id":"v247","depth":2,"charIndex":37339},{"text":"需要重新发布 assets","id":"需要重新发布-assets-1","depth":4,"charIndex":37408},{"text":"v2.4.6","id":"v246","depth":2,"charIndex":37485},{"text":"样式优化","id":"样式优化","depth":4,"charIndex":37517},{"text":"需要重新发布 assets","id":"需要重新发布-assets-2","depth":4,"charIndex":37578},{"text":"v2.4.5","id":"v245","depth":2,"charIndex":37655},{"text":"优化","id":"优化","depth":4,"charIndex":37687},{"text":"v2.4.4","id":"v244","depth":2,"charIndex":37812},{"text":"修复","id":"修复-3","depth":4,"charIndex":37844},{"text":"新增","id":"新增","depth":4,"charIndex":37860},{"text":"v2.4.3","id":"v243","depth":2,"charIndex":37996},{"text":"v2.4.2","id":"v242","depth":2,"charIndex":38134},{"text":"v2.4.1","id":"v241","depth":2,"charIndex":38198},{"text":"v2.4.0","id":"v240","depth":2,"charIndex":38263},{"text":"v2.3.9","id":"v239","depth":2,"charIndex":38392},{"text":"注意","id":"注意-8","depth":4,"charIndex":38436}],"domain":"","frontmatter":{"footer":false,"sidebar":false},"version":""},{"id":1,"title":"","content":"","routePath":"/docs/donate/DonateTable","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":2,"title":"","content":"","routePath":"/docs/donate/PayImage","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":3,"title":"","content":"为什么要打赏?#\n\n官网、Demo、文档站点的服务器成本，以及维护和帮助他人的成本。\n\n用爱发电, 终有尽时, 您的支持可以让这个框架走得更远。\n\n--------------------------------------------------------------------------------\n\n\n打赏记录#","routePath":"/docs/donate/","lang":"","toc":[{"text":"为什么要打赏?","id":"为什么要打赏","depth":3,"charIndex":-1},{"text":"打赏记录","id":"打赏记录","depth":3,"charIndex":-1}],"domain":"","frontmatter":{"footer":false,"sidebar":false,"outline":false},"version":""},{"id":4,"title":"","content":"","routePath":"/docs/ext/ExtensionList","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":5,"title":"","content":"","routePath":"/docs/ext/","lang":"","toc":[],"domain":"","frontmatter":{"footer":false,"sidebar":false,"outline":false},"version":""},{"id":6,"title":"为什么获取不到最新版","content":"#\n\n\n原因#\n\ncomposer 国内镜像同步的慢~\n\n\n解决方案#\n\n切换官方源\n\n","routePath":"/docs/faq/composer-repos","lang":"","toc":[{"text":"原因","id":"原因","depth":3,"charIndex":3},{"text":"解决方案","id":"解决方案","depth":3,"charIndex":29}],"domain":"","frontmatter":{},"version":""},{"id":7,"title":"页面数据回显失败，提示 fetchFailed","content":"#\n\nTIP\n\n该问题已于 v4.3.7 版本修复~\n\n\n原因:#\n\n字段名存在 status 或 no , 与 amis 关键字冲突\n\n\n解决方案:#\n\n 1. 更改字段名 (比如:state)\n 2. 使用 属性修改器\n 3. 等待 amis 修复","routePath":"/docs/faq/fetch-failed","lang":"","toc":[{"text":"原因:","id":"原因","depth":3,"charIndex":28},{"text":"解决方案:","id":"解决方案","depth":3,"charIndex":69}],"domain":"","frontmatter":{},"version":""},{"id":8,"title":"图片 / 文件, 回显失败","content":"#\n\n\n原因:#\n\n默认的文件/图片上传处理方法, 返回的文件路径不包含域名, 导致回显失败\n\n\n解决方案:#\n\n使用 属性修改器 :\n\n\n\n如果你不知道什么是 属性修改器 请先看 👉 文档","routePath":"/docs/faq/file-handle","lang":"","toc":[{"text":"原因:","id":"原因","depth":3,"charIndex":3},{"text":"解决方案:","id":"解决方案","depth":3,"charIndex":48}],"domain":"","frontmatter":{},"version":""},{"id":9,"title":"php 与 amis 无法混用","content":"#\n\n\n原因#\n\n * OwlAdmin 是 前后端分离 的项目\n\n * list()、detail()、form() 只负责构建页面, 在这几个方法内的 php 代码, 只能获取数据, 无法与页面产生交互\n\n\n代码示例#\n\n","routePath":"/docs/faq/php-amis","lang":"","toc":[{"text":"原因","id":"原因","depth":3,"charIndex":3},{"text":"代码示例","id":"代码示例","depth":3,"charIndex":105}],"domain":"","frontmatter":{},"version":""},{"id":10,"title":"如何设置中文","content":"#\n\n在 config/app.php 中更改配置:\n\n\n\n如果不成功\n\n * 检查是否存在 /lang 目录\n * 检查项目文件是否可写\n * 文件权限更改为 755 后重试\n * 断点检查是否存在 zh_CN 语言","routePath":"/docs/faq/set-zh-cn","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":11,"title":"内置命令","content":"#\n\nOwl Admin 提供了丰富的 Artisan 命令来简化开发和维护工作。您可以使用 php artisan list 查看所有可用的命令。\n\n\n用户管理命令#\n\n\n创建管理员用户#\n\n\n\n使用说明：\n\n * 支持选择多个角色\n * 密码会自动加密存储\n * 创建成功后会显示确认信息\n\n\n重置用户密码#\n\n\n\n使用说明：\n\n * 支持用户名自动补全\n * 需要二次确认密码\n * 密码会自动加密存储\n\n\n框架管理命令#\n\n\n安装框架#\n\n\n\n功能说明：\n\n * 运行数据库迁移\n * 创建管理目录结构\n * 生成基础控制器文件\n * 创建路由文件\n * 填充初始管理员数据\n\n\n发布框架资源#\n\n\n\n可选参数：\n\n * --force：强制覆盖已存在的文件\n * --lang：仅发布语言文件\n * --views：发布前端源码（通常不需要）\n * --assets：仅发布静态资源文件\n * --config：仅发布配置文件\n\n使用示例：\n\n\n\n\n更新框架#\n\n\n\n可选参数：\n\n * --v：指定版本号（根据 GitHub release 填写）\n\n使用示例：\n\n\n\n功能说明：\n\n * 自动发布最新资源\n * 执行版本升级脚本\n * 更新配置和语言文件\n\n\n代码生成命令#\n\n\n生成路由文件#\n\n\n\n可选参数：\n\n * --excluded：排除的记录ID，多个用逗号分隔\n\n使用示例：\n\n\n\n功能说明：\n\n * 生成的路由文件位于 /routes/admin.php\n * 包含代码生成器创建的资源路由\n * 包含自定义 API 路由\n * 自动排除未启用的菜单\n\n注意\n\n代码生成器的清理功能已从命令行移至 Web 界面，请在开发工具 > 代码生成器页面中使用清理功能。\n\n\n模块管理命令#\n\n\n初始化模块#\n\n\n\n使用示例：\n\n\n\n功能说明：\n\n * 创建模块数据库结构\n * 生成模块基础文件\n * 创建模块配置\n * 填充初始数据\n\n\n初始化模块数据库#\n\n\n\n使用示例：\n\n\n\n功能说明：\n\n * 创建模块数据表\n * 填充模块初始数据\n * 不创建文件结构\n\n\n开发工具命令#\n\n\n环境检查#\n\n\n\n可选参数：\n\n * --zh：使用中文提示信息\n\n检查项目：\n\n * APP_KEY 配置\n * 语言设置\n * 数据库连接\n * 框架版本信息\n\n使用示例：\n\n\n\n\n生成 IDE 辅助文件#\n\n\n\n功能说明：\n\n * 生成控制器和服务的类型提示\n * 提高 IDE 代码补全准确性\n * 文件保存在 config('admin.directory')/.phpstorm.meta.php 与项目根目录\n   /_admin_ide_helper.php\n\n\n命令使用技巧#\n\n\n1. 查看命令帮助#\n\n\n\n\n2. 批量操作#\n\n\n\n\n3. 开发环境快速设置#\n\n\n\n\n4. 生产环境部署#\n\n\n\n\n常见问题#\n\n\nQ: 命令执行失败怎么办？#\n\nA: 首先检查：\n\n 1. 数据库连接是否正常\n 2. 文件权限是否正确\n 3. 使用 php artisan admin:check 检查环境\n\n\nQ: 如何恢复误删的文件？#\n\nA: 使用发布命令重新生成：\n\n\n\n\nQ: 模块初始化失败？#\n\nA: 确保：\n\n 1. 模块已正确安装\n 2. 数据库权限充足\n 3. 模块配置正确\n\n提示\n * 大部分命令支持 --help 参数查看详细说明\n * 建议在开发环境先测试命令效果\n * 生产环境执行命令前请备份重要数据\n\n重要提醒\n * 执行 admin:install 会执行数据库迁移；仅当管理员表为空时初始化默认账号（admin/admin），不会清空已有数据表\n * --force 参数会覆盖现有文件，请确认后使用\n * 模块相关命令需要先安装对应模块","routePath":"/docs/guide/basic/artisan","lang":"","toc":[{"text":"用户管理命令","id":"用户管理命令","depth":2,"charIndex":76},{"text":"创建管理员用户","id":"创建管理员用户","depth":3,"charIndex":86},{"text":"重置用户密码","id":"重置用户密码","depth":3,"charIndex":148},{"text":"框架管理命令","id":"框架管理命令","depth":2,"charIndex":206},{"text":"安装框架","id":"安装框架","depth":3,"charIndex":216},{"text":"发布框架资源","id":"发布框架资源","depth":3,"charIndex":293},{"text":"更新框架","id":"更新框架","depth":3,"charIndex":429},{"text":"代码生成命令","id":"代码生成命令","depth":2,"charIndex":536},{"text":"生成路由文件","id":"生成路由文件","depth":3,"charIndex":546},{"text":"模块管理命令","id":"模块管理命令","depth":2,"charIndex":747},{"text":"初始化模块","id":"初始化模块","depth":3,"charIndex":757},{"text":"初始化模块数据库","id":"初始化模块数据库","depth":3,"charIndex":830},{"text":"开发工具命令","id":"开发工具命令","depth":2,"charIndex":895},{"text":"环境检查","id":"环境检查","depth":3,"charIndex":905},{"text":"生成 IDE 辅助文件","id":"生成-ide-辅助文件","depth":3,"charIndex":998},{"text":"命令使用技巧","id":"命令使用技巧","depth":2,"charIndex":1145},{"text":"1. 查看命令帮助","id":"1-查看命令帮助","depth":3,"charIndex":1155},{"text":"2. 批量操作","id":"2-批量操作","depth":3,"charIndex":1170},{"text":"3. 开发环境快速设置","id":"3-开发环境快速设置","depth":3,"charIndex":1183},{"text":"4. 生产环境部署","id":"4-生产环境部署","depth":3,"charIndex":1200},{"text":"常见问题","id":"常见问题","depth":2,"charIndex":1215},{"text":"Q: 命令执行失败怎么办？","id":"q-命令执行失败怎么办","depth":3,"charIndex":1223},{"text":"Q: 如何恢复误删的文件？","id":"q-如何恢复误删的文件","depth":3,"charIndex":1314},{"text":"Q: 模块初始化失败？","id":"q-模块初始化失败","depth":3,"charIndex":1349}],"domain":"","frontmatter":{},"version":""},{"id":12,"title":"组件使用指南","content":"#\n\n本指南将帮助您学会如何在 Owl Admin 中使用各种组件来构建功能丰富的管理界面。\n\n\n基础概念#\n\n\n组件创建方式#\n\nOwl Admin 提供了多种创建组件的方式：\n\n\n\n\n方法链式调用#\n\n所有组件都支持链式调用来设置属性：\n\n\n\n\n页面组件#\n\n\n创建基础页面#\n\n\n\n\n页面布局配置#\n\n\n\n\n表单组件#\n\n\n创建表单#\n\n\n\n\n常用表单控件#\n\n文本输入框#\n\n\n\n下拉选择框#\n\n\n\n开关控件#\n\n\n\n日期选择器#\n\n\n\n文件上传#\n\n\n\n\n按钮组件#\n\n\n基础按钮#\n\n\n\n\n按钮动作#\n\n\n\n\n数据展示组件#\n\n\n表格组件#\n\n\n\n\n卡片组件#\n\n\n\n\n布局组件#\n\n\n网格布局#\n\n\n\n\n选项卡#\n\n\n\n\n高级用法#\n\n\n条件显示#\n\n\n\n\n数据联动#\n\n\n\n\n自定义组件#\n\n如果找不到合适的组件，可以使用通用组件：\n\n\n\n\n组件鉴权#\n\n\n权限控制原理#\n\n每个组件都支持权限控制，通过 permission 方法设置权限标识：\n\n\n\n\n权限控制示例#\n\n\n\n\n权限替换值#\n\n\n\n\n最佳实践#\n\n\n1. 使用 amis() 辅助函数#\n\n\n\n\n2. 合理使用链式调用#\n\n\n\n\n3. 组件复用#\n\n\n\n提示\n * 方法名对应 amis 组件的属性名，参数对应属性值\n * 基类使用 __call() 方法实现动态属性设置\n * 即使调用不存在的方法也不会报错，只是不会产生效果\n * 建议查阅 amis 官方文档 了解更多组件属性\n\n注意\n * 组件权限控制在页面渲染前生效，无权限的组件会返回替换值（默认空字符串 ''）\n * 使用远程数据源时注意接口的数据格式要求\n * 表单验证规则要与后端验证保持一致","routePath":"/docs/guide/basic/component-use","lang":"","toc":[{"text":"基础概念","id":"基础概念","depth":2,"charIndex":48},{"text":"组件创建方式","id":"组件创建方式","depth":3,"charIndex":56},{"text":"方法链式调用","id":"方法链式调用","depth":3,"charIndex":93},{"text":"页面组件","id":"页面组件","depth":2,"charIndex":124},{"text":"创建基础页面","id":"创建基础页面","depth":3,"charIndex":132},{"text":"页面布局配置","id":"页面布局配置","depth":3,"charIndex":144},{"text":"表单组件","id":"表单组件","depth":2,"charIndex":156},{"text":"创建表单","id":"创建表单","depth":3,"charIndex":164},{"text":"常用表单控件","id":"常用表单控件","depth":3,"charIndex":174},{"text":"文本输入框","id":"文本输入框","depth":4,"charIndex":183},{"text":"下拉选择框","id":"下拉选择框","depth":4,"charIndex":193},{"text":"开关控件","id":"开关控件","depth":4,"charIndex":203},{"text":"日期选择器","id":"日期选择器","depth":4,"charIndex":212},{"text":"文件上传","id":"文件上传","depth":4,"charIndex":222},{"text":"按钮组件","id":"按钮组件","depth":2,"charIndex":232},{"text":"基础按钮","id":"基础按钮","depth":3,"charIndex":240},{"text":"按钮动作","id":"按钮动作","depth":3,"charIndex":250},{"text":"数据展示组件","id":"数据展示组件","depth":2,"charIndex":260},{"text":"表格组件","id":"表格组件","depth":3,"charIndex":270},{"text":"卡片组件","id":"卡片组件","depth":3,"charIndex":280},{"text":"布局组件","id":"布局组件","depth":2,"charIndex":290},{"text":"网格布局","id":"网格布局","depth":3,"charIndex":298},{"text":"选项卡","id":"选项卡","depth":3,"charIndex":308},{"text":"高级用法","id":"高级用法","depth":2,"charIndex":317},{"text":"条件显示","id":"条件显示","depth":3,"charIndex":325},{"text":"数据联动","id":"数据联动","depth":3,"charIndex":335},{"text":"自定义组件","id":"自定义组件","depth":3,"charIndex":345},{"text":"组件鉴权","id":"组件鉴权","depth":2,"charIndex":378},{"text":"权限控制原理","id":"权限控制原理","depth":3,"charIndex":386},{"text":"权限控制示例","id":"权限控制示例","depth":3,"charIndex":435},{"text":"权限替换值","id":"权限替换值","depth":3,"charIndex":447},{"text":"最佳实践","id":"最佳实践","depth":2,"charIndex":458},{"text":"1. 使用 amis() 辅助函数","id":"1-使用-amis-辅助函数","depth":3,"charIndex":466},{"text":"2. 合理使用链式调用","id":"2-合理使用链式调用","depth":3,"charIndex":489},{"text":"3. 组件复用","id":"3-组件复用","depth":3,"charIndex":506}],"domain":"","frontmatter":{},"version":""},{"id":13,"title":"框架原理","content":"#\n\nOwl Admin 是一个基于 Laravel + React + Amis\n的现代化管理后台框架。本文将深入解析框架的核心工作原理，帮助您更好地理解和使用框架。\n\n\n整体架构#\n\n\n技术栈组成#\n\n架构层次：\n\n\n\n前端技术栈：\n\n * React 17：现代化前端框架\n * TypeScript：类型安全的 JavaScript\n * Amis：百度开源的低代码前端框架\n * Ant Design：企业级 UI 组件库\n\n后端技术栈：\n\n * Laravel 11：优雅的 PHP 框架\n * Renderer 系统：组件抽象层\n * 权限管理：基于 RBAC 的权限控制\n * API 管理：RESTful API 设计\n\n\n运行流程详解#\n\n\n1. 应用启动流程#\n\n\n\n\n2. 页面渲染流程#\n\n\n\n\n3. 详细执行步骤#\n\n步骤 1：前端初始化\n\n * 用户访问后端路由（默认 /），由后端返回内置前端页面\n * React 应用启动，初始化路由系统\n * 自动请求用户信息、权限配置、系统设置\n\n步骤 2：动态路由加载\n\n * 前端请求 /{prefix}/menus 获取用户可访问的路由（默认 prefix 为 admin-api）\n * 根据权限动态生成路由配置\n * 懒加载对应的页面组件\n\n步骤 3：页面 Schema 获取\n\n * 用户访问具体页面时，Amis 组件请求对应的 API\n * 后端控制器接收请求，调用相应的方法\n * 构建 Renderer 组件树，生成 JSON Schema\n\n步骤 4：权限过滤与渲染\n\n * 应用权限过滤，移除无权限的组件\n * 执行管道处理，允许自定义扩展\n * 返回最终的 JSON Schema 给前端\n\n步骤 5：前端渲染\n\n * Amis 接收 JSON Schema\n * 根据 Schema 渲染对应的组件\n * 处理用户交互和数据更新\n\n核心流程\n\n用户访问 → 路由解析 → 权限验证 → Schema 构建 → 组件渲染 → 页面展示\n\n\nBaseRenderer 核心原理#\n\n\n类设计理念#\n\nBaseRenderer 是整个框架的核心，它将 Amis 的 JSON Schema 概念与 PHP 的面向对象编程完美结合。\n\n\n\n\n核心特性解析#\n\n1. JsonSerializable 接口#\n\n\n\n作用：\n\n * 当 Renderer 对象被 json_encode() 时自动调用\n * 确保返回给前端的是经过处理的 Schema 数据\n * 支持权限过滤和管道处理\n\n2. 魔术方法 __call()#\n\n\n\n功能：\n\n * 支持动态方法调用\n * 实现链式调用语法\n * 支持 Laravel 的 Macroable 特性\n\n使用示例：\n\n\n\n3. 权限控制系统#\n\n\n\n权限控制特性：\n\n * 细粒度控制：每个组件都可以设置独立的权限\n * 替换值支持：无权限时可以显示替代内容\n * 自动过滤：在序列化时自动应用权限检查\n\n使用示例：\n\n\n\n4. 管道处理系统#\n\n\n\n管道系统功能：\n\n * 扩展性：允许第三方插件修改组件行为\n * 可配置：支持动态注册处理管道\n * 链式处理：多个管道按顺序执行\n\n\n组件系统架构#\n\n\n组件继承关系#\n\n\n\n\n组件创建方式#\n\n1. 直接实例化#\n\n\n\n2. 助手函数（推荐）#\n\n\n\n3. 组件组合#\n\n\n\n\n前端渲染机制#\n\n\nAmis 渲染器#\n\n\n\n\n页面加载机制#\n\n\n\n缓存机制：\n\n * SessionStorage 缓存：避免重复请求相同页面\n * 智能更新：Schema 变化时自动更新缓存\n * 性能优化：减少网络请求，提升用户体验\n\n\n路由系统#\n\n\n动态路由加载#\n\n\n\n路由特性：\n\n * 权限控制：根据用户权限动态生成路由\n * 懒加载：按需加载页面组件\n * 缓存机制：避免重复请求路由配置\n\n\n组件懒加载#\n\n\n\n\n扩展机制#\n\n\n自定义组件注册#\n\n\n\n\n管道扩展#\n\n\n\n\n性能优化#\n\n\n1. 前端优化#\n\n * 组件懒加载：按需加载页面组件\n * Schema 缓存：避免重复请求\n * 虚拟滚动：大数据量表格优化\n\n\n2. 后端优化#\n\n * 权限缓存：减少权限查询\n * Schema 复用：相同组件复用实例\n * 数据库优化：合理的索引和查询\n\n\n3. 网络优化#\n\n * HTTP 缓存：合理设置缓存头\n * 压缩传输：启用 Gzip 压缩\n * CDN 加速：静态资源 CDN 分发\n\n\n总结#\n\nOwl Admin 的核心优势在于：\n\n 1. 简洁的抽象：BaseRenderer 提供了优雅的组件抽象\n 2. 强大的权限：细粒度的权限控制系统\n 3. 高度可扩展：管道机制支持灵活扩展\n 4. 开发效率：链式调用和助手函数提升开发体验\n 5. 性能优化：多层缓存和懒加载机制\n\n通过理解这些核心原理，您可以更好地使用框架构建复杂的管理后台应用，并根据需要进行定制和扩展。\n\n开发建议\n * 熟练掌握 BaseRenderer 的使用方法\n * 合理使用权限控制保护敏感功能\n * 利用管道机制实现业务扩展\n * 关注性能优化，提升用户体验","routePath":"/docs/guide/basic/frame","lang":"","toc":[{"text":"整体架构","id":"整体架构","depth":2,"charIndex":86},{"text":"技术栈组成","id":"技术栈组成","depth":3,"charIndex":94},{"text":"运行流程详解","id":"运行流程详解","depth":2,"charIndex":320},{"text":"1. 应用启动流程","id":"1-应用启动流程","depth":3,"charIndex":330},{"text":"2. 页面渲染流程","id":"2-页面渲染流程","depth":3,"charIndex":345},{"text":"3. 详细执行步骤","id":"3-详细执行步骤","depth":3,"charIndex":360},{"text":"BaseRenderer 核心原理","id":"baserenderer-核心原理","depth":2,"charIndex":867},{"text":"类设计理念","id":"类设计理念","depth":3,"charIndex":888},{"text":"核心特性解析","id":"核心特性解析","depth":3,"charIndex":965},{"text":"1. JsonSerializable 接口","id":"1-jsonserializable-接口","depth":4,"charIndex":974},{"text":"2. 魔术方法 `__call()`","id":"2-魔术方法-__call","depth":4,"charIndex":-1},{"text":"3. 权限控制系统","id":"3-权限控制系统","depth":4,"charIndex":1177},{"text":"4. 管道处理系统","id":"4-管道处理系统","depth":4,"charIndex":1278},{"text":"组件系统架构","id":"组件系统架构","depth":2,"charIndex":1360},{"text":"组件继承关系","id":"组件继承关系","depth":3,"charIndex":1370},{"text":"组件创建方式","id":"组件创建方式","depth":3,"charIndex":1382},{"text":"1. 直接实例化","id":"1-直接实例化","depth":4,"charIndex":1391},{"text":"2. 助手函数（推荐）","id":"2-助手函数推荐","depth":4,"charIndex":1404},{"text":"3. 组件组合","id":"3-组件组合","depth":4,"charIndex":1420},{"text":"前端渲染机制","id":"前端渲染机制","depth":2,"charIndex":1433},{"text":"Amis 渲染器","id":"amis-渲染器","depth":3,"charIndex":1443},{"text":"页面加载机制","id":"页面加载机制","depth":3,"charIndex":1457},{"text":"路由系统","id":"路由系统","depth":2,"charIndex":1556},{"text":"动态路由加载","id":"动态路由加载","depth":3,"charIndex":1564},{"text":"组件懒加载","id":"组件懒加载","depth":3,"charIndex":1640},{"text":"扩展机制","id":"扩展机制","depth":2,"charIndex":1651},{"text":"自定义组件注册","id":"自定义组件注册","depth":3,"charIndex":1659},{"text":"管道扩展","id":"管道扩展","depth":3,"charIndex":1672},{"text":"性能优化","id":"性能优化","depth":2,"charIndex":1682},{"text":"1. 前端优化","id":"1-前端优化","depth":3,"charIndex":1690},{"text":"2. 后端优化","id":"2-后端优化","depth":3,"charIndex":1757},{"text":"3. 网络优化","id":"3-网络优化","depth":3,"charIndex":1824},{"text":"总结","id":"总结","depth":2,"charIndex":1896}],"domain":"","frontmatter":{},"version":""},{"id":14,"title":"助手函数","content":"#\n\nOwl Admin 提供了丰富的助手函数来简化开发工作，这些函数涵盖了组件创建、数据处理、文件管理、用户认证等各个方面。\n\n\n组件创建函数#\n\n\namis()#\n\n万能组件创建函数，支持多种调用方式\n\n\n\n功能说明：\n\n * 不传参数时返回 Amis 实例，可链式调用各种组件\n * 传入组件类型时直接创建对应组件\n * 支持所有 amis 组件类型\n\n使用场景：\n\n\n\n\namisMake() (已废弃)#\n\n废弃提醒\n\n此函数已被标记为废弃，建议使用 amis() 函数替代。\n\n\n\n\n加密解密函数#\n\n\nadmin_encode()#\n\n使用 Laravel 加密服务加密字符串\n\n\n\n功能说明：\n\n * 基于 Laravel 的 Crypt 门面实现\n * 使用应用的 APP_KEY 进行加密\n * 返回 Base64 编码的加密字符串\n\n\nadmin_decode()#\n\n解密由 admin_encode() 加密的字符串\n\n\n\n功能说明：\n\n * 自动处理解密异常，失败时返回空字符串\n * 与 admin_encode() 配对使用\n * 适用于敏感数据的临时加密存储\n\n\n数据处理函数#\n\n\narray2tree()#\n\n将平面数组转换为树状结构\n\n\n\n功能说明：\n\n * 要求数组元素包含 id 和 parent_id 字段\n * 递归构建树状结构\n * 子节点存储在 children 字段中\n * 常用于菜单、分类等层级数据处理\n\n\nmap2options()#\n\n将关联数组转换为选项格式\n\n\n\n功能说明：\n\n * 键作为 value，值作为 label\n * 返回标准的选项数组格式\n * 适用于下拉框、单选框等组件的选项数据\n\n\nis_json()#\n\n检查字符串是否为有效的 JSON 格式\n\n\n\n功能说明：\n\n * 检查字符串格式和 JSON 解析是否成功\n * 仅接受能解析为数组的 JSON 字符串\n * 常用于数据验证和格式检查\n\n\n路径和 URL 函数#\n\n\nadmin_url()#\n\n生成管理后台的 URL 路径\n\n\n\n参数说明：\n\n * $path：路径字符串\n * $needPrefix：是否添加 API 前缀\n\n功能说明：\n\n * 自动处理路径分隔符\n * 根据配置添加管理后台前缀\n * 用于生成后台页面和 API 路径\n\n\nadmin_path()#\n\n获取管理后台目录的绝对路径\n\n\n\n功能说明：\n\n * 基于 config('admin.directory') 配置，返回绝对路径\n * 用于文件系统操作和类路径生成\n\n\nadmin_extension_path()#\n\n获取扩展目录的绝对路径\n\n\n\n功能说明：\n\n * 基于 config('admin.extension.dir') 配置\n * 默认为项目根目录下的 extensions 文件夹\n * 用于扩展插件的文件管理\n\n\nowl_admin_path()#\n\n获取 Owl Admin 框架内部文件路径\n\n\n\n功能说明：\n\n * 指向框架源码目录\n * 主要用于框架内部文件访问\n * 一般开发者不需要直接使用\n\n\n数据库函数#\n\n\ntable_columns()#\n\n获取数据表的字段名列表\n\n\n\n功能说明：\n\n * 基于框架内部 Database::getTableColumns() 实现\n * 仅返回字段名数组\n * 常用于代码生成器和动态表单创建\n\n\n文件处理函数#\n\n\nadmin_resource_full_path()#\n\n生成资源文件的完整 URL\n\n\n\n功能说明：\n\n * 自动处理相对路径和绝对路径\n * 支持自定义服务器地址\n * 根据配置自动选择 HTTP/HTTPS 协议\n * 支持 Data URL 格式（base64 图片）\n\n\nfile_upload_handle()#\n\n处理单文件上传的 Eloquent 属性转换\n\n\n\n\nfile_upload_handle_multi()#\n\n处理多文件上传的 Eloquent 属性转换\n\n\n\n功能说明：\n\n * 自动处理存储和读取时的 URL 转换\n * 存储时去除域名，节省存储空间\n * 读取时自动添加完整域名\n * 多文件版本支持数组和逗号分隔字符串\n\n\n用户和认证函数#\n\n\nadmin_user()#\n\n获取当前登录的管理员用户\n\n\n\n功能说明：\n\n * 基于当前会话获取用户信息\n * 未登录时返回 null\n * 返回完整的用户模型实例\n * 支持权限检查和角色判断\n\n\n设置管理函数#\n\n\nsettings()#\n\n获取系统设置服务实例\n\n\n\n功能说明：\n\n * 提供完整的设置管理功能\n * 支持缓存机制，提高性能\n * 支持模块化设置管理\n * 支持数组路径访问（点号分隔）\n\n\n页面管理函数#\n\n\nadmin_pages()#\n\n获取自定义页面内容\n\n\n\n功能说明：\n\n * 基于页面标识获取页面配置\n * 支持缓存机制\n * 用于自定义页面的动态加载\n * 返回 amis 页面 Schema\n\n\n异常处理函数#\n\n\nadmin_abort()#\n\n抛出管理后台异常\n\n\n\n\nadmin_abort_if()#\n\n条件异常抛出\n\n\n\n\namis_abort() 和 amis_abort_if()#\n\n专用于 amis 组件的异常处理\n\n\n\n功能说明：\n\n * admin_abort 系列默认不显示 Toast（避免重复提示）\n * amis_abort 系列会显示 Toast 提示\n * 支持携带额外数据\n * 统一的错误处理机制\n\n\n国际化函数#\n\n\nadmin_trans()#\n\n管理后台专用的翻译函数\n\n\n\n功能说明：\n\n * 优先查找应用的语言文件\n * 回退到框架的 admin:: 命名空间\n * 支持参数替换\n * 自动处理语言包前缀\n\n\n管道处理函数#\n\n\nadmin_pipeline()#\n\nLaravel 管道处理的封装\n\n\n\n功能说明：\n\n * 兼容 Laravel 9+ 的管道处理\n * 支持中间件模式的数据处理\n * 用于复杂的数据处理流程\n * 提供统一的管道接口\n\n\n使用技巧#\n\n\n1. 组合使用示例#\n\n\n\n\n2. 错误处理最佳实践#\n\n\n\n\n3. 性能优化建议#\n\n\n\n提示\n * 大部分函数都有完善的错误处理机制\n * 建议在生产环境中合理使用缓存功能\n * 文件处理函数会自动处理各种边界情况\n * 异常处理函数支持国际化消息","routePath":"/docs/guide/basic/helper","lang":"","toc":[{"text":"组件创建函数","id":"组件创建函数","depth":2,"charIndex":65},{"text":"amis()","id":"amis","depth":3,"charIndex":75},{"text":"amisMake() (已废弃)","id":"amismake-已废弃","depth":3,"charIndex":189},{"text":"加密解密函数","id":"加密解密函数","depth":2,"charIndex":247},{"text":"admin_encode()","id":"admin_encode","depth":3,"charIndex":257},{"text":"admin_decode()","id":"admin_decode","depth":3,"charIndex":378},{"text":"数据处理函数","id":"数据处理函数","depth":2,"charIndex":498},{"text":"array2tree()","id":"array2tree","depth":3,"charIndex":508},{"text":"map2options()","id":"map2options","depth":3,"charIndex":632},{"text":"is_json()","id":"is_json","depth":3,"charIndex":733},{"text":"路径和 URL 函数","id":"路径和-url-函数","depth":2,"charIndex":840},{"text":"admin_url()","id":"admin_url","depth":3,"charIndex":854},{"text":"admin_path()","id":"admin_path","depth":3,"charIndex":994},{"text":"admin_extension_path()","id":"admin_extension_path","depth":3,"charIndex":1095},{"text":"owl_admin_path()","id":"owl_admin_path","depth":3,"charIndex":1227},{"text":"数据库函数","id":"数据库函数","depth":2,"charIndex":1324},{"text":"table_columns()","id":"table_columns","depth":3,"charIndex":1333},{"text":"文件处理函数","id":"文件处理函数","depth":2,"charIndex":1447},{"text":"admin_resource_full_path()","id":"admin_resource_full_path","depth":3,"charIndex":1457},{"text":"file_upload_handle()","id":"file_upload_handle","depth":3,"charIndex":1598},{"text":"file_upload_handle_multi()","id":"file_upload_handle_multi","depth":3,"charIndex":1648},{"text":"用户和认证函数","id":"用户和认证函数","depth":2,"charIndex":1788},{"text":"admin_user()","id":"admin_user","depth":3,"charIndex":1799},{"text":"设置管理函数","id":"设置管理函数","depth":2,"charIndex":1900},{"text":"settings()","id":"settings","depth":3,"charIndex":1910},{"text":"页面管理函数","id":"页面管理函数","depth":2,"charIndex":2007},{"text":"admin_pages()","id":"admin_pages","depth":3,"charIndex":2017},{"text":"异常处理函数","id":"异常处理函数","depth":2,"charIndex":2118},{"text":"admin_abort()","id":"admin_abort","depth":3,"charIndex":2128},{"text":"admin_abort_if()","id":"admin_abort_if","depth":3,"charIndex":2157},{"text":"amis_abort() 和 amis_abort_if()","id":"amis_abort-和-amis_abort_if","depth":3,"charIndex":2187},{"text":"国际化函数","id":"国际化函数","depth":2,"charIndex":2340},{"text":"admin_trans()","id":"admin_trans","depth":3,"charIndex":2349},{"text":"管道处理函数","id":"管道处理函数","depth":2,"charIndex":2450},{"text":"admin_pipeline()","id":"admin_pipeline","depth":3,"charIndex":2460},{"text":"使用技巧","id":"使用技巧","depth":2,"charIndex":2574},{"text":"1. 组合使用示例","id":"1-组合使用示例","depth":3,"charIndex":2582},{"text":"2. 错误处理最佳实践","id":"2-错误处理最佳实践","depth":3,"charIndex":2597},{"text":"3. 性能优化建议","id":"3-性能优化建议","depth":3,"charIndex":2614}],"domain":"","frontmatter":{},"version":""},{"id":15,"title":"安装","content":"#\n\n\n环境#\n\n * PHP >= 8.2\n\n * Laravel >= 11.*\n\n\n开始安装#\n\n\n安装 laravel#\n\n首先需要安装laravel框架，如已安装可以跳过此步骤。如果您是第一次使用laravel，请务必先阅读 文档 ！\n\n\n\n安装完laravel之后需要修改.env文件，设置数据库连接设置正确\n\n\n\n如果有需要的话，在此时可以在config/app.php设置中文\n\nlocale 如下设置\n\n\n\n注意\n\n如果你使用的是 laravel 11 的话php artisan install:api\n\n还需要执行\n\n\n安装 owl-admin#\n\n\n\n然后运行下面的命令来发布资源：\n\n\n\n在该命令会生成配置文件config/admin.php，可以在里面修改安装的地址、数据库连接、以及表名，建议都是用默认配置不修改。\n\n然后运行下面的命令完成安装：\n\n\n\n说明\n\nadmin:install 会执行数据库迁移；仅当管理员表为空时，会初始化默认管理员账号 admin/admin。不会清空已有数据表。\n\nTips\n\n执行这一步命令可能会报以下错误 Specified key was too long ... 767 bytes\n\n如果出现这个报错，需手动修改配置文件:\n\n\n\n然后删除掉数据库中的所有数据表，再重新运行一遍 php artisan admin:install\n\n上述步骤操作完成之后就可以配置 web 服务了，注意需要把 web 目录也就是运行目录指向 public 目录\n\nnginx 伪静态配置如下:\n\n\n\n另外注意文件权限设置 755, 否则可能报错\n\n启动服务后，在浏览器打开 http://localhost/（默认由后端路由返回内置前端页面），使用用户名 admin 和密码 admin 登陆。\n\n\n目录结构#\n\n","routePath":"/docs/guide/basic/install","lang":"","toc":[{"text":"环境","id":"环境","depth":2,"charIndex":3},{"text":"开始安装","id":"开始安装","depth":2,"charIndex":44},{"text":"安装 `laravel`","id":"安装-laravel","depth":3,"charIndex":-1},{"text":"安装 `owl-admin`","id":"安装-owl-admin","depth":3,"charIndex":-1},{"text":"目录结构","id":"目录结构","depth":2,"charIndex":777}],"domain":"","frontmatter":{},"version":""},{"id":16,"title":"升级","content":"#\n\n\n说明#\n\nOwl Admin 的版本发行将会参考主流 Web 框架 的发行策略，尽量降低版本升级带来的影响，小版本和补丁 决不\n包含非兼容性更改；同时我们也将会提供更新日志，详细说明新版本的改动以及可能造成的影响。\n\n\n通用升级步骤#\n\n获取最新框架代码\n\n\n\n获取成功之后需要运行 admin:update 命令进行重新发布语言包、配置文件、前端静态资源等文件，然后清理浏览器缓存\n\n\n\n运行 admin:update，相当于运行\n\n\n\n注意\n\n❗由于 admin:update 命令会强制覆盖原有文件，所以在运行之前请做好备份工作\n\n💡 每个版本更新日志中都会有对应的升级步骤说明, 上述内容只是一个通用的升级步骤~\n\n\n发布文件命令#\n\n提示\n\n运行 admin:update 后一般不需要运行 admin:publish 命令\n\n发布所有文件, 并强制覆盖原有文件\n\n\n\n更新语言包, 并强制覆盖原有文件\n\n\n\n更新配置文件, 并强制覆盖原有文件\n\n\n\n更新前端静态资源, 并强制覆盖原有文件\n\n\n\n更新前端代码, 并强制覆盖原有文件\n\n","routePath":"/docs/guide/basic/upgrade","lang":"","toc":[{"text":"说明","id":"说明","depth":2,"charIndex":3},{"text":"通用升级步骤","id":"通用升级步骤","depth":2,"charIndex":113},{"text":"发布文件命令","id":"发布文件命令","depth":2,"charIndex":317}],"domain":"","frontmatter":{},"version":""},{"id":17,"title":"动态 API","content":"#\n\n动态 API 是 Owl Admin 提供的零代码接口解决方案，通过可视化配置快速创建和管理 API 接口，无需编写控制器代码即可实现常见的数据操作功能。\n\n\n核心特性#\n\n * 零代码开发：通过可视化界面配置 API，无需编写代码\n * 模板化设计：基于预定义模板快速创建标准化接口\n * 动态路由：自动注册路由到 routes/admin.php 文件\n * 参数化配置：支持灵活的参数配置和验证\n * 扩展性强：支持自定义 API 模板\n\n\n使用场景#\n\n * 选项数据接口：为 select、radios、checkboxes 等组件提供动态选项\n * 简单 CRUD 操作：快速实现数据的增删改查功能\n * 配置数据管理：系统设置的读取和保存\n * 数据列表查询：带分页、筛选的数据列表接口\n * 原型开发：快速搭建接口原型进行功能验证\n\n\n路由规则#\n\n动态 API 创建后会自动注册路由（保存/删除后都会刷新 routes/admin.php）：\n\n * 默认前缀：admin.route.prefix，默认为 admin-api\n\n * 管理后台访问：/{prefix}/{路径}\n\n * 模块化访问：/{模块}-api/{路径}\n\n * 可视化编辑器：在内置前端中可直接使用配置的 path（前端会自动拼接前缀）；第三方调用需带上前缀\n\n\n内置 API 模板#\n\n系统提供了多个开箱即用的 API 模板：\n\n模板名称              请求方法     功能描述     适用场景\nOptionsApi        GET      获取选项列表   下拉框、单选框等组件的数据源\nDataListApi       GET      获取数据列表   表格数据展示，支持分页和筛选\nDataCreateApi     POST     创建数据记录   表单提交创建新记录\nDataUpdateApi     PUT      更新数据记录   表单提交更新现有记录\nDataDeleteApi     DELETE   删除数据记录   批量或单个删除操作\nDataDetailApi     GET      获取数据详情   查看单条记录详细信息\nGetSettingsApi    GET      获取系统设置   读取配置项数据\nSaveSettingsApi   POST     保存系统设置   批量保存配置项\n\n\n创建自定义 API 模板#\n\n\n方式一：社区模板#\n\n访问 GitHub Discussions 获取社区分享的 API 模板。\n\n\n方式二：手动创建#\n\n 1. 在 app/ApiTemplates 目录下创建新的 PHP 类\n 2. 继承 Slowlyo\\OwlAdmin\\Support\\Apis\\AdminBaseApi 基类\n 3. 实现 AdminApiInterface 接口的必需方法\n\n\n基础结构#\n\n\n\n\n核心方法详解#\n\n\n必须实现的方法#\n\nhandle() - 接口处理逻辑#\n\n * 作用：定义 API 的核心业务逻辑\n * 返回值：可以是任意数据类型，建议使用 Admin::response() 包装\n * 示例：\n\n\n\nargsSchema() - 参数配置表单#\n\n * 作用：定义 API 创建时的参数配置表单\n * 返回值：Amis 表单组件数组\n * 示例：\n\n\n\n\n可选配置属性#\n\n$method - HTTP 请求方法#\n\n\n\n$title - 模板名称#\n\n\n\n\n辅助方法#\n\ngetArgs() - 获取配置参数#\n\n\n\nblankService() - 获取空白服务实例#\n\n\n\ngetApiRecord() - 获取 API 记录#\n\n\n\n\n实际应用示例#\n\n\n示例 1：选项列表 API#\n\n适用于为下拉框、单选框等组件提供数据源：\n\n\n\n\n示例 2：统计数据 API#\n\n用于获取各种统计信息：\n\n\n\n\n高级用法#\n\n\n请求参数处理#\n\n在 handle() 方法中可以获取和处理各种请求参数：\n\n\n\n\n错误处理#\n\n\n\n\n数据验证#\n\n\n\n\n复杂查询构建#\n\n\n\n\n最佳实践#\n\n\n1. 命名规范#\n\n * 类名：使用 PascalCase，以 Api 结尾，如 UserOptionsApi\n * 方法名：使用 camelCase，语义明确\n * 参数名：使用 snake_case，与数据库字段保持一致\n\n\n2. 参数设计#\n\n\n\n\n3. 性能优化#\n\n\n\n\n4. 安全考虑#\n\n\n\n\n注意事项#\n\n\n1. 路径冲突#\n\n * API 路径不能与现有路由冲突\n * 避免使用系统保留路径（如 admin、api 等）\n * 建议使用有意义的路径名称\n\n\n2. 参数验证#\n\n * 在 argsSchema() 中定义完整的参数验证规则\n * 在 handle() 方法中进行二次验证\n * 对用户输入进行适当的过滤和转义\n\n\n3. 错误处理#\n\n * 使用统一的错误响应格式\n * 记录详细的错误日志便于调试\n * 向用户返回友好的错误信息\n\n\n4. 性能考虑#\n\n * 避免在循环中执行数据库查询\n * 合理使用缓存机制\n * 对大数据量查询进行分页处理\n\n\n5. 安全性#\n\n * 验证用户权限和数据访问范围\n * 过滤敏感数据字段\n * 防止 SQL 注入和其他安全漏洞\n\n\n调试技巧#\n\n\n1. 日志记录#\n\n\n\n\n2. 开发模式调试#\n\n\n\n通过以上完整的文档，开发者可以深入理解动态 API 系统的设计理念、使用方法和最佳实践，快速上手并创建高质量的 API 接口。","routePath":"/docs/guide/built-in/api","lang":"","toc":[{"text":"核心特性","id":"核心特性","depth":2,"charIndex":82},{"text":"使用场景","id":"使用场景","depth":2,"charIndex":226},{"text":"路由规则","id":"路由规则","depth":2,"charIndex":378},{"text":"内置 API 模板","id":"内置-api-模板","depth":2,"charIndex":581},{"text":"创建自定义 API 模板","id":"创建自定义-api-模板","depth":2,"charIndex":1034},{"text":"方式一：社区模板","id":"方式一社区模板","depth":3,"charIndex":1050},{"text":"方式二：手动创建","id":"方式二手动创建","depth":3,"charIndex":1101},{"text":"基础结构","id":"基础结构","depth":3,"charIndex":1237},{"text":"核心方法详解","id":"核心方法详解","depth":2,"charIndex":1247},{"text":"必须实现的方法","id":"必须实现的方法","depth":3,"charIndex":1257},{"text":"`handle()` - 接口处理逻辑","id":"handle---接口处理逻辑","depth":4,"charIndex":-1},{"text":"`argsSchema()` - 参数配置表单","id":"argsschema---参数配置表单","depth":4,"charIndex":-1},{"text":"可选配置属性","id":"可选配置属性","depth":3,"charIndex":1439},{"text":"`$method` - HTTP 请求方法","id":"method---http-请求方法","depth":4,"charIndex":-1},{"text":"`$title` - 模板名称","id":"title---模板名称","depth":4,"charIndex":-1},{"text":"辅助方法","id":"辅助方法","depth":3,"charIndex":1491},{"text":"`getArgs()` - 获取配置参数","id":"getargs---获取配置参数","depth":4,"charIndex":-1},{"text":"`blankService()` - 获取空白服务实例","id":"blankservice---获取空白服务实例","depth":4,"charIndex":-1},{"text":"`getApiRecord()` - 获取 API 记录","id":"getapirecord---获取-api-记录","depth":4,"charIndex":-1},{"text":"实际应用示例","id":"实际应用示例","depth":2,"charIndex":1583},{"text":"示例 1：选项列表 API","id":"示例-1选项列表-api","depth":3,"charIndex":1593},{"text":"示例 2：统计数据 API","id":"示例-2统计数据-api","depth":3,"charIndex":1634},{"text":"高级用法","id":"高级用法","depth":2,"charIndex":1666},{"text":"请求参数处理","id":"请求参数处理","depth":3,"charIndex":1674},{"text":"错误处理","id":"错误处理","depth":3,"charIndex":1716},{"text":"数据验证","id":"数据验证","depth":3,"charIndex":1726},{"text":"复杂查询构建","id":"复杂查询构建","depth":3,"charIndex":1736},{"text":"最佳实践","id":"最佳实践","depth":2,"charIndex":1748},{"text":"1. 命名规范","id":"1-命名规范","depth":3,"charIndex":1756},{"text":"2. 参数设计","id":"2-参数设计","depth":3,"charIndex":1871},{"text":"3. 性能优化","id":"3-性能优化","depth":3,"charIndex":1884},{"text":"4. 安全考虑","id":"4-安全考虑","depth":3,"charIndex":1897},{"text":"注意事项","id":"注意事项","depth":2,"charIndex":1910},{"text":"1. 路径冲突","id":"1-路径冲突","depth":3,"charIndex":1918},{"text":"2. 参数验证","id":"2-参数验证","depth":3,"charIndex":1994},{"text":"3. 错误处理","id":"3-错误处理","depth":3,"charIndex":2080},{"text":"4. 性能考虑","id":"4-性能考虑","depth":3,"charIndex":2140},{"text":"5. 安全性","id":"5-安全性","depth":3,"charIndex":2198},{"text":"调试技巧","id":"调试技巧","depth":2,"charIndex":2258},{"text":"1. 日志记录","id":"1-日志记录","depth":3,"charIndex":2266},{"text":"2. 开发模式调试","id":"2-开发模式调试","depth":3,"charIndex":2279}],"domain":"","frontmatter":{},"version":""},{"id":18,"title":"代码生成器","content":"#\n\n启用条件\n\n当 config/admin.php 中的 show_development_tools 设置为 true 时，代码生成器将在后台开发工具菜单中显示。\n\n代码生成器是 Owl Admin 的核心功能之一，能够根据数据库表结构自动生成完整的 CRUD\n代码，包括模型、控制器、服务层、数据库迁移文件等，大幅提升开发效率。\n\n\n功能特性#\n\n\n智能代码生成#\n\n * 完整 MVC 架构：自动生成 Model、Controller、Service 三层架构代码\n * 数据库支持：支持 MySQL、PostgreSQL、SQLite 等主流数据库\n * 字段智能识别：自动识别表字段类型并生成对应的表单组件\n * 关联关系处理：支持一对一、一对多等关联关系的代码生成\n\n\n可视化配置#\n\n * 表单构建器：可视化配置表单字段和验证规则\n * 组件选择器：支持 150+ Amis 组件的选择和配置\n * 页面布局配置：支持弹窗、抽屉、页面等多种展示方式\n * 权限配置：自动生成权限控制代码\n\n\n代码管理#\n\n * 预览功能：生成前可预览所有代码文件\n\n * 记录管理：保存生成记录，支持导入/导出配置\n\n * 代码清理：一键清理生成的代码文件\n\n\n使用流程#\n\n\n1. 基础配置#\n\n访问代码生成器：后台 → 开发工具 → 代码生成器\n\n基本信息配置：\n\n * 表名：选择已存在的数据库表或输入新表名\n * 功能名称：设置功能的显示名称\n * 主键字段：指定表的主键字段（默认为 id）\n * 保存路径：选择代码文件的保存位置\n\n\n2. 生成选项#\n\n选择需要生成的文件类型：\n\n选项        说明                生成内容\n创建数据库迁移   生成 Laravel 迁移文件   database/migrations/xxx_create_table.php\n创建数据表     执行迁移创建表           在数据库中创建对应表结构\n创建模型      生成 Eloquent 模型    app/Models/ModelName.php\n创建控制器     生成控制器文件           app/Admin/Controllers/ControllerName.php\n创建服务      生成服务层文件           app/Admin/Services/ServiceName.php\n\n\n3. 字段配置#\n\n字段属性设置：\n\n * 字段名称：数据库字段名\n * 字段类型：数据类型（string、integer、text 等）\n * 显示名称：前端显示的字段标签\n * 表单组件：选择对应的 Amis 组件\n * 验证规则：设置字段验证规则\n * 默认值：字段的默认值\n\n组件配置：\n\n * 列表显示：是否在列表页显示\n * 表单显示：是否在表单中显示\n * 搜索字段：是否作为搜索条件\n * 排序字段：是否支持排序\n\n\n4. 路由和菜单配置#\n\n路由设置：\n\n * 通过“生成路由 & 菜单”开关控制是否写入路由文件并生成菜单\n * 仅需填写以下信息：\n   * 路由：功能访问路径（如 /users）\n   * 菜单名称：在后台菜单中显示的名称\n   * 父级菜单：选择父级菜单位置\n   * 菜单图标：使用 Iconify 图标选择器\n\n菜单配置：\n\n * 菜单名称：在后台菜单中显示的名称\n * 父级菜单：选择父级菜单位置\n * 菜单图标：使用 Iconify 图标选择器\n * 排序权重：菜单的显示顺序\n\n\n5. 页面配置#\n\n表单类型：\n\n * 弹窗表单：在弹窗中显示表单\n * 抽屉表单：在侧边抽屉中显示表单\n * 页面表单：独立页面显示表单\n\n页面布局：\n\n * 列表页配置：表格列、筛选器、工具栏等\n * 表单页配置：字段布局、分组、验证等\n * 详情页配置：字段显示方式和布局\n\n\n高级功能#\n\n\n代码预览#\n\n生成代码前可预览所有文件内容：\n\n\n\n\n记录管理#\n\n保存配置：每次生成都会保存配置记录，便于后续修改和复用\n\n导入/导出：\n\n * 导出配置为 JSON 格式\n * 导入已有的配置文件\n * 在不同环境间共享配置\n\n克隆记录：基于现有记录快速创建相似功能\n\n\n代码清理#\n\n选择性清理：\n\n * 清理 Model 文件\n * 清理 Controller 文件\n * 清理 Service 文件\n * 清理 Migration 文件\n * 清理路由配置\n\n安全机制：清理前会显示将要删除的文件列表，确认后执行\n\n\n路由管理#\n\n\n自动路由生成#\n\n代码生成器会自动管理路由文件 routes/admin.php：\n\n * 自动更新：每次生成新功能时自动更新路由文件\n * 增量更新：只添加新路由，不影响现有路由\n * 命名规范：遵循 RESTful 路由命名规范\n\n\n手动路由管理#\n\n命令行工具：\n\n\n\n手动配置：\n\n 1. 生成代码时关闭\"生成路由&菜单\"选项\n 2. 在 routes/admin.php 中手动添加路由\n 3. 在后台菜单管理中手动创建菜单\n\n\n路由结构#\n\n生成的路由遵循标准 RESTful 规范：\n\n\n\n\n数据库支持#\n\n\n支持的数据库类型#\n\n代码生成器支持多种主流数据库：\n\n数据库          驱动       特性支持\nMySQL        mysql    完整支持，包括字段注释、索引等\nPostgreSQL   pgsql    支持高级数据类型和约束\nSQLite       sqlite   轻量级支持，适合开发环境\n\n\n字段类型映射#\n\n系统会自动将数据库字段类型映射为对应的表单组件：\n\n数据库类型               表单组件                说明\nvarchar/char/text   TextControl         文本输入框\nint/bigint          NumberControl       数字输入框\ndecimal/float       NumberControl       小数输入框\ndate/datetime       DateTimeControl     日期时间选择器\nenum                SelectControl       下拉选择框\njson                JsonSchemaControl   JSON 编辑器\ntext/longtext       TextareaControl     多行文本框\n\n\n表结构识别#\n\n自动识别功能：\n\n * 字段属性：自动识别字段类型、长度、默认值\n * 约束条件：识别非空、唯一、外键等约束\n * 索引信息：识别主键、普通索引、唯一索引\n * 字段注释：读取数据库字段注释作为显示标签\n\n智能过滤：\n\n * 自动跳过系统字段（id、created_at、updated_at、deleted_at）\n * 识别时间戳字段并自动配置\n * 处理软删除字段\n\n\n生成的代码结构#\n\n\nModel 文件#\n\n生成的模型文件包含：\n\n\n\n\nController 文件#\n\n生成的控制器包含完整的 CRUD 操作：\n\n\n\n\nService 文件#\n\n生成的服务层处理业务逻辑：\n\n\n\n\n最佳实践#\n\n\n1. 表设计规范#\n\n字段命名：\n\n * 使用下划线命名法：user_name、created_at\n * 布尔字段使用 is_ 前缀：is_active、is_deleted\n * 状态字段使用 status 或 state\n\n字段类型选择：\n\n * 主键使用 bigint unsigned auto_increment\n * 字符串字段指定合适的长度\n * 金额字段使用 decimal 类型\n * 时间字段使用 timestamp 或 datetime\n\n索引设计：\n\n * 为常用查询字段添加索引\n * 外键字段必须添加索引\n * 复合索引考虑字段顺序\n\n\n2. 代码生成策略#\n\n分步生成：\n\n 1. 先生成基础的 Model 和 Migration\n 2. 创建数据表并填充测试数据\n 3. 生成 Controller 和 Service\n 4. 最后配置路由和菜单\n\n配置管理：\n\n * 为每个功能模块保存生成配置\n * 使用导出功能备份重要配置\n * 在团队中共享标准配置模板\n\n\n3. 代码定制#\n\n生成后优化：\n\n * 根据业务需求调整表单验证规则\n * 添加自定义的业务逻辑方法\n * 优化查询性能和数据关联\n * 完善错误处理和日志记录\n\n扩展功能：\n\n * 添加自定义的表单组件\n * 实现复杂的数据处理逻辑\n * 集成第三方服务和 API\n * 添加数据导入导出功能\n\n\n常见问题#\n\n\n生成失败#\n\n权限问题：\n\n * 确保目录具有写入权限\n * 检查 storage 和 bootstrap/cache 目录权限\n\n文件冲突：\n\n * 生成前检查是否存在同名文件\n * 使用预览功能确认生成内容\n * 必要时手动删除冲突文件\n\n数据库连接：\n\n * 确认数据库连接配置正确\n * 检查数据库用户权限\n * 验证表是否存在\n\n\n代码质量#\n\n命名规范：\n\n * 遵循 PSR 编码规范\n * 使用有意义的类名和方法名\n * 保持代码注释的完整性\n\n性能优化：\n\n * 避免 N+1 查询问题\n * 合理使用数据库索引\n * 实现适当的缓存策略\n\n\n维护更新#\n\n版本控制：\n\n * 将生成的代码纳入版本控制\n * 记录每次生成的变更内容\n * 保留重要的自定义修改\n\n增量更新：\n\n * 使用代码生成器的更新功能\n * 手动合并自定义代码\n * 测试更新后的功能完整性","routePath":"/docs/guide/built-in/code-generator","lang":"","toc":[{"text":"功能特性","id":"功能特性","depth":2,"charIndex":170},{"text":"智能代码生成","id":"智能代码生成","depth":3,"charIndex":178},{"text":"可视化配置","id":"可视化配置","depth":3,"charIndex":342},{"text":"代码管理","id":"代码管理","depth":3,"charIndex":454},{"text":"使用流程","id":"使用流程","depth":2,"charIndex":531},{"text":"1. 基础配置","id":"1-基础配置","depth":3,"charIndex":539},{"text":"2. 生成选项","id":"2-生成选项","depth":3,"charIndex":673},{"text":"3. 字段配置","id":"3-字段配置","depth":3,"charIndex":1027},{"text":"4. 路由和菜单配置","id":"4-路由和菜单配置","depth":3,"charIndex":1244},{"text":"5. 页面配置","id":"5-页面配置","depth":3,"charIndex":1492},{"text":"高级功能","id":"高级功能","depth":2,"charIndex":1634},{"text":"代码预览","id":"代码预览","depth":3,"charIndex":1642},{"text":"记录管理","id":"记录管理","depth":3,"charIndex":1669},{"text":"代码清理","id":"代码清理","depth":3,"charIndex":1780},{"text":"路由管理","id":"路由管理","depth":2,"charIndex":1906},{"text":"自动路由生成","id":"自动路由生成","depth":3,"charIndex":1914},{"text":"手动路由管理","id":"手动路由管理","depth":3,"charIndex":2033},{"text":"路由结构","id":"路由结构","depth":3,"charIndex":2134},{"text":"数据库支持","id":"数据库支持","depth":2,"charIndex":2167},{"text":"支持的数据库类型","id":"支持的数据库类型","depth":3,"charIndex":2176},{"text":"字段类型映射","id":"字段类型映射","depth":3,"charIndex":2340},{"text":"表结构识别","id":"表结构识别","depth":3,"charIndex":2747},{"text":"生成的代码结构","id":"生成的代码结构","depth":2,"charIndex":2943},{"text":"Model 文件","id":"model-文件","depth":3,"charIndex":2954},{"text":"Controller 文件","id":"controller-文件","depth":3,"charIndex":2980},{"text":"Service 文件","id":"service-文件","depth":3,"charIndex":3021},{"text":"最佳实践","id":"最佳实践","depth":2,"charIndex":3052},{"text":"1. 表设计规范","id":"1-表设计规范","depth":3,"charIndex":3060},{"text":"2. 代码生成策略","id":"2-代码生成策略","depth":3,"charIndex":3344},{"text":"3. 代码定制","id":"3-代码定制","depth":3,"charIndex":3510},{"text":"常见问题","id":"常见问题","depth":2,"charIndex":3661},{"text":"生成失败","id":"生成失败","depth":3,"charIndex":3669},{"text":"代码质量","id":"代码质量","depth":3,"charIndex":3840},{"text":"维护更新","id":"维护更新","depth":3,"charIndex":3950}],"domain":"","frontmatter":{},"version":""},{"id":19,"title":"动态页面","content":"#\n\n动态页面是 Owl Admin 提供的一种灵活的页面管理机制，允许开发者通过可视化编辑器创建和管理页面内容，无需编写代码即可构建复杂的管理界面。\n\n\n核心概念#\n\n\n页面标识 (Sign)#\n\n每个动态页面都有一个唯一的标识符，用于在系统中识别和调用该页面。页面标识必须是唯一的，通常使用有意义的英文字符串，如\ndashboard、user_profile 等。\n\n\n页面结构 (Schema)#\n\n页面的具体内容以 JSON Schema 格式存储，基于 amis 框架的组件规范，支持丰富的组件类型和交互功能。\n\n\n创建动态页面#\n\n\n1. 通过开发工具创建#\n\n在管理后台的开发工具中，可以通过可视化界面创建动态页面：\n\n 1. 进入 开发工具 → 页面管理\n 2. 点击 新增 按钮\n 3. 填写页面信息：\n    * 页面标题：页面的显示名称\n    * 页面标识：页面的唯一标识符\n    * 页面内容：使用可视化编辑器设计页面结构\n\n\n2. 页面编辑器功能#\n\n内置的页面编辑器提供了丰富的功能：\n\n * 拖拽式组件布局\n * 实时预览效果\n * 组件属性配置\n * 数据绑定设置\n * 交互逻辑定义\n\n\n使用动态页面#\n\n\n方法一：通过 admin_pages() 函数调用#\n\n在控制器中使用 admin_pages() 函数获取页面内容：\n\n\n\n\n方法二：直接绑定到菜单#\n\n这是最简单的使用方式，无需编写任何代码：\n\n 1. 创建菜单项\n    \n    * 进入 系统管理 → 菜单管理\n    * 点击 新增 按钮\n\n 2. 配置菜单信息\n    \n    * 菜单标题：显示在导航中的名称\n    * 菜单图标：选择合适的图标\n    * 菜单类型：选择 页面\n    * 关联页面：选择已创建的动态页面\n\n 3. 保存并生效\n    \n    * 保存后，点击该菜单项将自动显示对应的页面内容\n    * 系统会自动处理页面加载和渲染\n\n\n方法三：在现有页面中嵌入#\n\n可以在现有的 amis 页面中嵌入动态页面：\n\n\n\n\n高级特性#\n\n\n缓存机制#\n\n动态页面内容会被自动缓存，提高页面加载性能：\n\n * 首次访问时从数据库读取\n * 后续访问直接从缓存获取\n * 页面更新时自动清除相关缓存\n\n\n权限控制#\n\n动态页面支持完整的权限控制：\n\n * 通过菜单权限控制页面访问\n * 支持角色和用户级别的权限设置\n * 可以在页面内部设置组件级权限\n\n\n数据绑定#\n\n页面可以绑定动态数据源：\n\n\n\n\n最佳实践#\n\n\n1. 命名规范#\n\n * 页面标识使用下划线分隔的小写字母\n * 标识应该具有描述性，如 user_dashboard、sales_report\n * 避免使用数字开头或特殊字符\n\n\n2. 页面组织#\n\n * 按功能模块组织页面\n * 使用统一的设计风格\n * 合理使用组件层次结构\n\n\n3. 性能优化#\n\n * 避免在单个页面中加载过多数据\n * 合理使用分页和懒加载\n * 定期清理不再使用的页面\n\n\n4. 维护管理#\n\n * 为页面添加清晰的标题和描述\n * 定期备份重要页面配置\n * 建立页面变更记录机制\n\n\n注意事项#\n\n 1. 页面标识唯一性：确保每个页面标识在系统中是唯一的\n 2. 数据安全：在页面中展示敏感数据时要注意权限控制\n 3. 兼容性：页面结构应该兼容不同的屏幕尺寸和设备\n 4. 备份恢复：重要页面应该定期备份，避免意外丢失\n\n通过动态页面功能，您可以快速构建功能丰富的管理界面，大大提高开发效率和系统的可维护性。","routePath":"/docs/guide/built-in/pages","lang":"","toc":[{"text":"核心概念","id":"核心概念","depth":2,"charIndex":77},{"text":"页面标识 (Sign)","id":"页面标识-sign","depth":3,"charIndex":85},{"text":"页面结构 (Schema)","id":"页面结构-schema","depth":3,"charIndex":186},{"text":"创建动态页面","id":"创建动态页面","depth":2,"charIndex":262},{"text":"1. 通过开发工具创建","id":"1-通过开发工具创建","depth":3,"charIndex":272},{"text":"2. 页面编辑器功能","id":"2-页面编辑器功能","depth":3,"charIndex":427},{"text":"使用动态页面","id":"使用动态页面","depth":2,"charIndex":512},{"text":"方法一：通过 `admin_pages()` 函数调用","id":"方法一通过-admin_pages-函数调用","depth":3,"charIndex":-1},{"text":"方法二：直接绑定到菜单","id":"方法二直接绑定到菜单","depth":3,"charIndex":586},{"text":"方法三：在现有页面中嵌入","id":"方法三在现有页面中嵌入","depth":3,"charIndex":837},{"text":"高级特性","id":"高级特性","depth":2,"charIndex":879},{"text":"缓存机制","id":"缓存机制","depth":3,"charIndex":887},{"text":"权限控制","id":"权限控制","depth":3,"charIndex":967},{"text":"数据绑定","id":"数据绑定","depth":3,"charIndex":1044},{"text":"最佳实践","id":"最佳实践","depth":2,"charIndex":1068},{"text":"1. 命名规范","id":"1-命名规范","depth":3,"charIndex":1076},{"text":"2. 页面组织","id":"2-页面组织","depth":3,"charIndex":1168},{"text":"3. 性能优化","id":"3-性能优化","depth":3,"charIndex":1220},{"text":"4. 维护管理","id":"4-维护管理","depth":3,"charIndex":1279},{"text":"注意事项","id":"注意事项","depth":2,"charIndex":1336}],"domain":"","frontmatter":{},"version":""},{"id":20,"title":"动态关联","content":"#\n\n动态关联功能允许您在不修改模型文件的情况下，通过可视化界面为 Eloquent 模型动态添加关联关系。该功能基于 Laravel 的\nresolveRelationUsing 方法实现，支持所有标准的 Eloquent 关联类型。\n\n前置要求\n\n在使用此功能前，请确保您已经熟练掌握了 Laravel Eloquent ORM 关联关系\n\n\n功能特性#\n\n * 可视化配置：通过友好的界面配置复杂的关联关系\n * 动态注册：无需修改模型文件，关联关系在系统启动时自动注册\n * 类型完整：支持所有 Laravel Eloquent 关联类型\n * 参数智能：自动解析关联方法参数，提供智能提示\n * 代码预览：实时预览生成的关联方法代码\n * 缓存优化：关联配置自动缓存，提升系统性能\n\n\n支持的关联类型#\n\n关联类型                     说明                  使用场景\n一对一 (hasOne)             一个模型拥有一个关联模型        用户与个人资料\n一对多 (hasMany)            一个模型拥有多个关联模型        文章与评论\n一对多反向 (belongsTo)        多个模型属于一个模型          评论属于文章\n多对多 (belongsToMany)      多个模型相互关联            用户与角色\n远程一对一 (hasOneThrough)    通过中间模型的一对一关联        国家通过用户获取最新文章\n远程一对多 (hasManyThrough)   通过中间模型的一对多关联        国家通过用户获取所有文章\n一对一多态 (morphOne)         一个模型与多种类型模型的一对一关联   文章或用户与单张图片\n一对多多态 (morphMany)        一个模型与多种类型模型的一对多关联   文章或用户与多张图片\n多对多多态 (morphToMany)      多个模型与多种类型模型的多对多关联   文章或视频与标签\n\n\n模型管理#\n\n\n生成模型#\n\n系统提供便捷的模型生成功能，帮助您快速为数据表创建对应的 Eloquent 模型。\n\n操作步骤：\n\n 1. 点击 \"生成模型\" 按钮\n 2. 系统将展示所有数据表及其对应的模型状态\n 3. 勾选需要生成模型的数据表\n 4. 点击 \"生成\" 按钮\n\n生成规则：\n\n * 模型文件生成在 app/Models 目录下\n * 类名采用表名的单数形式，遵循 StudlyCase 命名规范\n * 自动继承 Slowlyo\\OwlAdmin\\Models\\BaseModel\n * 自动设置 $table 属性指向对应数据表\n\n生成的模型示例：\n\n\n\n提示\n * 已存在模型的数据表会显示为禁用状态\n * 系统会自动检测并防止重复生成\n * 生成的模型可以手动扩展添加其他功能\n\n\n关联关系配置#\n\n\n新增关联关系#\n\n配置步骤：\n\n 1. 选择源模型：从下拉列表中选择要添加关联的模型\n 2. 设置关联名称：输入关联方法的名称（如：comments、profile）\n 3. 选择关联类型：从支持的 9 种关联类型中选择合适的类型\n 4. 配置关联参数：根据选择的关联类型填写相应参数\n 5. 添加备注说明：可选，用于描述关联关系的用途\n 6. 保存配置：系统将验证配置并保存\n\n参数配置说明：\n\n不同的关联类型需要配置不同的参数，系统会根据选择的类型动态显示对应的参数表单：\n\n * 相关模型 (related)：目标关联模型\n * 外键 (foreignKey)：外键字段名\n * 本地键 (localKey)：本地主键字段名\n * 中间表 (table)：多对多关联的中间表\n * 中间模型 (through)：远程关联的中间模型\n * 多态名称 (name)：多态关联的名称前缀\n\n\n配置验证#\n\n系统在保存关联配置时会进行以下验证：\n\n * 唯一性检查：确保同一模型下的关联名称不重复\n * 方法冲突检查：确保关联名称不与模型现有方法冲突\n * 参数有效性：验证必填参数是否完整\n * 模型存在性：验证相关模型是否存在\n\n\n代码预览#\n\n每个配置的关联关系都提供实时代码预览功能：\n\n 1. 点击列表中的 \"预览\" 按钮\n 2. 查看生成的关联方法代码\n 3. 确认参数配置是否正确\n\n预览示例：\n\n\n\n\n工作原理#\n\n\n动态注册机制#\n\n动态关联基于 Laravel 的 resolveRelationUsing 方法实现：\n\n 1. 系统启动时：Relationships::boot() 方法被调用\n 2. 加载配置：从数据库读取所有关联配置（带缓存）\n 3. 动态注册：为每个模型注册对应的关联方法\n 4. 参数解析：通过反射自动解析并填充方法参数\n\n\n缓存机制#\n\n为了提升性能，系统采用文件缓存存储关联配置：\n\n * 缓存键：admin_relationships\n * 缓存驱动：文件缓存\n * 自动更新：保存/删除配置后系统会自动清除缓存（无需手动清理）\n * 异常处理：缓存失败时降级到直接查询\n\n\n参数构建#\n\n系统通过反射机制智能构建关联方法参数：\n\n\n\n\n使用示例#\n\n\n示例 1：用户与个人资料（一对一）#\n\n场景：每个用户有一个个人资料\n\n配置：\n\n * 源模型：App\\Models\\User\n * 关联名称：profile\n * 关联类型：一对一 (hasOne)\n * 相关模型：App\\Models\\Profile\n * 外键：user_id\n * 本地键：id\n\n使用：\n\n\n\n\n示例 2：文章与评论（一对多）#\n\n场景：一篇文章有多个评论\n\n配置：\n\n * 源模型：App\\Models\\Article\n * 关联名称：comments\n * 关联类型：一对多 (hasMany)\n * 相关模型：App\\Models\\Comment\n * 外键：article_id\n * 本地键：id\n\n使用：\n\n\n\n\n示例 3：用户与角色（多对多）#\n\n场景：用户可以拥有多个角色，角色可以分配给多个用户\n\n配置：\n\n * 源模型：App\\Models\\User\n * 关联名称：roles\n * 关联类型：多对多 (belongsToMany)\n * 相关模型：App\\Models\\Role\n * 中间表：user_roles\n * 外键：user_id\n * 相关键：role_id\n\n使用：\n\n\n\n\n最佳实践#\n\n\n命名规范#\n\n * 关联名称：使用小写字母和下划线，遵循 Laravel 约定\n * 单数关联：profile、category、author\n * 复数关联：comments、tags、users\n\n\n性能优化#\n\n * 预加载关联：使用 with() 方法避免 N+1 查询问题\n * 选择性加载：只加载需要的关联关系\n * 索引优化：为外键字段添加数据库索引\n\n\n维护建议#\n\n * 文档记录：在备注中详细说明关联关系的用途\n * 定期检查：定期检查关联配置的有效性\n * 测试验证：在开发环境中充分测试关联关系\n\n\n注意事项#\n\n重要提醒\n * 动态关联在系统启动时注册；配置保存/删除后缓存会自动清理并生效\n * 确保相关模型和数据表存在，否则可能导致错误\n * 复杂的关联关系建议在模型中直接定义，以获得更好的 IDE 支持\n * 多态关联需要确保数据表结构符合 Laravel 规范\n\n性能提示\n * 关联配置会被缓存，生产环境中性能影响很小\n * 建议在开发完成后将常用关联迁移到模型文件中\n * 使用代码预览功能确认生成的关联方法正确","routePath":"/docs/guide/built-in/relationships","lang":"","toc":[{"text":"功能特性","id":"功能特性","depth":2,"charIndex":173},{"text":"支持的关联类型","id":"支持的关联类型","depth":2,"charIndex":347},{"text":"模型管理","id":"模型管理","depth":2,"charIndex":898},{"text":"生成模型","id":"生成模型","depth":3,"charIndex":906},{"text":"关联关系配置","id":"关联关系配置","depth":2,"charIndex":1249},{"text":"新增关联关系","id":"新增关联关系","depth":3,"charIndex":1259},{"text":"配置验证","id":"配置验证","depth":3,"charIndex":1655},{"text":"代码预览","id":"代码预览","depth":3,"charIndex":1776},{"text":"工作原理","id":"工作原理","depth":2,"charIndex":1867},{"text":"动态注册机制","id":"动态注册机制","depth":3,"charIndex":1875},{"text":"缓存机制","id":"缓存机制","depth":3,"charIndex":2045},{"text":"参数构建","id":"参数构建","depth":3,"charIndex":2173},{"text":"使用示例","id":"使用示例","depth":2,"charIndex":2204},{"text":"示例 1：用户与个人资料（一对一）","id":"示例-1用户与个人资料一对一","depth":3,"charIndex":2212},{"text":"示例 2：文章与评论（一对多）","id":"示例-2文章与评论一对多","depth":3,"charIndex":2373},{"text":"示例 3：用户与角色（多对多）","id":"示例-3用户与角色多对多","depth":3,"charIndex":2538},{"text":"最佳实践","id":"最佳实践","depth":2,"charIndex":2733},{"text":"命名规范","id":"命名规范","depth":3,"charIndex":2741},{"text":"性能优化","id":"性能优化","depth":3,"charIndex":2843},{"text":"维护建议","id":"维护建议","depth":3,"charIndex":2926},{"text":"注意事项","id":"注意事项","depth":2,"charIndex":3003}],"domain":"","frontmatter":{},"version":""},{"id":21,"title":"系统设置","content":"#\n\n系统设置功能提供了灵活的配置管理机制，支持动态存储和获取应用程序的各种配置参数。所有设置项都会自动缓存以提升性能，并支持模块化管理。\n\n\n快速开始#\n\n通过 settings() 辅助函数可以轻松管理系统设置：\n\n\n\n\n核心方法#\n\n\nset - 保存设置项#\n\n保存单个设置项到数据库，并自动清除相关缓存。\n\n\n\n\nsetMany - 批量保存设置#\n\n批量保存多个设置项，使用数据库事务确保数据一致性。\n\n\n\n\nadminSetMany - 后台批量保存#\n\n专为后台控制器设计的批量保存方法，自动返回标准的后台响应格式。\n\n\n\n\nget - 获取设置项#\n\n获取指定的设置项值，支持默认值和强制刷新。\n\n\n\n\ngetByModule - 获取模块设置#\n\n获取当前模块的专属设置项，自动添加模块前缀。\n\n\n\n\nall - 获取所有设置#\n\n以关联数组形式返回所有设置项。\n\n\n\n\narrayGet - 获取嵌套值#\n\n从数组类型的设置项中获取指定路径的值，支持点号分隔的路径语法。\n\n\n\n\ndel - 删除设置项#\n\n删除指定的设置项及其缓存。\n\n\n\n\nclearCache - 清除缓存#\n\n清除指定设置项的缓存，下次获取时将重新从数据库读取。\n\n\n\n\n实际应用示例#\n\n\n创建设置页面控制器#\n\n\n\n\n在应用中使用设置#\n\n\n\n\n数据结构#\n\n设置数据存储在 admin_settings 表中：\n\n字段名          类型          说明\nkey          string      设置项键名（主键）\nvalues       json        设置项值（JSON格式存储）\ncreated_at   timestamp   创建时间\nupdated_at   timestamp   更新时间\n\n\n缓存机制#\n\n * 所有设置项都会自动缓存，缓存键格式为 app_setting_{key}\n * 使用 Laravel 的永久缓存（Cache::rememberForever）\n * 设置项更新时自动清除对应缓存\n * 可通过 clearCache() 方法手动清除指定缓存\n\n\n注意事项#\n\n 1. 数据类型：设置值支持任意 PHP 数据类型，会自动进行 JSON 序列化/反序列化\n 2. 缓存策略：默认使用缓存提升性能，如需获取最新值请使用 fresh 参数\n 3. 事务安全：批量操作使用数据库事务，确保数据一致性\n 4. 模块隔离：使用 getByModule() 可实现模块间设置隔离\n 5. 性能考虑：避免频繁调用 all() 方法，建议按需获取具体设置项","routePath":"/docs/guide/built-in/setting","lang":"","toc":[{"text":"快速开始","id":"快速开始","depth":2,"charIndex":71},{"text":"核心方法","id":"核心方法","depth":2,"charIndex":112},{"text":"set - 保存设置项","id":"set---保存设置项","depth":3,"charIndex":120},{"text":"setMany - 批量保存设置","id":"setmany---批量保存设置","depth":3,"charIndex":161},{"text":"adminSetMany - 后台批量保存","id":"adminsetmany---后台批量保存","depth":3,"charIndex":210},{"text":"get - 获取设置项","id":"get---获取设置项","depth":3,"charIndex":270},{"text":"getByModule - 获取模块设置","id":"getbymodule---获取模块设置","depth":3,"charIndex":310},{"text":"all - 获取所有设置","id":"all---获取所有设置","depth":3,"charIndex":360},{"text":"arrayGet - 获取嵌套值","id":"arrayget---获取嵌套值","depth":3,"charIndex":395},{"text":"del - 删除设置项","id":"del---删除设置项","depth":3,"charIndex":450},{"text":"clearCache - 清除缓存","id":"clearcache---清除缓存","depth":3,"charIndex":482},{"text":"实际应用示例","id":"实际应用示例","depth":2,"charIndex":533},{"text":"创建设置页面控制器","id":"创建设置页面控制器","depth":3,"charIndex":543},{"text":"在应用中使用设置","id":"在应用中使用设置","depth":3,"charIndex":558},{"text":"数据结构","id":"数据结构","depth":2,"charIndex":572},{"text":"缓存机制","id":"缓存机制","depth":2,"charIndex":772},{"text":"注意事项","id":"注意事项","depth":2,"charIndex":914}],"domain":"","frontmatter":{},"version":""},{"id":22,"title":"CRUD 基础概念","content":"#\n\n\n架构概览#\n\nOwl Admin 的 CRUD 功能基于 Laravel 的 Resource Controller 模式，采用分层架构设计：\n\n\n\n核心特性：\n\n * 统一的 RESTful API 设计：遵循 Laravel Resource Controller 规范\n * 前后端分离架构：前端 Amis 组件 + 后端 JSON API\n * 高度可扩展性：通过继承和重写实现自定义逻辑\n * 组件化构建：使用 Trait 模块化功能组织\n * 管道模式支持：通过 AdminPipeline 实现组件定制\n\n\n控制器层详解#\n\n\n核心方法说明#\n\n框架在 Slowlyo\\OwlAdmin\\Controllers\\AdminController 中实现了完整的 CRUD 方法：\n\n方法          HTTP 方法     路由模式                  功能描述            返回内容\nindex()     GET         /resource             列表页面构建 & 数据获取   页面结构 或 列表数据\ncreate()    GET         /resource/create      新增页面构建          新增页面结构\nstore()     POST        /resource             新增数据保存          操作结果响应\nshow()      GET         /resource/{id}        详情页面构建 & 数据获取   页面结构 或 详情数据\nedit()      GET         /resource/{id}/edit   编辑页面构建 & 数据回显   页面结构 或 编辑数据\nupdate()    PUT/PATCH   /resource/{id}        编辑数据保存          操作结果响应\ndestroy()   DELETE      /resource/{id}        删除数据            操作结果响应\n\n\n动作参数机制#\n\n控制器通过 _action 参数实现一个方法处理多种请求：\n\n\n\n动作类型说明：\n\n * getData（GET）和 export（GET）在 index() 中处理\n * quickEdit（POST）和 quickEditItem（POST）在 store() 中处理（表格内快速编辑）\n\n\n页面构建方法#\n\n控制器需在子类中实现以下方法（约定实现，用于页面构建）：\n\n\n\n\n服务层详解#\n\n\nService 自动注入#\n\n控制器通过 serviceName 属性自动注入对应的服务实例：\n\n\n\n\n核心服务方法#\n\nAdminService 提供了完整的数据操作方法：\n\n方法分类   方法名称                     功能描述       返回类型\n查询     list()                   获取分页列表数据   array\n       listQuery()              构建列表查询条件   Builder\n       getDetail($id)           获取详情数据     Model\n       getEditData($id)         获取编辑回显数据   Model\n操作     store($data)             新增数据       bool\n       update($id, $data)       更新数据       bool\n       delete($ids)             删除数据       mixed\n钩子     saving($data, $id)       保存前钩子      void\n       saved($model, $isEdit)   保存后钩子      void\n       deleted($ids)            删除后钩子      void\n\n\n开发流程#\n\n\n1. 路由注册#\n\n推荐通过“代码生成器”勾选“生成路由&菜单”，系统会写入 routes/admin.php 并自动刷新路由（命令：php artisan\nadmin:gen-route）。\n\n如需手动注册，可在 routes/admin.php 内添加 Resource 路由：\n\n\n\n\n2. 控制器创建#\n\n创建控制器 app/Admin/Controllers/BookController.php：\n\n\n\n\n3. 服务层创建#\n\n创建服务 app/Admin/Services/BookService.php：\n\n\n\n\n4. 模型创建#\n\n创建模型 app/Models/Book.php：\n\n\n\n\n5. 菜单配置#\n\n在后台菜单管理中创建对应菜单项，设置路由为 /books。\n\n\n代码生成器#\n\n框架提供了强大的代码生成器，可以自动生成完整的 CRUD 代码：\n\n 1. 访问代码生成器：后台 → 开发工具 → 代码生成器\n 2. 选择数据表：选择要生成 CRUD 的数据表\n 3. 配置字段：设置字段类型、验证规则、显示方式等\n 4. 生成代码：一键生成控制器、服务、路由等完整代码\n\n生成的文件包括：\n\n * 控制器文件\n * 服务文件\n * 路由配置（写入 routes/admin.php）\n * 菜单配置 （权限请在“系统-权限”中按需生成/分配）\n\n提示\n\n使用代码生成器可以大大提高开发效率，生成后只需根据业务需求进行微调即可。\n\n\n最佳实践#\n\n\n1. 控制器职责分离#\n\n * 控制器：专注于页面结构构建和请求响应\n * 服务层：处理业务逻辑和数据操作\n * 模型层：定义数据结构和关联关系\n\n\n2. 代码复用#\n\n * 使用 baseCRUD()、baseForm() 等基础方法\n * 通过 Trait 封装通用功能\n * 利用管道模式实现组件定制\n\n\n3. 性能优化#\n\n * 合理使用关联查询避免 N+1 问题\n * 适当添加数据库索引\n * 使用缓存减少重复查询\n\n\n4. 安全考虑#\n\n * 使用表单验证确保数据安全\n * 实现权限控制限制访问\n * 防止 SQL 注入和 XSS 攻击","routePath":"/docs/guide/crud/base","lang":"","toc":[{"text":"架构概览","id":"架构概览","depth":2,"charIndex":3},{"text":"控制器层详解","id":"控制器层详解","depth":2,"charIndex":264},{"text":"核心方法说明","id":"核心方法说明","depth":3,"charIndex":274},{"text":"动作参数机制","id":"动作参数机制","depth":3,"charIndex":917},{"text":"页面构建方法","id":"页面构建方法","depth":3,"charIndex":1074},{"text":"服务层详解","id":"服务层详解","depth":2,"charIndex":1116},{"text":"Service 自动注入","id":"service-自动注入","depth":3,"charIndex":1125},{"text":"核心服务方法","id":"核心服务方法","depth":3,"charIndex":1177},{"text":"开发流程","id":"开发流程","depth":2,"charIndex":1751},{"text":"1. 路由注册","id":"1-路由注册","depth":3,"charIndex":1759},{"text":"2. 控制器创建","id":"2-控制器创建","depth":3,"charIndex":1905},{"text":"3. 服务层创建","id":"3-服务层创建","depth":3,"charIndex":1968},{"text":"4. 模型创建","id":"4-模型创建","depth":3,"charIndex":2024},{"text":"5. 菜单配置","id":"5-菜单配置","depth":3,"charIndex":2064},{"text":"代码生成器","id":"代码生成器","depth":2,"charIndex":2106},{"text":"最佳实践","id":"最佳实践","depth":2,"charIndex":2390},{"text":"1. 控制器职责分离","id":"1-控制器职责分离","depth":3,"charIndex":2398},{"text":"2. 代码复用","id":"2-代码复用","depth":3,"charIndex":2473},{"text":"3. 性能优化","id":"3-性能优化","depth":3,"charIndex":2554},{"text":"4. 安全考虑","id":"4-安全考虑","depth":3,"charIndex":2614}],"domain":"","frontmatter":{},"version":""},{"id":23,"title":"组件管道","content":"#\n\n> v3.9.3 支持\n\n\n管道概念#\n\n组件管道允许你在组件渲染前对其进行链式处理和修改，就像流水线一样，组件依次经过多个处理器。每个组件在最终渲染前都会经过管道系统的处理，允许开发者在不修改核心代码\n的情况下扩展和定制组件行为。\n\n\n\n\n工作原理#\n\n\n管道执行流程#\n\n 1. 组件创建：组件实例化并设置基础属性\n 2. 管道检索：从上下文中获取注册的管道处理器\n 3. 链式处理：依次执行每个处理器，每个处理器可以修改组件\n 4. 结果返回：返回经过所有处理器处理后的最终组件\n\n\n核心机制#\n\n管道系统基于 Laravel 的 Pipeline 模式实现，通过 Admin::context() 进行管道存储和检索：\n\n\n\n\nAdminPipeline 核心类#\n\n框架提供了 AdminPipeline 类来管理组件管道：\n\n\n\n\n基础使用#\n\n\n修改新增按钮#\n\n在 app/Admin/bootstrap.php 中添加：\n\n\n\n\n修改表单组件#\n\n\n\n\n可用管道常量#\n\n框架内置了丰富的管道常量，覆盖了各种组件类型：\n\n\n页面级管道#\n\n常量               说明        触发时机\nPIPE_BASE_PAGE   基础页面      页面组件渲染时\nPIPE_BASE_LIST   基础列表页     列表页面渲染时\nPIPE_BASE_CRUD   基础CRUD页   CRUD页面渲染时\n\n\n表单级管道#\n\n常量                 说明      触发时机\nPIPE_BASE_FORM     基础表单    表单组件渲染时\nPIPE_BASE_DETAIL   基础详情    详情页面渲染时\nPIPE_BASE_FILTER   基础筛选器   筛选表单渲染时\n\n\n按钮级管道#\n\n常量                        说明       触发时机\nPIPE_CREATE_ACTION        新增按钮     创建按钮渲染时\nPIPE_EDIT_ACTION          编辑按钮     编辑按钮渲染时\nPIPE_SHOW_ACTION          查看按钮     查看按钮渲染时\nPIPE_DELETE_ACTION        删除按钮     删除按钮渲染时\nPIPE_BACK_ACTION          返回按钮     返回按钮渲染时\nPIPE_EXPORT_ACTION        导出按钮     导出按钮渲染时\nPIPE_BULK_DELETE_ACTION   批量删除按钮   批量删除按钮渲染时\n\n\n工具栏级管道#\n\n常量                         说明        触发时机\nPIPE_ROW_ACTIONS           行操作按钮组    表格行操作渲染时\nPIPE_BASE_HEADER_TOOLBAR   基础头部工具栏   头部工具栏渲染时\n\n\n组件级管道#\n\n除了预定义常量外，每个组件类都可以作为管道键使用：\n\n\n\n\n处理器入参类型说明#\n\n * 当使用“组件类名”作为键（例如 \\Slowlyo\\OwlAdmin\\Renderers\\TextControl::class）时，处理器接收的是“组件的\n   amisSchema 数组”。因此在处理器中应通过数组方式修改，例如：$schema['maxLength'] = 200。\n * 当使用内置的 PIPE_* 常量作为键（例如 AdminPipeline::PIPE_CREATE_ACTION）时，处理器接收的是“组件对象”（如\n   DialogAction、LinkAction、Form\n   等），可直接调用链式方法，例如：$schema->label('创建')->level('success')。\n\n\n实际应用案例#\n\n\n1. 统一按钮样式#\n\n\n\n\n2. 添加权限控制#\n\n\n\n\n3. 表单字段增强#\n\n\n\n\n4. 列表组件定制#\n\n\n\n\n管道处理器类#\n\n\n创建处理器类#\n\n\n\n\n使用处理器类#\n\n\n\n\n管道链配置#\n\n\n多个处理器组合#\n\n\n\n\n条件处理#\n\n\n\n\n高级功能#\n\n\n动态管道键生成#\n\n使用 parseKey() 方法可以动态生成管道键：\n\n\n\n\n条件管道注册#\n\n根据条件动态注册管道：\n\n\n\n\n管道中断处理#\n\n在管道中可以中断后续处理：\n\n\n\n\n管道数据传递#\n\n在管道间传递额外数据：\n\n\n\n\nAPI 参考#\n\n\nAdminPipeline 类方法#\n\nthrough($key, $pipes)#\n\n注册管道处理器到指定键。\n\n参数：\n\n * $key (string): 管道键名\n * $pipes (array): 处理器数组\n\n示例：\n\n\n\nhandle($key, $passable, $callback = null)#\n\n执行指定键的管道处理。\n\n参数：\n\n * $key (string): 管道键名\n * $passable (mixed): 要处理的对象\n * $callback (callable|null): 最终回调函数\n\n返回： 处理后的对象\n\ntap($key, $callback)#\n\n简化的管道执行，适用于无需传递对象的场景。\n\n参数：\n\n * $key (string): 管道键名\n * $callback (callable): 回调函数\n\nparseKey($suffix = '', $getChild = false)#\n\n动态生成管道键名。\n\n参数：\n\n * $suffix (string): 键名后缀\n * $getChild (bool): 是否获取子类名\n\n返回： 生成的键名\n\n\n处理器接口#\n\n管道处理器可以是：\n\n 1. 闭包函数\n\n\n\n 2. 类方法\n\n\n\n 3. 可调用对象\n\n\n\n\n最佳实践#\n\n\n1. 管道组织#\n\n * 将相关的管道配置放在 app/Admin/bootstrap.php 中\n * 使用类处理器处理复杂逻辑，闭包处理简单逻辑\n * 保持管道处理器的单一职责原则\n * 按功能模块组织管道配置\n\n\n2. 性能考虑#\n\n * 避免在管道中执行数据库查询，使用缓存或预加载\n * 缓存重复计算的结果\n * 合理控制管道数量，避免过度嵌套\n * 在管道开始处进行条件检查，提前退出不必要的处理\n\n\n3. 调试技巧#\n\n * 在管道中添加日志记录便于调试\n * 使用条件判断避免不必要的处理\n * 测试管道的执行顺序和数据传递\n * 使用 dd() 或 dump() 查看管道中的数据状态\n\n\n4. 维护性#\n\n * 为管道添加清晰的注释说明用途\n * 使用有意义的管道键名，遵循命名规范\n * 定期清理不再使用的管道配置\n * 建立管道配置的文档记录\n\n\n5. 安全性#\n\n * 在管道中进行权限检查\n * 验证输入数据的合法性\n * 避免在管道中暴露敏感信息\n * 对用户输入进行适当的过滤和转义\n\n\n实际应用场景#\n\n\n1. 多租户系统#\n\n为不同租户定制组件行为：\n\n\n\n\n2. 主题定制#\n\n根据用户偏好调整组件样式：\n\n\n\n\n3. 国际化支持#\n\n根据语言环境调整组件：\n\n\n\n\n4. 移动端适配#\n\n根据设备类型调整组件：\n\n\n\n\n常见问题#\n\n\nQ: 管道处理器的执行顺序是什么？#\n\nA: 管道处理器按照注册时数组的顺序依次执行。如果同一个键注册了多次，后注册的会覆盖前面的。\n\n\n\n\nQ: 如何在管道中获取当前请求信息？#\n\nA: 可以直接使用 Laravel 的辅助函数：\n\n\n\n\nQ: 管道处理器中可以抛出异常吗？#\n\nA: 可以，但建议谨慎使用。异常会中断管道执行：\n\n\n\n\nQ: 如何调试管道执行过程？#\n\nA: 可以在管道中添加日志或使用调试工具：\n\n\n\n\nQ: 管道会影响性能吗？#\n\nA: 适度使用不会显著影响性能。建议：\n\n * 避免在管道中执行重型操作\n * 使用缓存减少重复计算\n * 合理控制管道数量\n\n\nQ: 如何清除已注册的管道？#\n\nA: 可以通过上下文管理器清除：\n\n\n\n\n扩展阅读#\n\n * Laravel Pipeline 文档\n * 组件系统架构\n * 权限控制\n * 上下文管理","routePath":"/docs/guide/crud/component-pipeline","lang":"","toc":[{"text":"管道概念","id":"管道概念","depth":2,"charIndex":16},{"text":"工作原理","id":"工作原理","depth":2,"charIndex":123},{"text":"管道执行流程","id":"管道执行流程","depth":3,"charIndex":131},{"text":"核心机制","id":"核心机制","depth":3,"charIndex":247},{"text":"AdminPipeline 核心类","id":"adminpipeline-核心类","depth":2,"charIndex":320},{"text":"基础使用","id":"基础使用","depth":2,"charIndex":374},{"text":"修改新增按钮","id":"修改新增按钮","depth":3,"charIndex":382},{"text":"修改表单组件","id":"修改表单组件","depth":3,"charIndex":426},{"text":"可用管道常量","id":"可用管道常量","depth":2,"charIndex":438},{"text":"页面级管道","id":"页面级管道","depth":3,"charIndex":473},{"text":"表单级管道","id":"表单级管道","depth":3,"charIndex":622},{"text":"按钮级管道","id":"按钮级管道","depth":3,"charIndex":769},{"text":"工具栏级管道","id":"工具栏级管道","depth":3,"charIndex":1122},{"text":"组件级管道","id":"组件级管道","depth":3,"charIndex":1267},{"text":"处理器入参类型说明","id":"处理器入参类型说明","depth":2,"charIndex":1305},{"text":"实际应用案例","id":"实际应用案例","depth":2,"charIndex":1634},{"text":"1. 统一按钮样式","id":"1-统一按钮样式","depth":3,"charIndex":1644},{"text":"2. 添加权限控制","id":"2-添加权限控制","depth":3,"charIndex":1659},{"text":"3. 表单字段增强","id":"3-表单字段增强","depth":3,"charIndex":1674},{"text":"4. 列表组件定制","id":"4-列表组件定制","depth":3,"charIndex":1689},{"text":"管道处理器类","id":"管道处理器类","depth":2,"charIndex":1704},{"text":"创建处理器类","id":"创建处理器类","depth":3,"charIndex":1714},{"text":"使用处理器类","id":"使用处理器类","depth":3,"charIndex":1726},{"text":"管道链配置","id":"管道链配置","depth":2,"charIndex":1738},{"text":"多个处理器组合","id":"多个处理器组合","depth":3,"charIndex":1747},{"text":"条件处理","id":"条件处理","depth":3,"charIndex":1760},{"text":"高级功能","id":"高级功能","depth":2,"charIndex":1770},{"text":"动态管道键生成","id":"动态管道键生成","depth":3,"charIndex":1778},{"text":"条件管道注册","id":"条件管道注册","depth":3,"charIndex":1819},{"text":"管道中断处理","id":"管道中断处理","depth":3,"charIndex":1844},{"text":"管道数据传递","id":"管道数据传递","depth":3,"charIndex":1871},{"text":"API 参考","id":"api-参考","depth":2,"charIndex":1896},{"text":"AdminPipeline 类方法","id":"adminpipeline-类方法","depth":3,"charIndex":1906},{"text":"through($key, $pipes)","id":"throughkey-pipes","depth":4,"charIndex":1926},{"text":"handle($key, $passable, $callback = null)","id":"handlekey-passable-callback--null","depth":4,"charIndex":2025},{"text":"tap($key, $callback)","id":"tapkey-callback","depth":4,"charIndex":2189},{"text":"parseKey($suffix = '', $getChild = false)","id":"parsekeysuffix---getchild--false","depth":4,"charIndex":2294},{"text":"处理器接口","id":"处理器接口","depth":3,"charIndex":2422},{"text":"最佳实践","id":"最佳实践","depth":2,"charIndex":2478},{"text":"1. 管道组织","id":"1-管道组织","depth":3,"charIndex":2486},{"text":"2. 性能考虑","id":"2-性能考虑","depth":3,"charIndex":2596},{"text":"3. 调试技巧","id":"3-调试技巧","depth":3,"charIndex":2693},{"text":"4. 维护性","id":"4-维护性","depth":3,"charIndex":2790},{"text":"5. 安全性","id":"5-安全性","depth":3,"charIndex":2872},{"text":"实际应用场景","id":"实际应用场景","depth":2,"charIndex":2946},{"text":"1. 多租户系统","id":"1-多租户系统","depth":3,"charIndex":2956},{"text":"2. 主题定制","id":"2-主题定制","depth":3,"charIndex":2984},{"text":"3. 国际化支持","id":"3-国际化支持","depth":3,"charIndex":3012},{"text":"4. 移动端适配","id":"4-移动端适配","depth":3,"charIndex":3039},{"text":"常见问题","id":"常见问题","depth":2,"charIndex":3066},{"text":"Q: 管道处理器的执行顺序是什么？","id":"q-管道处理器的执行顺序是什么","depth":3,"charIndex":3074},{"text":"Q: 如何在管道中获取当前请求信息？","id":"q-如何在管道中获取当前请求信息","depth":3,"charIndex":3145},{"text":"Q: 管道处理器中可以抛出异常吗？","id":"q-管道处理器中可以抛出异常吗","depth":3,"charIndex":3195},{"text":"Q: 如何调试管道执行过程？","id":"q-如何调试管道执行过程","depth":3,"charIndex":3244},{"text":"Q: 管道会影响性能吗？","id":"q-管道会影响性能吗","depth":3,"charIndex":3287},{"text":"Q: 如何清除已注册的管道？","id":"q-如何清除已注册的管道","depth":3,"charIndex":3367},{"text":"扩展阅读","id":"扩展阅读","depth":2,"charIndex":3405}],"domain":"","frontmatter":{},"version":""},{"id":24,"title":"新增功能详解","content":"#\n\n\n新增流程概览#\n\n新增功能的完整流程包括表单构建、数据验证、保存处理和响应返回：\n\n\n\n\n表单构建详解#\n\n\nform 方法实现#\n\nform 方法是构建新增和编辑表单的核心方法：\n\n\n\n提示：baseForm(true) 用于开启“提交成功后返回上一页”的行为，参数与是否编辑无关，可按需开启。\n\n\n表单模式对比#\n\n模式     触发方式                  表单容器        API 设置                       特点\n页面模式   访问 /resource/create   Card 组件     form().api(getStorePath())   独立页面，适合复杂表单\n弹窗模式   点击新增按钮                Dialog 组件   form().api(getStorePath())   浮层显示，适合简单表单\n抽屉模式   点击新增按钮                Drawer 组件   form().api(getStorePath())   侧边滑出，适合中等复杂度表单\n\n\n表单组件类型#\n\n框架提供了丰富的表单组件：\n\n\n\n\n表单验证#\n\n前端验证#\n\n\n\n后端验证#\n\n在 Service 的 saving 钩子中进行验证：\n\n\n\n\n数据保存处理#\n\n\nstore 方法流程#\n\n控制器的 store 方法处理新增请求：\n\n\n\n\nService 层处理#\n\nAdminService 的 store 方法实现：\n\n\n\n\n钩子函数详解#\n\nsaving 钩子（保存前）#\n\n\n\nsaved 钩子（保存后）#\n\n\n\n\n实际应用案例#\n\n\n完整的用户管理新增功能#\n\n\n\n对应的 Service 实现：\n\n\n\n\n错误处理#\n\n\n常见错误类型#\n\n 1. 验证错误：数据格式不正确、必填字段为空等\n 2. 业务错误：违反业务规则、权限不足等\n 3. 系统错误：数据库连接失败、文件上传失败等\n\n\n错误处理机制#\n\n\n\n\n前端错误显示#\n\n框架会自动处理错误响应并在前端显示：\n\n\n\n前端会自动显示错误提示，无需额外处理。\n\n\n性能优化#\n\n\n1. 数据库优化#\n\n\n\n\n2. 文件上传优化#\n\n\n\n\n3. 缓存策略#\n\n","routePath":"/docs/guide/crud/create","lang":"","toc":[{"text":"新增流程概览","id":"新增流程概览","depth":2,"charIndex":3},{"text":"表单构建详解","id":"表单构建详解","depth":2,"charIndex":48},{"text":"form 方法实现","id":"form-方法实现","depth":3,"charIndex":58},{"text":"表单模式对比","id":"表单模式对比","depth":3,"charIndex":154},{"text":"表单组件类型","id":"表单组件类型","depth":3,"charIndex":487},{"text":"表单验证","id":"表单验证","depth":3,"charIndex":514},{"text":"前端验证","id":"前端验证","depth":4,"charIndex":521},{"text":"后端验证","id":"后端验证","depth":4,"charIndex":530},{"text":"数据保存处理","id":"数据保存处理","depth":2,"charIndex":569},{"text":"store 方法流程","id":"store-方法流程","depth":3,"charIndex":579},{"text":"Service 层处理","id":"service-层处理","depth":3,"charIndex":617},{"text":"钩子函数详解","id":"钩子函数详解","depth":3,"charIndex":662},{"text":"saving 钩子（保存前）","id":"saving-钩子保存前","depth":4,"charIndex":671},{"text":"saved 钩子（保存后）","id":"saved-钩子保存后","depth":4,"charIndex":690},{"text":"实际应用案例","id":"实际应用案例","depth":2,"charIndex":709},{"text":"完整的用户管理新增功能","id":"完整的用户管理新增功能","depth":3,"charIndex":719},{"text":"错误处理","id":"错误处理","depth":2,"charIndex":755},{"text":"常见错误类型","id":"常见错误类型","depth":3,"charIndex":763},{"text":"错误处理机制","id":"错误处理机制","depth":3,"charIndex":846},{"text":"前端错误显示","id":"前端错误显示","depth":3,"charIndex":858},{"text":"性能优化","id":"性能优化","depth":2,"charIndex":911},{"text":"1. 数据库优化","id":"1-数据库优化","depth":3,"charIndex":919},{"text":"2. 文件上传优化","id":"2-文件上传优化","depth":3,"charIndex":933},{"text":"3. 缓存策略","id":"3-缓存策略","depth":3,"charIndex":948}],"domain":"","frontmatter":{},"version":""},{"id":25,"title":"删除功能详解","content":"#\n\n\n删除流程概览#\n\n删除功能包括单条删除、批量删除、软删除等多种模式：\n\n\n\n\n删除按钮配置#\n\n\n列表页删除按钮#\n\n控制器中的 list 方法负责构建数据列表和删除按钮：\n\n\n\n\n删除按钮权限控制#\n\n\n\n\n删除方法实现#\n\n\ndestroy 方法处理#\n\n控制器的 destroy 方法处理删除请求：\n\n\n\n\nService 层删除实现（内置默认行为）#\n\nAdminService 默认实现的删除逻辑如下（见 Slowlyo\\OwlAdmin\\Services\\AdminService::delete()）：\n\n\n\n说明：\n\n * 如果模型 use SoftDeletes，Eloquent 的 delete() 将执行软删除；否则为硬删除。\n * 如需“永久删除/恢复”等能力，请在业务 Service 中自定义扩展（见下文“扩展示例”）。\n\n\n删除类型详解#\n\n\n1. 软删除（默认由 Eloquent 提供）#\n\n软删除不会真正删除数据，而是标记为已删除状态：\n\n\n\n\n2. 硬删除#\n\n直接从数据库中删除记录：\n\n\n\n\n删除权限控制#\n\n\n权限验证#\n\n\n\n\n批量删除功能#\n\n\n前端批量删除配置#\n\n\n\n\n批量删除实现（扩展示例，非内置）#\n\n\n\n\n删除钩子函数#\n\n\ndeleted 钩子（删除后）#\n\n\n\n\n回收站功能（扩展示例，非内置）#\n\n\n\n\n实际应用案例#\n\n\n完整的用户删除功能#\n\n\n\n\n分类删除功能（级联处理）#\n\n\n\n\n安全注意事项#\n\n\n1. 防止误删#\n\n\n\n\n2. 删除日志记录#\n\n\n\n\n3. 数据备份#\n\n\n\n\n性能优化#\n\n\n1. 批量操作优化#\n\n\n\n\n2. 异步删除#\n\n\n\n\n3. 软删除索引优化#\n\n\n\n\n最佳实践#\n\n 1.  优先使用软删除：对于重要数据，建议使用软删除而非硬删除\n 2.  权限控制：严格控制删除权限，防止误删重要数据\n 3.  关联检查：删除前检查关联数据，避免数据完整性问题\n 4.  日志记录：详细记录删除操作，便于审计和恢复\n 5.  数据备份：重要数据删除前进行备份\n 6.  批量限制：限制批量删除的数量，防止系统负载过高\n 7.  异步处理：大量数据删除使用队列异步处理\n 8.  用户确认：重要操作需要用户二次确认\n 9.  回收站功能：提供回收站功能，允许用户恢复误删数据\n 10. 性能优化：合理使用索引，优化删除查询性能","routePath":"/docs/guide/crud/delete","lang":"","toc":[{"text":"删除流程概览","id":"删除流程概览","depth":2,"charIndex":3},{"text":"删除按钮配置","id":"删除按钮配置","depth":2,"charIndex":42},{"text":"列表页删除按钮","id":"列表页删除按钮","depth":3,"charIndex":52},{"text":"删除按钮权限控制","id":"删除按钮权限控制","depth":3,"charIndex":94},{"text":"删除方法实现","id":"删除方法实现","depth":2,"charIndex":108},{"text":"destroy 方法处理","id":"destroy-方法处理","depth":3,"charIndex":118},{"text":"Service 层删除实现（内置默认行为）","id":"service-层删除实现内置默认行为","depth":3,"charIndex":160},{"text":"删除类型详解","id":"删除类型详解","depth":2,"charIndex":381},{"text":"1. 软删除（默认由 Eloquent 提供）","id":"1-软删除默认由-eloquent-提供","depth":3,"charIndex":391},{"text":"2. 硬删除","id":"2-硬删除","depth":3,"charIndex":445},{"text":"删除权限控制","id":"删除权限控制","depth":2,"charIndex":471},{"text":"权限验证","id":"权限验证","depth":3,"charIndex":481},{"text":"批量删除功能","id":"批量删除功能","depth":2,"charIndex":491},{"text":"前端批量删除配置","id":"前端批量删除配置","depth":3,"charIndex":501},{"text":"批量删除实现（扩展示例，非内置）","id":"批量删除实现扩展示例非内置","depth":3,"charIndex":515},{"text":"删除钩子函数","id":"删除钩子函数","depth":2,"charIndex":537},{"text":"deleted 钩子（删除后）","id":"deleted-钩子删除后","depth":3,"charIndex":547},{"text":"回收站功能（扩展示例，非内置）","id":"回收站功能扩展示例非内置","depth":2,"charIndex":568},{"text":"实际应用案例","id":"实际应用案例","depth":2,"charIndex":589},{"text":"完整的用户删除功能","id":"完整的用户删除功能","depth":3,"charIndex":599},{"text":"分类删除功能（级联处理）","id":"分类删除功能级联处理","depth":3,"charIndex":614},{"text":"安全注意事项","id":"安全注意事项","depth":2,"charIndex":632},{"text":"1. 防止误删","id":"1-防止误删","depth":3,"charIndex":642},{"text":"2. 删除日志记录","id":"2-删除日志记录","depth":3,"charIndex":655},{"text":"3. 数据备份","id":"3-数据备份","depth":3,"charIndex":670},{"text":"性能优化","id":"性能优化","depth":2,"charIndex":683},{"text":"1. 批量操作优化","id":"1-批量操作优化","depth":3,"charIndex":691},{"text":"2. 异步删除","id":"2-异步删除","depth":3,"charIndex":706},{"text":"3. 软删除索引优化","id":"3-软删除索引优化","depth":3,"charIndex":719},{"text":"最佳实践","id":"最佳实践","depth":2,"charIndex":735}],"domain":"","frontmatter":{},"version":""},{"id":26,"title":"数据导出","content":"#\n\n框架内置基于 FastExcel 的 Excel 导出能力；如需 CSV 或多格式导出，可通过重写 export() 自行扩展（见下文“扩展示例，非内置”）。\n\n依赖说明\n\nExcel 导出需要安装：composer require rap2hpoutre/fast-excel\n\n\n使用#\n\n\n\n\n自定义导出信息#\n\n\n导出文件名#\n\n\n\n\n导出列信息#\n\n\n\n\n完整自定义#\n\n如果以上配置不能满足你的需求, 你可以重写 export 方法, 自定义导出逻辑\n\n\n\n\n多格式导出（扩展示例，非内置）#\n\n如下为自定义多格式导出的示例：\n\n\n\n\n大数据量处理（扩展示例，非内置）#\n\n处理大量数据时的优化方案示例：\n\n\n\n\n最佳实践#\n\n\n1. 性能优化#\n\n * 大数据量使用分块处理（chunk）\n * 避免在 exportMap 中执行数据库查询\n * 预加载必要的关联关系\n\n\n2. 安全考虑#\n\n * 控制导出数据量，避免内存溢出\n * 验证用户导出权限\n * 敏感数据脱敏处理\n\n\n3. 用户体验#\n\n * 提供清晰的文件命名\n * 支持多种导出格式\n * 大文件导出时显示进度提示","routePath":"/docs/guide/crud/export","lang":"","toc":[{"text":"使用","id":"使用","depth":2,"charIndex":144},{"text":"自定义导出信息","id":"自定义导出信息","depth":2,"charIndex":152},{"text":"导出文件名","id":"导出文件名","depth":3,"charIndex":163},{"text":"导出列信息","id":"导出列信息","depth":3,"charIndex":174},{"text":"完整自定义","id":"完整自定义","depth":2,"charIndex":185},{"text":"多格式导出（扩展示例，非内置）","id":"多格式导出扩展示例非内置","depth":2,"charIndex":238},{"text":"大数据量处理（扩展示例，非内置）","id":"大数据量处理扩展示例非内置","depth":2,"charIndex":276},{"text":"最佳实践","id":"最佳实践","depth":2,"charIndex":315},{"text":"1. 性能优化","id":"1-性能优化","depth":3,"charIndex":323},{"text":"2. 安全考虑","id":"2-安全考虑","depth":3,"charIndex":396},{"text":"3. 用户体验","id":"3-用户体验","depth":3,"charIndex":450}],"domain":"","frontmatter":{},"version":""},{"id":27,"title":"查询功能详解","content":"#\n\n\n查询流程概览#\n\n查询功能包括列表展示和详情查看两个核心部分：\n\n\n\n\n列表功能详解#\n\n\nindex 方法的多重职责#\n\nindex 方法通过 _action 参数处理不同类型的请求：\n\n\n\n请求类型对应关系：\n\n请求类型     URL 示例                              处理方法                       返回内容\n页面结构     /users                              list()                     CRUD 组件配置\n列表数据     /users?_action=getData              service->list()            分页数据\n导出数据     /users?_action=export               export()                   导出文件\n快速编辑     post:/users?_action=quickEdit       service->quickEdit()       操作结果\n快速编辑单项   post:/users?_action=quickEditItem   service->quickEditItem()   操作结果\n\n\nlist 方法构建页面结构#\n\nlist 方法负责构建完整的 CRUD 页面结构：\n\n\n\n\n高级列表配置#\n\n表格样式定制#\n\n\n\n条件渲染#\n\n\n\n\n数据查询处理#\n\n\nService 层查询方法#\n\nlist 方法（分页查询）#\n\n\n\nlistQuery 方法（查询构建）#\n\n\n\n搜索条件处理#\n\n\n\n排序处理#\n\n\n\n\n关联查询优化#\n\n预加载关联关系#\n\n\n\n动态关联加载#\n\nAdminService 已内置 loadRelations()，会根据当前控制器 list() 返回的 TableColumn\n配置中带点（.）的字段名自动推导并执行 $query->with(...)，无需手动重写。你仍可通过重写 addRelations($query,\n'list') 追加自定义关联。\n\n\n数据格式化#\n\nformatRows 方法#\n\n\n\n\n详情功能详解#\n\n\nshow 方法处理#\n\n\n\n\ndetail 方法构建#\n\n\n\n\nService 详情查询#\n\n\n\n\n性能优化策略#\n\n\n1. 查询优化#\n\n> 注意：以下为“扩展示例，非内置”能力，示例中的 cursorPaginate、standardPaginate 等方法需自行实现。\n\n\n\n\n2. 缓存策略#\n\n> 注意：以下为“扩展示例，非内置”能力，示例中的 buildCacheKey、queryData 需自行实现。\n\n\n\n\n3. 数据库连接优化（扩展示例）#\n\n建议通过 config/database.php 配置读写分离。如需在 Service 层使用特定连接，可在模型上切换连接后再构建查询（例如使用模型的\nsetConnection() 或 on() 方法），并确保与项目的全局数据库策略一致。","routePath":"/docs/guide/crud/read","lang":"","toc":[{"text":"查询流程概览","id":"查询流程概览","depth":2,"charIndex":3},{"text":"列表功能详解","id":"列表功能详解","depth":2,"charIndex":39},{"text":"index 方法的多重职责","id":"index-方法的多重职责","depth":3,"charIndex":49},{"text":"list 方法构建页面结构","id":"list-方法构建页面结构","depth":3,"charIndex":580},{"text":"高级列表配置","id":"高级列表配置","depth":3,"charIndex":626},{"text":"表格样式定制","id":"表格样式定制","depth":4,"charIndex":635},{"text":"条件渲染","id":"条件渲染","depth":4,"charIndex":646},{"text":"数据查询处理","id":"数据查询处理","depth":2,"charIndex":656},{"text":"Service 层查询方法","id":"service-层查询方法","depth":3,"charIndex":666},{"text":"list 方法（分页查询）","id":"list-方法分页查询","depth":4,"charIndex":682},{"text":"listQuery 方法（查询构建）","id":"listquery-方法查询构建","depth":4,"charIndex":700},{"text":"搜索条件处理","id":"搜索条件处理","depth":4,"charIndex":723},{"text":"排序处理","id":"排序处理","depth":4,"charIndex":734},{"text":"关联查询优化","id":"关联查询优化","depth":3,"charIndex":744},{"text":"预加载关联关系","id":"预加载关联关系","depth":4,"charIndex":753},{"text":"动态关联加载","id":"动态关联加载","depth":4,"charIndex":765},{"text":"数据格式化","id":"数据格式化","depth":3,"charIndex":932},{"text":"formatRows 方法","id":"formatrows-方法","depth":4,"charIndex":940},{"text":"详情功能详解","id":"详情功能详解","depth":2,"charIndex":959},{"text":"show 方法处理","id":"show-方法处理","depth":3,"charIndex":969},{"text":"detail 方法构建","id":"detail-方法构建","depth":3,"charIndex":984},{"text":"Service 详情查询","id":"service-详情查询","depth":3,"charIndex":1001},{"text":"性能优化策略","id":"性能优化策略","depth":2,"charIndex":1019},{"text":"1. 查询优化","id":"1-查询优化","depth":3,"charIndex":1029},{"text":"2. 缓存策略","id":"2-缓存策略","depth":3,"charIndex":1111},{"text":"3. 数据库连接优化（扩展示例）","id":"3-数据库连接优化扩展示例","depth":3,"charIndex":1182}],"domain":"","frontmatter":{},"version":""},{"id":28,"title":"Service 重写详解","content":"#\n\n\nService 架构概览#\n\nAdminService 是 Owl Admin 框架的核心服务层，提供了完整的 CRUD 操作和扩展机制：\n\n\n\n\n核心方法分类#\n\n\n主要 CRUD 方法#\n\n方法                           说明       使用场景\nlist()                       获取列表数据   列表页面数据查询\nstore($data)                 新增数据     创建新记录\nupdate($primaryKey, $data)   修改数据     更新现有记录\ndelete($ids)                 删除数据     删除单条或多条记录\n\n\n查询相关方法#\n\n方法                             说明       重写频率\nlistQuery()                    构建列表查询   高\naddRelations($query, $scene)   添加关联关系   高\nsearchable($query)             搜索条件     高\nsortable($query)               排序逻辑     中\nsortColumn()                   默认排序字段   中\n\n\n数据处理方法#\n\n方法                  说明        重写频率\nformatRows($rows)   列表数据格式化   高\ngetDetail($id)      获取详情数据    中\ngetEditData($id)    获取编辑数据    中\n\n\n钩子方法#\n\n方法                            说明      执行时机\nsaving(&$data, $primaryKey)   保存前处理   新增/修改前\nsaved($model, $isEdit)        保存后处理   新增/修改后\ndeleted($ids)                 删除后处理   删除后\n\n\n方法详解与实现#\n\n\n1. 查询构建方法#\n\nlistQuery() - 构建基础查询#\n\n\n\naddRelations() - 添加关联关系#\n\n\n\nsearchable() - 搜索条件#\n\n\n\nsortable() - 排序逻辑#\n\n\n\n\n2. 数据处理方法#\n\nformatRows() - 列表数据格式化#\n\n\n\ngetDetail() - 获取详情数据#\n\n\n\ngetEditData() - 获取编辑数据#\n\n\n\n\n3. 钩子方法详解#\n\nsaving() - 保存前处理#\n\n\n\nsaved() - 保存后处理#\n\n\n\ndeleted() - 删除后处理#\n\n\n\n\n完整实际应用案例#\n\n\n1. 用户管理 Service#\n\n\n\n\n2. 文章管理 Service#\n\n\n\n\n最佳实践总结#\n\n\n1. 方法重写原则#\n\n * 保持原有逻辑：重写 searchable() 和 sortable() 时要保留原方法的核心逻辑\n * 数据验证：在 saving() 中进行严格的数据验证\n * 关联处理：在 saved() 中处理复杂的关联关系\n * 缓存清理：及时清理相关缓存，保证数据一致性\n\n\n2. 性能优化#\n\n * 预加载关联：在 addRelations() 中合理使用 with() 预加载\n * 查询优化：避免 N+1 查询问题\n * 索引使用：确保搜索和排序字段有适当的数据库索引\n * 分页处理：大数据量时使用游标分页\n\n\n3. 安全考虑#\n\n * 权限控制：在查询中加入权限过滤\n * 数据验证：严格验证用户输入\n * SQL 注入防护：使用参数化查询\n * 文件上传安全：验证文件类型和大小\n\n\n4. 代码组织#\n\n * 单一职责：每个方法只负责一个功能\n * 可读性：使用清晰的变量名和注释\n * 可测试性：将复杂逻辑拆分为小方法\n * 可扩展性：预留扩展点，便于后续功能添加","routePath":"/docs/guide/crud/service-rewrite","lang":"","toc":[{"text":"Service 架构概览","id":"service-架构概览","depth":2,"charIndex":3},{"text":"核心方法分类","id":"核心方法分类","depth":2,"charIndex":77},{"text":"主要 CRUD 方法","id":"主要-crud-方法","depth":3,"charIndex":87},{"text":"查询相关方法","id":"查询相关方法","depth":3,"charIndex":329},{"text":"数据处理方法","id":"数据处理方法","depth":3,"charIndex":595},{"text":"钩子方法","id":"钩子方法","depth":3,"charIndex":737},{"text":"方法详解与实现","id":"方法详解与实现","depth":2,"charIndex":921},{"text":"1. 查询构建方法","id":"1-查询构建方法","depth":3,"charIndex":932},{"text":"listQuery() - 构建基础查询","id":"listquery---构建基础查询","depth":4,"charIndex":944},{"text":"addRelations() - 添加关联关系","id":"addrelations---添加关联关系","depth":4,"charIndex":969},{"text":"searchable() - 搜索条件","id":"searchable---搜索条件","depth":4,"charIndex":997},{"text":"sortable() - 排序逻辑","id":"sortable---排序逻辑","depth":4,"charIndex":1021},{"text":"2. 数据处理方法","id":"2-数据处理方法","depth":3,"charIndex":1044},{"text":"formatRows() - 列表数据格式化","id":"formatrows---列表数据格式化","depth":4,"charIndex":1056},{"text":"getDetail() - 获取详情数据","id":"getdetail---获取详情数据","depth":4,"charIndex":1083},{"text":"getEditData() - 获取编辑数据","id":"geteditdata---获取编辑数据","depth":4,"charIndex":1108},{"text":"3. 钩子方法详解","id":"3-钩子方法详解","depth":3,"charIndex":1136},{"text":"saving() - 保存前处理","id":"saving---保存前处理","depth":4,"charIndex":1148},{"text":"saved() - 保存后处理","id":"saved---保存后处理","depth":4,"charIndex":1169},{"text":"deleted() - 删除后处理","id":"deleted---删除后处理","depth":4,"charIndex":1189},{"text":"完整实际应用案例","id":"完整实际应用案例","depth":2,"charIndex":1212},{"text":"1. 用户管理 Service","id":"1-用户管理-service","depth":3,"charIndex":1224},{"text":"2. 文章管理 Service","id":"2-文章管理-service","depth":3,"charIndex":1245},{"text":"最佳实践总结","id":"最佳实践总结","depth":2,"charIndex":1266},{"text":"1. 方法重写原则","id":"1-方法重写原则","depth":3,"charIndex":1276},{"text":"2. 性能优化","id":"2-性能优化","depth":3,"charIndex":1426},{"text":"3. 安全考虑","id":"3-安全考虑","depth":3,"charIndex":1548},{"text":"4. 代码组织","id":"4-代码组织","depth":3,"charIndex":1636}],"domain":"","frontmatter":{},"version":""},{"id":29,"title":"编辑功能详解","content":"#\n\n\n编辑流程概览#\n\n编辑功能包括数据回显、表单验证、数据更新等核心环节：\n\n\n\n\n表单构建与数据回显#\n\n\nform 方法的编辑模式#\n\nform 方法通过 $isEdit 参数区分新增和编辑模式：\n\n\n\n提示：如需在提交成功后返回上一页，可使用 baseForm(true) 开启“提交成功后返回上一页”的行为，该参数与 $isEdit 无关。\n\n\n条件显示字段#\n\n根据编辑状态动态显示不同字段：\n\n\n\n\n数据回显机制#\n\nedit 方法处理#\n\n\n\ngetEditData 方法实现#\n\n\n\n\n数据更新处理#\n\n\nupdate 方法流程#\n\n控制器的 update 方法处理编辑请求：\n\n\n\n\nService 层更新实现#\n\n\n\n\n编辑钩子函数#\n\nsaving 钩子（更新前）#\n\n\n\nsaved 钩子（更新后）#\n\n\n\n\n高级编辑功能#\n\n\n批量编辑（扩展示例，非内置）#\n\n\n\n\n快速编辑#\n\n内置支持表格内快速编辑，无需新增控制器方法：\n\n","routePath":"/docs/guide/crud/update","lang":"","toc":[{"text":"编辑流程概览","id":"编辑流程概览","depth":2,"charIndex":3},{"text":"表单构建与数据回显","id":"表单构建与数据回显","depth":2,"charIndex":43},{"text":"form 方法的编辑模式","id":"form-方法的编辑模式","depth":3,"charIndex":56},{"text":"条件显示字段","id":"条件显示字段","depth":3,"charIndex":178},{"text":"数据回显机制","id":"数据回显机制","depth":3,"charIndex":207},{"text":"edit 方法处理","id":"edit-方法处理","depth":4,"charIndex":216},{"text":"getEditData 方法实现","id":"geteditdata-方法实现","depth":4,"charIndex":230},{"text":"数据更新处理","id":"数据更新处理","depth":2,"charIndex":252},{"text":"update 方法流程","id":"update-方法流程","depth":3,"charIndex":262},{"text":"Service 层更新实现","id":"service-层更新实现","depth":3,"charIndex":302},{"text":"编辑钩子函数","id":"编辑钩子函数","depth":3,"charIndex":321},{"text":"saving 钩子（更新前）","id":"saving-钩子更新前","depth":4,"charIndex":330},{"text":"saved 钩子（更新后）","id":"saved-钩子更新后","depth":4,"charIndex":349},{"text":"高级编辑功能","id":"高级编辑功能","depth":2,"charIndex":368},{"text":"批量编辑（扩展示例，非内置）","id":"批量编辑扩展示例非内置","depth":3,"charIndex":378},{"text":"快速编辑","id":"快速编辑","depth":3,"charIndex":398}],"domain":"","frontmatter":{},"version":""},{"id":30,"title":"组件封装","content":"#\n\n> 提供一种思路, 仅供参考~\n\n\n组件封装#\n\n添加一个 Components 类, 用于存放自定义组件, 初始模板类似这样:\n\n文件: app/Support/Components.php\n\n\n\n\n使用方式#\n\n\n\n\n分享组件#\n\n你可以在 GitHub 的 discussions 分享你的组件, 或者获取他人分享的组件~\n\n👉 discussions","routePath":"/docs/guide/examples/component-encapsulation","lang":"","toc":[{"text":"组件封装","id":"组件封装-1","depth":2,"charIndex":-1},{"text":"使用方式","id":"使用方式","depth":2,"charIndex":103},{"text":"分享组件","id":"分享组件","depth":2,"charIndex":113}],"domain":"","frontmatter":{},"version":""},{"id":31,"title":"条件组合查询","content":"#\n\n> v3.0.3 新增\n\n在 OwlAdmin 中，可以使用 ConditionBuilder 组件来灵活的构建条件组合查询。\n\n\n使用#\n\n\n1. 在 Model 中引入 ConditionBuilderScopeTrait#\n\n\n\n\n2. 在需要使用条件组合查询的语句中，添加 withConditionBuilder() 方法`#\n\nwithConditionBuilder() 是在 ConditionBuilderScopeTrait 中实现的 局部查询作用域\n\n\n\n\n3. 添加 ConditionBuilder 组件#\n\n以基础的 CRUD 页面为例：\n\nConditionBuilder 组件的使用，请参考 官方文档\n\n\n\n\n扩展#\n\n在准备扩展前，请先确保读懂了 ConditionBuilderScopeTrait 的实现，以及 ConditionBuilder 组件的使用\n\n\n1. 参考上述示例，添加自定义类型#\n\n\n2. 在对应的 Model 中，添加 extraConditionBuilderQuery 方法#\n\n\n\n注意：\n\n * 在构建查询时，涉及循环&递归，请不要在 extraConditionBuilderQuery 方法中进行任何io操作~\n * ConditionBuilder 组件产生的数据较大，建议使用 post 请求~","routePath":"/docs/guide/examples/condition-builder","lang":"","toc":[{"text":"使用","id":"使用","depth":2,"charIndex":68},{"text":"1. 在 `Model` 中引入 `ConditionBuilderScopeTrait`","id":"1-在-model-中引入-conditionbuilderscopetrait","depth":3,"charIndex":-1},{"text":"2. 在需要使用条件组合查询的语句中，添加 `withConditionBuilder()` 方法`","id":"2-在需要使用条件组合查询的语句中添加-withconditionbuilder-方法","depth":3,"charIndex":-1},{"text":"3. 添加 `ConditionBuilder` 组件","id":"3-添加-conditionbuilder-组件","depth":3,"charIndex":-1},{"text":"扩展","id":"扩展","depth":2,"charIndex":323},{"text":"1. 参考上述示例，添加自定义类型","id":"1-参考上述示例添加自定义类型","depth":3,"charIndex":402},{"text":"2. 在对应的 `Model` 中，添加 `extraConditionBuilderQuery` 方法","id":"2-在对应的-model-中添加-extraconditionbuilderquery-方法","depth":3,"charIndex":-1}],"domain":"","frontmatter":{},"version":""},{"id":32,"title":"自定义后台路径","content":"#\n\n> 日常使用会遇到需要更改后台访问路径的需求, 避免被不相关的人访问到后台.\n\n注意\n\nv3.6.1 及以上的版本, 在 app/Admin/routes.php 文件中修改即可\n\n你可以按照以下步骤, 实现自定义访问路径:#\n\n1.定义你的自定义访问路径, 如下:\n\n\n\n 2. 处理原本的 /admin 访问路径, 让它返回 404:\n\n","routePath":"/docs/guide/examples/custom-admin-path","lang":"","toc":[{"text":"你可以按照以下步骤, 实现自定义访问路径:","id":"你可以按照以下步骤-实现自定义访问路径","depth":4,"charIndex":93}],"domain":"","frontmatter":{},"version":""},{"id":33,"title":"自定义登录页","content":"#\n\n 1. 在页面右上角的 [主题配置] 中, 将登录页模板切换为 Amis\n\n 2. 自行实现 \\App\\Admin\\Controllers\\AuthController 中的 loginPage()\n\n 3. 覆盖 login 路由\n\n","routePath":"/docs/guide/examples/custom-login","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":34,"title":"自定义用户菜单","content":"#\n\n 1. 自行实现 \\App\\Admin\\Controllers\\AuthController 中的 currentUser()\n\n 2. 覆盖 current-user 路由\n\n","routePath":"/docs/guide/examples/custom-user-menu","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":35,"title":"动态添加菜单","content":"#\n\n框架提供了 Admin::menu() 方法, 可用于动态添加菜单项.\n\n","routePath":"/docs/guide/examples/dynamic-add-menu","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":36,"title":"Excel 导入","content":"#\n\n> 这里举例一种 Excel 导入的写法, 或许不是最佳实现, 仅作参考~\n\n> 数据量不大的情况下, 使用 InputExcel 也是个不错的主意~\n\n\n在 CRUD 的工具栏添加两个按钮#\n\n\n\n注意: 此处的 Components 是自己封装的, 里面可以放一些常用的非基础组件, 并非框架自带~\n\n导入按钮实现#\n\n这里实现了一个弹窗表单, 上传文件并提交~\n\n\n\n模板下载按钮实现#\n\n这里传入了文件地址, 通过跳转链接的方式, 让浏览者自动下载文件~\n\n注: 这里我的模板文件路径为: /public/template/XXX导入模板.xlsx\n\n\n\n\n实现导入接口#\n\n\n\n\n\n注: 此处使用 fast-excel 实现了最基础的数据导入, 其他逻辑自行添加~","routePath":"/docs/guide/examples/excel-import","lang":"","toc":[{"text":"在 `CRUD` 的工具栏添加两个按钮","id":"在-crud-的工具栏添加两个按钮","depth":3,"charIndex":-1},{"text":"导入按钮实现","id":"导入按钮实现","depth":4,"charIndex":155},{"text":"模板下载按钮实现","id":"模板下载按钮实现","depth":4,"charIndex":189},{"text":"实现导入接口","id":"实现导入接口","depth":3,"charIndex":285}],"domain":"","frontmatter":{},"version":""},{"id":37,"title":"前后端独立部署","content":"#\n\n\n准备代码#\n\n新建一个存放前端代码的文件夹, 内容如下\n\n\n\n\n调整入口文件#\n\n\n\n站点目录指向 frontend 目录即可","routePath":"/docs/guide/examples/independent-deployment","lang":"","toc":[{"text":"准备代码","id":"准备代码","depth":2,"charIndex":3},{"text":"调整入口文件","id":"调整入口文件","depth":2,"charIndex":35}],"domain":"","frontmatter":{},"version":""},{"id":38,"title":"模型关联数据展示","content":"#\n\n\n假设你定义了这么一个关联#\n\n\n\n如果你连模型关联都没玩明白, 建议先通读并背诵 文档 ~\n\n\n现在你需要在列表中或者详情中回显#\n\n更改 Service 中的查询#\n\n\n\n更改查询后, 你的数据将从一维变成二维\n\n\n\n如果你连数据结构为什么变成这样都有点蒙圈, 建议先通读并背诵 文档 ~\n\n\n现在你需要在列表中或者详情中回显#\n\n\n\n\n为什么可以这么玩?#\n\n这里你需要先了解一下 amis 中的 数据域 概念:\nhttps://aisuda.bce.baidu.com/amis/zh-CN/docs/concepts/datascope-and-datachain","routePath":"/docs/guide/examples/model-relation","lang":"","toc":[{"text":"假设你定义了这么一个关联","id":"假设你定义了这么一个关联","depth":3,"charIndex":3},{"text":"现在你需要在列表中或者详情中回显","id":"现在你需要在列表中或者详情中回显","depth":3,"charIndex":51},{"text":"现在你需要在列表中或者详情中回显","id":"现在你需要在列表中或者详情中回显-1","depth":3,"charIndex":151},{"text":"为什么可以这么玩?","id":"为什么可以这么玩","depth":3,"charIndex":173}],"domain":"","frontmatter":{},"version":""},{"id":39,"title":"在顶部栏添加内容","content":"#\n\n> ❕v2.5.5 后支持\n\n> 你可以在 bootstrap.php 文件中使用以下方法追加自己的 amis 元素\n\n\n可用方法#\n\n\nprependNav#\n\n在前面添加 amis 元素\n\n\n\n\nappendNav#\n\n在后面添加 amis 元素\n\n\n\n\n示例#\n\n","routePath":"/docs/guide/examples/top-bar","lang":"","toc":[{"text":"可用方法","id":"可用方法","depth":2,"charIndex":63},{"text":"prependNav","id":"prependnav","depth":3,"charIndex":71},{"text":"appendNav","id":"appendnav","depth":3,"charIndex":102},{"text":"示例","id":"示例","depth":2,"charIndex":132}],"domain":"","frontmatter":{},"version":""},{"id":40,"title":"Iconify 图标","content":"#\n\n\nSvgIcon#\n\n用于显示 iconify 图标\n\n属性名         说明\nclassName   Dom 的类名\nicon        图标名称查找图标: https://icones.js.org\n\n\n示例#\n\n","routePath":"/docs/guide/extension-component/iconify","lang":"","toc":[{"text":"SvgIcon","id":"svgicon","depth":3,"charIndex":3},{"text":"示例","id":"示例","depth":3,"charIndex":111}],"domain":"","frontmatter":{},"version":""},{"id":41,"title":"WangEditor 富文本编辑器","content":"#\n\n\nWangEditor#\n\n可能会更好用的富文本编辑器~\n\n属性名                    说明\nclassName              Dom 的类名\nname                   字段名\nlabel                  字段标签\nplaceholder            占位符\nrequired               是否必填\nrequiredOn             是否必填的条件\nvalue                  默认值\ndescription            描述\nremark                 备注\nlabelAlign             表单项标签对齐方式，默认右对齐，仅在 mode为horizontal 时生效 \"right\"\nlabelRemark            表单项标签描述\ndisabled               是否禁用\ndisabledOn             当前表单项是否禁用的条件\nvisible                是否显示\nvisibleOn              当前表单项是否显示的条件\nclearValueOnHidden     当前表单项隐藏时是否清除值\nvalidations            校验规则\nvalidationErrors       校验错误信息\nvalidateApi            校验接口\nautoFill               自动填充\nstatic                 是否静态展示\nautoFocus              自动获取焦点\nmaxLength              最大长度\ntoolbarKeys            工具栏按钮\ninsertKeys             插入按钮\nexcludeKeys            排除按钮\nuploadImageServer      上传图片的服务器地址\nuploadImageMaxSize     上传图片的最大大小 单位: K 默认 2M\nuploadImageMaxNumber   上传图片的最大数量 默认 100\nuploadVideoServer      上传视频的服务器地址\nuploadVideoMaxSize     上传视频的最大大小 单位: K 默认 10M\nuploadVideoMaxNumber   上传视频的最大数量 默认 5\nheight                 编辑器高度 px\n\n\n示例#\n\n","routePath":"/docs/guide/extension-component/wangeditor","lang":"","toc":[{"text":"WangEditor","id":"wangeditor","depth":3,"charIndex":3},{"text":"示例","id":"示例","depth":3,"charIndex":1133}],"domain":"","frontmatter":{},"version":""},{"id":42,"title":"Watermark 水印","content":"#\n\n\nWatermark#\n\nantd 水印组件\n\n属性名         说明\nclassName   Dom 的类名\nwidth       水印的宽度，content 的默认值为自身的宽度\nheight      水印的宽度，content 的默认值为自身的高度\nrotate      水印绘制时，旋转的角度，单位 °\nzIndex      追加的水印元素的 z-index\nimage       图片源，建议导出 2 倍或 3 倍图，优先级高 (支持 base64 格式)\ncontent     水印文字内容\nfont        文字样式 具体配置参考\n            (https://ant-design.antgroup.com/components/watermark-cn#fon\n            t)\ngap         水印之间的间距\noffset      水印距离容器左上角的偏移量，默认为 gap/2\n\n\n示例#\n\n","routePath":"/docs/guide/extension-component/watermark","lang":"","toc":[{"text":"Watermark","id":"watermark","depth":3,"charIndex":3},{"text":"示例","id":"示例","depth":3,"charIndex":433}],"domain":"","frontmatter":{},"version":""},{"id":43,"title":"扩展配置指南","content":"#\n\n\nComposer 配置#\n\n\n基本配置#\n\n扩展的 composer.json 文件是扩展的核心配置文件：\n\n\n\n\n重要字段说明#\n\n字段                        说明                                         必需\nname                      扩展包名，格式：vendor/package-name                ✓\nextra.owl-admin           服务提供者类名                                    ✓\nextra.laravel.providers   Laravel 包发现（Composer 安装时用于自动注册 Provider）   建议\nextra.alias               扩展显示名称                                     ✓\ndescription               扩展描述                                       ✓\nversion                   版本号                                        ✓\nauthors                   作者信息                                       ✓\nhomepage                  扩展主页                                       -\nkeywords                  关键词                                        -\n\n\n系统配置#\n\n\n扩展目录配置#\n\n在 config/admin.php 中配置扩展安装目录：\n\n\n\n说明：静态资源发布目录为固定路径 public/extensions/{package-name}（见\nSlowlyo\\OwlAdmin\\Extend\\ServiceProvider::getPublishPath()），不支持通过配置项自定义。\n\n\n权限配置#\n\n扩展可以配置无需权限验证的路由：\n\n\n\n\n中间件配置#\n\n注册扩展专用中间件：\n\n\n\n\n扩展设置#\n\n\n设置表单定义#\n\n扩展可以提供配置表单供用户设置：\n\n\n\n\n配置验证#\n\n添加配置验证规则：\n\n\n\n\n配置使用#\n\n在扩展中获取和使用配置：\n\n\n\n\n环境配置#\n\n\n开发环境#\n\n在开发环境中启用调试功能：\n\n\n\n\n生产环境#\n\n生产环境优化配置：\n\n\n\n\n数据库配置#\n\n\n迁移文件#\n\n扩展的数据库迁移文件放在 database/migrations/ 目录：\n\n\n\n\n模型配置#\n\n创建对应的模型：\n\n\n\n\n缓存配置#\n\n\n配置缓存策略#\n\n\n\n\n日志配置#\n\n\n扩展专用日志#\n\n\n\n\n安全配置#\n\n\nCSRF 保护#\n\n\n\n\n输入验证#\n\n\n\n\n性能配置#\n\n\n资源优化#\n\n\n\n\n数据库优化#\n\n\n\n通过合理的配置，可以确保扩展在各种环境下都能稳定高效地运行。","routePath":"/docs/guide/extension/configuration","lang":"","toc":[{"text":"Composer 配置","id":"composer-配置","depth":2,"charIndex":3},{"text":"基本配置","id":"基本配置","depth":3,"charIndex":18},{"text":"重要字段说明","id":"重要字段说明","depth":3,"charIndex":61},{"text":"系统配置","id":"系统配置","depth":2,"charIndex":784},{"text":"扩展目录配置","id":"扩展目录配置","depth":3,"charIndex":792},{"text":"权限配置","id":"权限配置","depth":3,"charIndex":960},{"text":"中间件配置","id":"中间件配置","depth":3,"charIndex":988},{"text":"扩展设置","id":"扩展设置","depth":2,"charIndex":1011},{"text":"设置表单定义","id":"设置表单定义","depth":3,"charIndex":1019},{"text":"配置验证","id":"配置验证","depth":3,"charIndex":1049},{"text":"配置使用","id":"配置使用","depth":3,"charIndex":1070},{"text":"环境配置","id":"环境配置","depth":2,"charIndex":1094},{"text":"开发环境","id":"开发环境","depth":3,"charIndex":1102},{"text":"生产环境","id":"生产环境","depth":3,"charIndex":1127},{"text":"数据库配置","id":"数据库配置","depth":2,"charIndex":1148},{"text":"迁移文件","id":"迁移文件","depth":3,"charIndex":1157},{"text":"模型配置","id":"模型配置","depth":3,"charIndex":1206},{"text":"缓存配置","id":"缓存配置","depth":2,"charIndex":1226},{"text":"配置缓存策略","id":"配置缓存策略","depth":3,"charIndex":1234},{"text":"日志配置","id":"日志配置","depth":2,"charIndex":1246},{"text":"扩展专用日志","id":"扩展专用日志","depth":3,"charIndex":1254},{"text":"安全配置","id":"安全配置","depth":2,"charIndex":1266},{"text":"CSRF 保护","id":"csrf-保护","depth":3,"charIndex":1274},{"text":"输入验证","id":"输入验证","depth":3,"charIndex":1287},{"text":"性能配置","id":"性能配置","depth":2,"charIndex":1297},{"text":"资源优化","id":"资源优化","depth":3,"charIndex":1305},{"text":"数据库优化","id":"数据库优化","depth":3,"charIndex":1315}],"domain":"","frontmatter":{},"version":""},{"id":44,"title":"扩展开发快速入门","content":"#\n\n> 详细的开发指南请参考 扩展开发指南\n\n\n快速创建扩展#\n\n\n使用管理界面创建#\n\n 1. 进入 开发工具 > 扩展管理\n 2. 点击 创建扩展 按钮\n 3. 填写扩展信息：\n    * 包名：vendor/package-name（如：slowlyo/banner）\n    * 命名空间：Vendor\\PackageName（如：Slowlyo\\Banner）\n 4. 点击确认，系统自动生成扩展骨架\n\n\n目录结构#\n\n\n\n\n核心文件说明#\n\n\n服务提供者#\n\n扩展的核心类，继承自 Slowlyo\\OwlAdmin\\Extend\\ServiceProvider：\n\n\n\n\n控制器#\n\n\n\n\n路由定义#\n\n在 src/Http/routes.php 中：\n\n\n\n\n常用功能#\n\n\n菜单管理#\n\n\n\n\n配置管理#\n\n\n\n\n静态资源#\n\n\n\n\n语言包#\n\n\n\n\n开发流程#\n\n 1. 创建扩展骨架\n 2. 开发功能代码\n 3. 配置路由和菜单\n 4. 测试功能\n 5. 完善文档\n 6. 打包发布\n\n\n调试技巧#\n\n * 使用 \\Log::info() 记录调试信息\n * 在开发环境启用详细错误信息\n * 查看系统日志排查问题\n\n\n发布扩展#\n\n\n本地打包#\n\n\n\n\n发布到 Packagist#\n\n参考 Packagist 文档 将扩展发布到 Composer 仓库。\n\n--------------------------------------------------------------------------------\n\n更多详细信息请查看 完整开发指南。","routePath":"/docs/guide/extension/develop","lang":"","toc":[{"text":"快速创建扩展","id":"快速创建扩展","depth":2,"charIndex":24},{"text":"使用管理界面创建","id":"使用管理界面创建","depth":3,"charIndex":34},{"text":"目录结构","id":"目录结构","depth":3,"charIndex":208},{"text":"核心文件说明","id":"核心文件说明","depth":2,"charIndex":218},{"text":"服务提供者","id":"服务提供者","depth":3,"charIndex":228},{"text":"控制器","id":"控制器","depth":3,"charIndex":292},{"text":"路由定义","id":"路由定义","depth":3,"charIndex":301},{"text":"常用功能","id":"常用功能","depth":2,"charIndex":337},{"text":"菜单管理","id":"菜单管理","depth":3,"charIndex":345},{"text":"配置管理","id":"配置管理","depth":3,"charIndex":355},{"text":"静态资源","id":"静态资源","depth":3,"charIndex":365},{"text":"语言包","id":"语言包","depth":3,"charIndex":375},{"text":"开发流程","id":"开发流程","depth":2,"charIndex":384},{"text":"调试技巧","id":"调试技巧","depth":2,"charIndex":454},{"text":"发布扩展","id":"发布扩展","depth":2,"charIndex":520},{"text":"本地打包","id":"本地打包","depth":3,"charIndex":528},{"text":"发布到 Packagist","id":"发布到-packagist","depth":3,"charIndex":538}],"domain":"","frontmatter":{},"version":""},{"id":45,"title":"扩展开发指南","content":"#\n\n\n快速开始#\n\n\n创建扩展#\n\n使用管理界面创建扩展骨架：\n\n 1. 进入 开发工具 > 扩展管理\n 2. 点击 创建扩展 按钮\n 3. 填写扩展信息：\n    * 扩展名称：vendor/package-name（如：slowlyo/notice）\n    * 命名空间：Vendor\\PackageName（如：Slowlyo\\Notice）\n\n系统会自动生成完整的扩展目录结构。\n\n\n目录结构#\n\n\n\n\n核心组件#\n\n\n服务提供者#\n\n扩展的核心类，继承自 Slowlyo\\OwlAdmin\\Extend\\ServiceProvider：\n\n\n\n\n控制器#\n\n扩展控制器继承自 Slowlyo\\OwlAdmin\\Controllers\\AdminController：\n\n\n\n\n路由定义#\n\n在 src/Http/routes.php 中定义路由：\n\n\n\n\n高级功能#\n\n\n中间件注册#\n\n在服务提供者中注册中间件：\n\n\n\n\n权限路由配置#\n\n配置无需权限验证的路由：\n\n\n\n\n菜单管理#\n\n扩展支持自动菜单管理，使用 CanImportMenu trait：\n\n\n\n\n配置管理#\n\n扩展配置会自动保存到系统设置中：\n\n\n\n\n数据库迁移#\n\n创建迁移文件：\n\n\n\n将生成的迁移文件移动到扩展的 database/migrations/ 目录。\n\n扩展会自动执行迁移：\n\n * 安装时：运行 up() 方法\n * 卸载时：运行 down() 方法\n\n\n静态资源#\n\n将静态资源放置在 public/extensions/vendor/package-name/ 目录下：\n\n\n\n\n语言包#\n\n在 lang/ 目录下创建语言文件：\n\n\n\n\n生命周期钩子#\n\n\n安装钩子#\n\n\n\n\n卸载钩子#\n\n\n\n\n启用/禁用钩子#\n\n\n\n\n最佳实践#\n\n\n1. 命名规范#\n\n * 扩展名称：使用小写字母和连字符，如 vendor/package-name\n * 命名空间：使用 PascalCase，如 Vendor\\PackageName\n * 类名：遵循 PSR-4 标准\n\n\n2. 版本管理#\n\n在 composer.json 中正确设置版本号：\n\n\n\n\n3. 依赖管理#\n\n合理声明依赖关系：\n\n\n\n\n4. 错误处理#\n\n使用系统提供的错误处理机制：\n\n\n\n\n5. 安全考虑#\n\n * 验证用户输入\n * 使用 CSRF 保护\n * 遵循权限控制规范\n * 避免 SQL 注入\n\n\n发布扩展#\n\n\n1. 完善文档#\n\n确保 README.md 包含：\n\n * 扩展功能介绍\n * 安装说明\n * 使用方法\n * 配置选项\n * 更新日志\n\n\n2. 测试验证#\n\n * 安装测试\n * 功能测试\n * 兼容性测试\n * 卸载测试\n\n\n3. 打包发布#\n\n\n\n\n4. 版本发布#\n\n * 更新版本号\n * 创建 Git 标签\n * 发布到 Packagist（可选）\n * 提交到扩展市场\n\n\n调试技巧#\n\n\n1. 日志记录#\n\n\n\n\n2. 开发模式#\n\n在开发环境中启用调试：\n\n\n\n\n3. 错误追踪#\n\n使用系统提供的错误追踪功能查看详细错误信息。\n\n\n示例扩展#\n\n参考官方示例扩展了解最佳实践：\n\n * 通知扩展\n * 文件管理扩展\n\n通过以上指南，您可以快速开发出功能完善的 Owl Admin 扩展。","routePath":"/docs/guide/extension/development","lang":"","toc":[{"text":"快速开始","id":"快速开始","depth":2,"charIndex":3},{"text":"创建扩展","id":"创建扩展","depth":3,"charIndex":11},{"text":"目录结构","id":"目录结构","depth":3,"charIndex":197},{"text":"核心组件","id":"核心组件","depth":2,"charIndex":207},{"text":"服务提供者","id":"服务提供者","depth":3,"charIndex":215},{"text":"控制器","id":"控制器","depth":3,"charIndex":279},{"text":"路由定义","id":"路由定义","depth":3,"charIndex":344},{"text":"高级功能","id":"高级功能","depth":2,"charIndex":384},{"text":"中间件注册","id":"中间件注册","depth":3,"charIndex":392},{"text":"权限路由配置","id":"权限路由配置","depth":3,"charIndex":418},{"text":"菜单管理","id":"菜单管理","depth":3,"charIndex":444},{"text":"配置管理","id":"配置管理","depth":3,"charIndex":490},{"text":"数据库迁移","id":"数据库迁移","depth":3,"charIndex":518},{"text":"静态资源","id":"静态资源","depth":3,"charIndex":630},{"text":"语言包","id":"语言包","depth":3,"charIndex":694},{"text":"生命周期钩子","id":"生命周期钩子","depth":2,"charIndex":723},{"text":"安装钩子","id":"安装钩子","depth":3,"charIndex":733},{"text":"卸载钩子","id":"卸载钩子","depth":3,"charIndex":743},{"text":"启用/禁用钩子","id":"启用禁用钩子","depth":3,"charIndex":753},{"text":"最佳实践","id":"最佳实践","depth":2,"charIndex":766},{"text":"1. 命名规范","id":"1-命名规范","depth":3,"charIndex":774},{"text":"2. 版本管理","id":"2-版本管理","depth":3,"charIndex":888},{"text":"3. 依赖管理","id":"3-依赖管理","depth":3,"charIndex":928},{"text":"4. 错误处理","id":"4-错误处理","depth":3,"charIndex":952},{"text":"5. 安全考虑","id":"5-安全考虑","depth":3,"charIndex":981},{"text":"发布扩展","id":"发布扩展","depth":2,"charIndex":1042},{"text":"1. 完善文档","id":"1-完善文档","depth":3,"charIndex":1050},{"text":"2. 测试验证","id":"2-测试验证","depth":3,"charIndex":1122},{"text":"3. 打包发布","id":"3-打包发布","depth":3,"charIndex":1167},{"text":"4. 版本发布","id":"4-版本发布","depth":3,"charIndex":1180},{"text":"调试技巧","id":"调试技巧","depth":2,"charIndex":1246},{"text":"1. 日志记录","id":"1-日志记录","depth":3,"charIndex":1254},{"text":"2. 开发模式","id":"2-开发模式","depth":3,"charIndex":1267},{"text":"3. 错误追踪","id":"3-错误追踪","depth":3,"charIndex":1293},{"text":"示例扩展","id":"示例扩展","depth":2,"charIndex":1328}],"domain":"","frontmatter":{},"version":""},{"id":46,"title":"扩展开发示例","content":"#\n\n\n简单通知扩展#\n\n这是一个完整的通知扩展示例，展示了扩展开发的基本流程。\n\n\n目录结构#\n\n\n\n\n1. Composer 配置#\n\n\n\n\n2. 服务提供者#\n\n\n\n\n3. 数据库迁移#\n\n\n\n\n4. 模型定义#\n\n\n\n\n5. 控制器实现#\n\n\n\n\n6. 路由定义#\n\n\n\n\n7. 语言包#\n\nzh_CN/notice.php\n\n\n\n\n8. 前端资源#\n\ncss/notice.css\n\n\n\njs/notice.js\n\n\n\n\n使用示例#\n\n\n安装扩展#\n\n 1. 将扩展代码放置到 extensions/slowlyo/notice/ 目录\n 2. 在扩展管理中启用扩展\n 3. 扩展会自动运行数据库迁移并导入菜单\n\n\n发送通知#\n\n\n\n\n获取通知#\n\n\n\n这个示例展示了一个完整的扩展开发流程，包括数据库设计、业务逻辑、前端交互等各个方面。您可以参考这个示例来开发自己的扩展。","routePath":"/docs/guide/extension/examples","lang":"","toc":[{"text":"简单通知扩展","id":"简单通知扩展","depth":2,"charIndex":3},{"text":"目录结构","id":"目录结构","depth":3,"charIndex":42},{"text":"1. Composer 配置","id":"1-composer-配置","depth":3,"charIndex":52},{"text":"2. 服务提供者","id":"2-服务提供者","depth":3,"charIndex":72},{"text":"3. 数据库迁移","id":"3-数据库迁移","depth":3,"charIndex":86},{"text":"4. 模型定义","id":"4-模型定义","depth":3,"charIndex":100},{"text":"5. 控制器实现","id":"5-控制器实现","depth":3,"charIndex":113},{"text":"6. 路由定义","id":"6-路由定义","depth":3,"charIndex":127},{"text":"7. 语言包","id":"7-语言包","depth":3,"charIndex":140},{"text":"8. 前端资源","id":"8-前端资源","depth":3,"charIndex":170},{"text":"使用示例","id":"使用示例","depth":2,"charIndex":215},{"text":"安装扩展","id":"安装扩展","depth":3,"charIndex":223},{"text":"发送通知","id":"发送通知","depth":3,"charIndex":312},{"text":"获取通知","id":"获取通知","depth":3,"charIndex":322}],"domain":"","frontmatter":{},"version":""},{"id":47,"title":"扩展使用指南","content":"#\n\n\n环境准备#\n\n\n目录权限设置#\n\n在使用扩展功能之前，需要确保相关目录具有读写权限，否则可能导致扩展安装失败：\n\n 1. 项目目录/extensions - 扩展安装目录（可通过配置 admin.extension.dir 修改）\n 2. public/extensions - 扩展静态资源发布目录\n 3. storage/tmp - 临时文件目录\n 4. lang - 语言包目录\n\n\n数据库表#\n\n扩展功能依赖 admin_extensions 数据表，系统会自动创建该表。\n\n\n扩展安装#\n\nOwl Admin 支持多种扩展安装方式：\n\n\n1. 本地安装#\n\n适用于已下载的扩展包：\n\n 1. 下载扩展的 .zip 压缩包\n 2. 进入 开发工具 > 扩展管理\n 3. 点击 本地安装 按钮\n 4. 选择并上传 zip 文件\n 5. 系统自动解压并安装扩展\n\n\n2. Composer 安装#\n\n适用于发布到 Packagist 的扩展：\n\n\n\n安装后扩展会自动注册到系统中（需在扩展的 composer.json 中配置 extra.laravel.providers 指向扩展的\nServiceProvider，详见“扩展配置指南”）。\n\n\n3. 创建扩展#\n\n开发者可直接在管理界面创建新扩展：\n\n 1. 点击 创建扩展 按钮\n 2. 填写扩展名称（格式：vendor/package）\n 3. 填写命名空间（如：Vendor\\Package）\n 4. 系统自动生成扩展骨架代码\n\n\n扩展管理#\n\n\n启用/禁用扩展#\n\n安装后的扩展需要手动启用：\n\n 1. 在扩展列表中找到目标扩展\n 2. 点击 启用 按钮激活扩展功能\n 3. 可随时点击 禁用 暂停扩展功能\n\n\n扩展配置#\n\n支持配置的扩展会显示 设置 按钮：\n\n 1. 点击扩展的 设置 按钮\n 2. 在弹出的配置表单中修改参数\n 3. 保存配置后立即生效\n\n\n查看文档#\n\n每个扩展都可以查看其 README 文档：\n\n 1. 点击扩展的 查看 按钮\n 2. 在弹出窗口中阅读扩展说明\n\n\n卸载扩展#\n\n彻底移除不需要的扩展：\n\n 1. 点击扩展的 卸载 按钮\n 2. 确认卸载操作\n 3. 系统会自动：\n    * 回滚数据库迁移（ServiceProvider::runMigrations(true)）\n    * 删除已发布的静态资源（ServiceProvider::unpublishable()）\n    * 移除菜单项（ServiceProvider::flushMenu()）\n\n说明：扩展配置（Admin::setting() 存储）不会在卸载时自动清理，如需清除，请在扩展的 uninstall() 中自行处理或手动清理。\n\n\n扩展特性#\n\n\n自动发现#\n\n系统会自动扫描以下位置的扩展：\n\n * extensions/ 目录下的所有子目录\n * 通过 Composer 安装的包（包含 extra.owl-admin 并通过 extra.laravel.providers 自动注册扩展的\n   ServiceProvider）\n\n\n生命周期管理#\n\n扩展支持完整的生命周期管理：\n\n * 安装：运行数据库迁移，发布静态资源（ServiceProvider::install()）\n * 启用：刷新菜单（ServiceProvider::doEnable(true)）；路由与中间件由扩展的 ServiceProvider\n   在系统启动时统一注册，启用后刷新页面即可生效\n * 禁用：清理菜单（ServiceProvider::doEnable(false)），路由与中间件随扩展禁用而不执行初始化\n * 卸载：完全清理（移除菜单、取消发布静态资源），回滚迁移\n\n\n资源管理#\n\n扩展可以包含多种资源：\n\n * 静态资源：CSS、JS、图片等文件\n * 语言包：多语言支持\n * 数据库迁移：表结构变更\n * 菜单项：自动导入到系统菜单\n\n\n常见问题#\n\n\n安装失败#\n\n 1. 检查目录权限是否正确\n 2. 确认扩展包格式是否符合规范\n 3. 查看错误日志获取详细信息\n\n\n扩展不显示#\n\n 1. 确认扩展已正确安装\n 2. 检查 composer.json 中的 extra.owl-admin 配置\n 3. 验证扩展类是否继承自 ServiceProvider\n\n\n功能异常#\n\n 1. 确认扩展已启用\n 2. 检查扩展配置是否正确\n 3. 查看扩展文档了解使用方法\n\n\n获取更多扩展#\n\n访问 Owl Admin 扩展市场 获取更多官方和社区扩展。","routePath":"/docs/guide/extension/use","lang":"","toc":[{"text":"环境准备","id":"环境准备","depth":2,"charIndex":3},{"text":"目录权限设置","id":"目录权限设置","depth":3,"charIndex":11},{"text":"数据库表","id":"数据库表","depth":3,"charIndex":198},{"text":"扩展安装","id":"扩展安装","depth":2,"charIndex":246},{"text":"1. 本地安装","id":"1-本地安装","depth":3,"charIndex":277},{"text":"2. Composer 安装","id":"2-composer-安装","depth":3,"charIndex":388},{"text":"3. 创建扩展","id":"3-创建扩展","depth":3,"charIndex":530},{"text":"扩展管理","id":"扩展管理","depth":2,"charIndex":652},{"text":"启用/禁用扩展","id":"启用禁用扩展","depth":3,"charIndex":660},{"text":"扩展配置","id":"扩展配置","depth":3,"charIndex":743},{"text":"查看文档","id":"查看文档","depth":3,"charIndex":819},{"text":"卸载扩展","id":"卸载扩展","depth":3,"charIndex":884},{"text":"扩展特性","id":"扩展特性","depth":2,"charIndex":1164},{"text":"自动发现","id":"自动发现","depth":3,"charIndex":1172},{"text":"生命周期管理","id":"生命周期管理","depth":3,"charIndex":1318},{"text":"资源管理","id":"资源管理","depth":3,"charIndex":1586},{"text":"常见问题","id":"常见问题","depth":2,"charIndex":1674},{"text":"安装失败","id":"安装失败","depth":3,"charIndex":1682},{"text":"扩展不显示","id":"扩展不显示","depth":3,"charIndex":1741},{"text":"功能异常","id":"功能异常","depth":3,"charIndex":1839},{"text":"获取更多扩展","id":"获取更多扩展","depth":2,"charIndex":1892}],"domain":"","frontmatter":{},"version":""},{"id":48,"title":"动态加载资源","content":"#\n\n注意\n\n仅支持全局加载, 以下方法只能在 app/admin/bootstrap.php 中使用 前端会在获取配置信息时, 将这些资源加载到页面中\n\nAdmin 中提供了以下方法来动态加载资源：\n\n\njs()#\n\n加载 js 资源，支持单个和多个。\n\n\n\n\ncss()#\n\n加载 css 资源，支持单个和多个。\n\n\n\n\nstyles()#\n\n加载 style，支持单个和多个。\n\n\n\n\nscript()#\n\n加载 script，支持单个和多个。\n\n","routePath":"/docs/guide/frontend/dynamic","lang":"","toc":[{"text":"js()","id":"js","depth":2,"charIndex":102},{"text":"css()","id":"css","depth":2,"charIndex":131},{"text":"styles()","id":"styles","depth":2,"charIndex":162},{"text":"script()","id":"script","depth":2,"charIndex":195}],"domain":"","frontmatter":{},"version":""},{"id":49,"title":"全局函数","content":"#\n\n> 前端提供了一些前端方法, 可在后端 amis 中 通过 window 调用\n\n\n退出登录#\n\n\n\n\n登录成功后的回调#\n\n\n\n\n刷新当前 amis 页面#\n\n仅刷新 content 部分, 不会刷新 layout 部分, 仅在 amis 页面中生效\n\n\n\n\n刷新前端路由#\n\n\n\n\n根据 path 关闭tab#\n\n","routePath":"/docs/guide/frontend/global-function","lang":"","toc":[{"text":"退出登录","id":"退出登录","depth":2,"charIndex":44},{"text":"登录成功后的回调","id":"登录成功后的回调","depth":2,"charIndex":54},{"text":"刷新当前 amis 页面","id":"刷新当前-amis-页面","depth":2,"charIndex":68},{"text":"刷新前端路由","id":"刷新前端路由","depth":2,"charIndex":133},{"text":"根据 path 关闭tab","id":"根据-path-关闭tab","depth":2,"charIndex":145}],"domain":"","frontmatter":{},"version":""},{"id":50,"title":"开始","content":"#\n\nWARNING\n\n自行更改前端需要你有对前端有一定了解~\n\n自行更改前端需要你有对前端有一定了解~\n\n自行更改前端需要你有对前端有一定了解~\n\nTIP\n\n如果你改出了问题, 可以重新发布资源并覆盖\n\n\n\n\n发布前端文件#\n\n\n\n执行后会将前端需要的文件发布至 resources/admin-views 下 这是一个标准的前端项目结构\n\n\n记得先安装依赖#\n\n\n\n\n部分命令#\n\n运行#\n\n\n\nTips\n\n如果遇到跨域问题, 可在 .env 文件中配置你自己的域名\n\n打包#\n\n\n\nTips\n\n打包后将打包文件 (默认在 dist 目录下), 复制/移动到 public/admin 下即可","routePath":"/docs/guide/frontend/start","lang":"","toc":[{"text":"发布前端文件","id":"发布前端文件","depth":2,"charIndex":105},{"text":"记得先安装依赖","id":"记得先安装依赖","depth":3,"charIndex":172},{"text":"部分命令","id":"部分命令","depth":2,"charIndex":185},{"text":"运行","id":"运行","depth":4,"charIndex":192},{"text":"打包","id":"打包","depth":4,"charIndex":236}],"domain":"","frontmatter":{},"version":""},{"id":51,"title":"介绍","content":"#\n\n\n项目介绍#\n\n基于 Laravel 、 amis 开发的后台框架, 快速且灵活~\n\n * 基于 amis 以 json 的方式在后端构建页面，减少前端开发工作量，提升开发效率。\n\n * 在 amis 150多个组件都不满足的情况下, 可自行开发前端。\n\n * 框架为前后端分离 (不用再因为框架而束手束脚~)。\n\n\n内置功能#\n\n * 基础后台功能\n   \n   * 后台用户管理\n   * 角色管理\n   * 权限管理\n   * 菜单管理\n\n * 代码生成器\n   \n   * 保存生成记录\n   * 导入/导出生成记录\n   * 可使用命令清除生成的内容\n   * 无需更改代码即可生成完整功能\n\n * amis 全组件封装 150+ , 无需前端开发即可完成复杂页面\n\n * 多模块支持\n\n * 图形化扩展管理\n\n\n截图#\n\n\n\n\n安装#\n\n注意\n\nOwlAdmin 是 laravel 的扩展包, 安装前请确保你会使用 laravel\n\n1. 创建 laravel 项目#\n\n\n\n2. 配置数据库信息#\n\n\n\n注意\n\n如果你使用的是 laravel 11 , 还需要执行: php artisan install:api\n\n3. 获取 Owl Admin#\n\n\n\n4. 安装#\n\n\n\n5. 运行项目#\n\n启动服务, 访问 /admin 路由即可 初始账号密码都是 admin\n\n\n小白入门视频#\n\n\n\n\n支持项目#\n\n你可以通过以下方式支持项目:\n\n * 报告 Bug\n * 提交 PR\n   * 参见 贡献文档\n * 点点 Star\n   * 如果觉得项目不错，或者已经在使用了，希望你可以去 Github 或者 Gitee 帮我们点个 ⭐ Star，这将是对我们极大的鼓励与支持。\n\n","routePath":"/docs/guide/","lang":"","toc":[{"text":"项目介绍","id":"项目介绍","depth":3,"charIndex":3},{"text":"内置功能","id":"内置功能","depth":3,"charIndex":161},{"text":"截图","id":"截图","depth":3,"charIndex":364},{"text":"安装","id":"安装","depth":3,"charIndex":372},{"text":"小白入门视频","id":"小白入门视频","depth":3,"charIndex":597},{"text":"支持项目","id":"支持项目","depth":3,"charIndex":609}],"domain":"","frontmatter":{},"version":""},{"id":52,"title":"模块使用指南","content":"#\n\n\n创建模块#\n\n使用 Artisan 命令快速创建模块，该命令会自动生成完整的模块结构、数据库表和基础数据。\n\n\n\n命令特性：\n\n * 支持同时创建多个模块：php artisan admin-module:init Master Store\n * 模块名建议使用大驼峰命名（如：Master、UserCenter）\n * 自动创建独立的数据库表（以模块名为前缀）\n * 生成完整的 MVC 结构和配置文件\n\n示例：\n\n\n\n\n配置模块#\n\n\n1. 启用模块#\n\n在 config/admin.php 中配置模块启用状态：\n\n\n\n\n2. 配置自动加载#\n\n在项目根目录的 composer.json 中添加模块命名空间：\n\n\n\n更新自动加载文件：\n\n\n\n\n3. 访问模块#\n\n模块创建完成后，可通过对应的路由前缀访问：\n\n * Master 模块：/master-api\n * Store 模块：/store-api\n\n\n模块结构#\n\n创建模块后，系统会在项目根目录生成标准的模块目录结构：\n\n\n\n\n核心文件说明#\n\n文件                    功能描述\nbootstrap.php         模块引导文件，用于注册菜单、导航等初始化操作\nconfig.php            模块配置文件，包含路由、认证、上传等配置\nroutes.php            模块路由定义文件\nServiceProvider.php   服务提供者，处理模块的高级注册逻辑\n\n\n数据库管理#\n\n\n自动创建表结构#\n\n模块初始化时会自动创建以下数据表：\n\n * {模块名}_admin_users - 管理员表\n * {模块名}_admin_roles - 角色表\n * {模块名}_admin_menus - 菜单表\n * {模块名}_admin_permissions - 权限表\n * {模块名}_admin_role_users - 角色用户关联表\n * {模块名}_admin_role_permissions - 角色权限关联表\n * {模块名}_admin_role_menus - 角色菜单关联表\n\n\n独立初始化数据库#\n\n如需单独初始化模块数据库（不创建文件结构）：\n\n\n\n\n模块特性#\n\n\n独立性#\n\n * 数据隔离：每个模块拥有独立的数据表和用户体系\n * 配置隔离：独立的认证守卫和配置文件\n * 路由隔离：通过不同的路由前缀区分模块\n\n\n共享资源#\n\n * 前端资源：所有模块共享同一套前端界面和组件\n * 开发工具：代码生成器和扩展功能在所有模块中通用\n * 核心功能：基础的 CRUD 操作和权限管理逻辑复用\n\n\n模块管理#\n\n\n启用/禁用模块#\n\n通过配置文件控制模块状态：\n\n\n\n\n移除模块#\n\n注意：移除操作不可逆，请谨慎操作\n\n 1. 删除模块文件：\n    \n    \n\n 2. 删除数据库表：\n    \n    \n\n 3. 更新配置文件：\n    \n    ","routePath":"/docs/guide/modules/use","lang":"","toc":[{"text":"创建模块","id":"创建模块","depth":2,"charIndex":3},{"text":"配置模块","id":"配置模块","depth":2,"charIndex":215},{"text":"1. 启用模块","id":"1-启用模块","depth":3,"charIndex":223},{"text":"2. 配置自动加载","id":"2-配置自动加载","depth":3,"charIndex":267},{"text":"3. 访问模块","id":"3-访问模块","depth":3,"charIndex":329},{"text":"模块结构","id":"模块结构","depth":2,"charIndex":412},{"text":"核心文件说明","id":"核心文件说明","depth":3,"charIndex":451},{"text":"数据库管理","id":"数据库管理","depth":2,"charIndex":648},{"text":"自动创建表结构","id":"自动创建表结构","depth":3,"charIndex":657},{"text":"独立初始化数据库","id":"独立初始化数据库","depth":3,"charIndex":917},{"text":"模块特性","id":"模块特性","depth":2,"charIndex":955},{"text":"独立性","id":"独立性","depth":3,"charIndex":963},{"text":"共享资源","id":"共享资源","depth":3,"charIndex":1040},{"text":"模块管理","id":"模块管理","depth":2,"charIndex":1130},{"text":"启用/禁用模块","id":"启用禁用模块","depth":3,"charIndex":1138},{"text":"移除模块","id":"移除模块","depth":3,"charIndex":1166}],"domain":"","frontmatter":{},"version":""},{"id":53,"title":"Hello World!","content":"#\n\n\nStart#\n\nWrite something to build your own docs! 🎁","routePath":"/docs/hello","lang":"","toc":[{"text":"Start","id":"start","depth":2,"charIndex":3}],"domain":"","frontmatter":{},"version":""}]