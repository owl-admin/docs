"use strict";(self.webpackChunkrspress_doc_template=self.webpackChunkrspress_doc_template||[]).push([["6504"],{9517:function(e,n,r){r.r(n),r.d(n,{default:function(){return a}});var s=r(2676),d=r(453);function i(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",code:"code",pre:"pre",strong:"strong",ul:"ul",li:"li"},(0,d.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"使用",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#使用",children:"#"}),"使用"]}),"\n",(0,s.jsxs)(n.h2,{id:"创建模块",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#创建模块",children:"#"}),"创建模块"]}),"\n",(0,s.jsxs)(n.p,{children:["这个命令会创建 ",(0,s.jsx)(n.code,{children:"owl-admin"})," 所需的文件和目录, 以及相关的数据库及基础数据\n建议首字母大写, 使用大驼峰格式"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",meta:"",children:"php artisan admin-module:init <module-name>\n# eg: php artisan admin-module:init Master\n# 支持多个模块同时创建\n# eg: php artisan admin-module:init Master Store\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"更改配置文件",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#更改配置文件",children:"#"}),"更改配置文件"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",meta:"",children:"// file: config/admin.php\n\n// 配置 modules\n// 建议首字母大写, 大驼峰格式\n// ...\n'modules' => [\n    'Master' => true // 在这里配置模块名, 以及启用状态\n]\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"配置composerjson",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#配置composerjson",children:"#"}),"配置",(0,s.jsx)(n.code,{children:"composer.json"})]}),"\n",(0,s.jsx)(n.p,{children:"配置模块目录(admin-modules)自动加载"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",meta:"",children:'"autoload": {\n    "psr-4": {\n        "App\\\\": "app/",\n        "AdminModules\\\\": "admin-modules/"\n    }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"重新生成自动加载文件"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",meta:"",children:"composer dump-autoload\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:["现在, 你可以通过 ",(0,s.jsx)(n.code,{children:"/master"})," 来访问你的新模块了~"]})}),"\n",(0,s.jsxs)(n.h2,{id:"目录结构",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#目录结构",children:"#"}),"目录结构"]}),"\n",(0,s.jsx)(n.p,{children:"创建模块后, 会在你的应用根目录生成以下目录结构:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{meta:"",children:"admin-modules                          # 模块根目录\n└── Master\n    ├── Controllers                    # 控制器目录\n    │   ├── AuthController.php\n    │   ├── HomeController.php\n    │   ├── MasterController.php\n    │   └── SettingController.php\n    ├── Models                         # 模型目录\n    │   ├── AdminCodeGenerator.php\n    │   ├── AdminMenu.php\n    │   ├── AdminPermission.php\n    │   ├── AdminRole.php\n    │   └── AdminUser.php\n    ├── Services                       # Service 目录\n    ├── bootstrap.php                  # 框架会自动加载这个文件, 可以在里面动态添加菜单或导航栏按钮\n    ├── config.php                     # 模块的配置文件\n    ├── MasterServiceProvider.php      # 模块的服务提供者, 可以在里面处理一些其他的高级操作\n    └── routes.php                     # 模块的路由文件\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"数据库",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#数据库",children:"#"}),"数据库"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"初始化模块后, 会自动创建模块所需的数据库及基础数据"}),"\n",(0,s.jsxs)(n.li,{children:["新建的数据表都会以 ",(0,s.jsx)(n.code,{children:"模块名_"})," 为前缀"]}),"\n"]}),"\n",(0,s.jsxs)(n.h2,{id:"注意事项",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#注意事项",children:"#"}),"注意事项"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"代码生成器 / 扩展"})," 这两个功能在所有模块中共通"]}),"\n",(0,s.jsxs)(n.li,{children:["所有模块与主应用都同用一套前端资源, 模块之间依靠 ",(0,s.jsx)(n.strong,{children:"接口前缀"})," 区分"]}),"\n"]}),"\n",(0,s.jsxs)(n.h2,{id:"移除模块",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#移除模块",children:"#"}),"移除模块"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["手动删除模块目录  ",(0,s.jsx)(n.code,{children:"Modules/你的模块名"})]}),"\n",(0,s.jsxs)(n.li,{children:["手动删除模块的数据库表, 它们都以 ",(0,s.jsx)(n.code,{children:"模块名_"})," 为前缀"]}),"\n"]})]})}function h(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,d.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(i,e)})):i(e)}let a=h;h.__RSPRESS_PAGE_META={},h.__RSPRESS_PAGE_META["guide%2Fmodules%2Fuse.md"]={toc:[{id:"创建模块",text:"创建模块",depth:2},{id:"更改配置文件",text:"更改配置文件",depth:2},{id:"配置composerjson",text:"配置`composer.json`",depth:2},{id:"目录结构",text:"目录结构",depth:2},{id:"数据库",text:"数据库",depth:2},{id:"注意事项",text:"注意事项",depth:2},{id:"移除模块",text:"移除模块",depth:2}],title:"使用",frontmatter:{}}}}]);