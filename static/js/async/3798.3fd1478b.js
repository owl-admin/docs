"use strict";(self.webpackChunkrspress_doc_template=self.webpackChunkrspress_doc_template||[]).push([["3798"],{8994:function(e,s,n){n.r(s),n.d(s,{default:function(){return h}});var r=n(2676),i=n(453);function d(e){let s=Object.assign({h1:"h1",a:"a",p:"p",code:"code",div:"div",h2:"h2",ul:"ul",li:"li",strong:"strong",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",h3:"h3",ol:"ol",pre:"pre"},(0,i.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.h1,{id:"动态关联",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#动态关联",children:"#"}),"动态关联"]}),"\n",(0,r.jsxs)(s.p,{children:["动态关联功能允许您在不修改模型文件的情况下，通过可视化界面为 Eloquent 模型动态添加关联关系。该功能基于 Laravel 的 ",(0,r.jsx)(s.code,{children:"resolveRelationUsing"})," 方法实现，支持所有标准的 Eloquent 关联类型。"]}),"\n",(0,r.jsxs)(s.div,{className:"rspress-directive warning",children:[(0,r.jsx)(s.div,{className:"rspress-directive-title",children:"前置要求"}),(0,r.jsx)(s.div,{className:"rspress-directive-content",children:(0,r.jsxs)(s.p,{children:["\n在使用此功能前，请确保您已经熟练掌握了 ",(0,r.jsx)(s.a,{href:"https://laravel.com/docs/11.x/eloquent-relationships",rel:"noopener noreferrer",target:"_blank",children:"Laravel Eloquent ORM 关联关系"})]})})]}),"\n",(0,r.jsxs)(s.h2,{id:"功能特性",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#功能特性",children:"#"}),"功能特性"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"可视化配置"}),"：通过友好的界面配置复杂的关联关系"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"动态注册"}),"：无需修改模型文件，关联关系在系统启动时自动注册"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"类型完整"}),"：支持所有 Laravel Eloquent 关联类型"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"参数智能"}),"：自动解析关联方法参数，提供智能提示"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"代码预览"}),"：实时预览生成的关联方法代码"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"缓存优化"}),"：关联配置自动缓存，提升系统性能"]}),"\n"]}),"\n",(0,r.jsxs)(s.h2,{id:"支持的关联类型",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#支持的关联类型",children:"#"}),"支持的关联类型"]}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"关联类型"}),(0,r.jsx)(s.th,{children:"说明"}),(0,r.jsx)(s.th,{children:"使用场景"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"一对一 (hasOne)"})}),(0,r.jsx)(s.td,{children:"一个模型拥有一个关联模型"}),(0,r.jsx)(s.td,{children:"用户与个人资料"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"一对多 (hasMany)"})}),(0,r.jsx)(s.td,{children:"一个模型拥有多个关联模型"}),(0,r.jsx)(s.td,{children:"文章与评论"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"一对多反向 (belongsTo)"})}),(0,r.jsx)(s.td,{children:"多个模型属于一个模型"}),(0,r.jsx)(s.td,{children:"评论属于文章"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"多对多 (belongsToMany)"})}),(0,r.jsx)(s.td,{children:"多个模型相互关联"}),(0,r.jsx)(s.td,{children:"用户与角色"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"远程一对一 (hasOneThrough)"})}),(0,r.jsx)(s.td,{children:"通过中间模型的一对一关联"}),(0,r.jsx)(s.td,{children:"国家通过用户获取最新文章"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"远程一对多 (hasManyThrough)"})}),(0,r.jsx)(s.td,{children:"通过中间模型的一对多关联"}),(0,r.jsx)(s.td,{children:"国家通过用户获取所有文章"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"一对一多态 (morphOne)"})}),(0,r.jsx)(s.td,{children:"一个模型与多种类型模型的一对一关联"}),(0,r.jsx)(s.td,{children:"文章或用户与单张图片"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"一对多多态 (morphMany)"})}),(0,r.jsx)(s.td,{children:"一个模型与多种类型模型的一对多关联"}),(0,r.jsx)(s.td,{children:"文章或用户与多张图片"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"多对多多态 (morphToMany)"})}),(0,r.jsx)(s.td,{children:"多个模型与多种类型模型的多对多关联"}),(0,r.jsx)(s.td,{children:"文章或视频与标签"})]})]})]}),"\n",(0,r.jsxs)(s.h2,{id:"模型管理",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#模型管理",children:"#"}),"模型管理"]}),"\n",(0,r.jsxs)(s.h3,{id:"生成模型",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#生成模型",children:"#"}),"生成模型"]}),"\n",(0,r.jsx)(s.p,{children:"系统提供便捷的模型生成功能，帮助您快速为数据表创建对应的 Eloquent 模型。"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"操作步骤："})}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:["点击 ",(0,r.jsx)(s.strong,{children:'"生成模型"'})," 按钮"]}),"\n",(0,r.jsx)(s.li,{children:"系统将展示所有数据表及其对应的模型状态"}),"\n",(0,r.jsx)(s.li,{children:"勾选需要生成模型的数据表"}),"\n",(0,r.jsxs)(s.li,{children:["点击 ",(0,r.jsx)(s.strong,{children:'"生成"'})," 按钮"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"生成规则："})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["模型文件生成在 ",(0,r.jsx)(s.code,{children:"app/Models"})," 目录下"]}),"\n",(0,r.jsx)(s.li,{children:"类名采用表名的单数形式，遵循 StudlyCase 命名规范"}),"\n",(0,r.jsxs)(s.li,{children:["自动继承 ",(0,r.jsx)(s.code,{children:"Slowlyo\\OwlAdmin\\Models\\BaseModel"})]}),"\n",(0,r.jsxs)(s.li,{children:["自动设置 ",(0,r.jsx)(s.code,{children:"$table"})," 属性指向对应数据表"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"生成的模型示例："})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-php",meta:"",children:"<?php\n\nnamespace App\\Models;\n\nuse Slowlyo\\OwlAdmin\\Models\\BaseModel as Model;\n\nclass User extends Model\n{\n    protected $table = 'users';\n}\n"})}),"\n",(0,r.jsxs)(s.div,{className:"rspress-directive tip",children:[(0,r.jsx)(s.div,{className:"rspress-directive-title",children:"提示"}),(0,r.jsx)(s.div,{className:"rspress-directive-content",children:(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"已存在模型的数据表会显示为禁用状态"}),"\n",(0,r.jsx)(s.li,{children:"系统会自动检测并防止重复生成"}),"\n",(0,r.jsx)(s.li,{children:"生成的模型可以手动扩展添加其他功能"}),"\n"]})})]}),"\n",(0,r.jsxs)(s.h2,{id:"关联关系配置",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#关联关系配置",children:"#"}),"关联关系配置"]}),"\n",(0,r.jsxs)(s.h3,{id:"新增关联关系",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#新增关联关系",children:"#"}),"新增关联关系"]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"配置步骤："})}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"选择源模型"}),"：从下拉列表中选择要添加关联的模型"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"设置关联名称"}),"：输入关联方法的名称（如：",(0,r.jsx)(s.code,{children:"comments"}),"、",(0,r.jsx)(s.code,{children:"profile"}),"）"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"选择关联类型"}),"：从支持的 9 种关联类型中选择合适的类型"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"配置关联参数"}),"：根据选择的关联类型填写相应参数"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"添加备注说明"}),"：可选，用于描述关联关系的用途"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"保存配置"}),"：系统将验证配置并保存"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"参数配置说明："})}),"\n",(0,r.jsx)(s.p,{children:"不同的关联类型需要配置不同的参数，系统会根据选择的类型动态显示对应的参数表单："}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"相关模型 (related)"}),"：目标关联模型"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"外键 (foreignKey)"}),"：外键字段名"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"本地键 (localKey)"}),"：本地主键字段名"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"中间表 (table)"}),"：多对多关联的中间表"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"中间模型 (through)"}),"：远程关联的中间模型"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"多态名称 (name)"}),"：多态关联的名称前缀"]}),"\n"]}),"\n",(0,r.jsxs)(s.h3,{id:"配置验证",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#配置验证",children:"#"}),"配置验证"]}),"\n",(0,r.jsx)(s.p,{children:"系统在保存关联配置时会进行以下验证："}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"唯一性检查"}),"：确保同一模型下的关联名称不重复"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"方法冲突检查"}),"：确保关联名称不与模型现有方法冲突"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"参数有效性"}),"：验证必填参数是否完整"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"模型存在性"}),"：验证相关模型是否存在"]}),"\n"]}),"\n",(0,r.jsxs)(s.h3,{id:"代码预览",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#代码预览",children:"#"}),"代码预览"]}),"\n",(0,r.jsx)(s.p,{children:"每个配置的关联关系都提供实时代码预览功能："}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:["点击列表中的 ",(0,r.jsx)(s.strong,{children:'"预览"'})," 按钮"]}),"\n",(0,r.jsx)(s.li,{children:"查看生成的关联方法代码"}),"\n",(0,r.jsx)(s.li,{children:"确认参数配置是否正确"}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"预览示例："})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-php",meta:"",children:"<?php\n\nclass User extends Model\n{\n    public function profile() {\n        return $this->hasOne('App\\Models\\Profile', 'user_id', 'id');\n    }\n}\n"})}),"\n",(0,r.jsxs)(s.h2,{id:"工作原理",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#工作原理",children:"#"}),"工作原理"]}),"\n",(0,r.jsxs)(s.h3,{id:"动态注册机制",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#动态注册机制",children:"#"}),"动态注册机制"]}),"\n",(0,r.jsxs)(s.p,{children:["动态关联基于 Laravel 的 ",(0,r.jsx)(s.code,{children:"resolveRelationUsing"})," 方法实现："]}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"系统启动时"}),"：",(0,r.jsx)(s.code,{children:"Relationships::boot()"})," 方法被调用"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"加载配置"}),"：从数据库读取所有关联配置（带缓存）"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"动态注册"}),"：为每个模型注册对应的关联方法"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"参数解析"}),"：通过反射自动解析并填充方法参数"]}),"\n"]}),"\n",(0,r.jsxs)(s.h3,{id:"缓存机制",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#缓存机制",children:"#"}),"缓存机制"]}),"\n",(0,r.jsx)(s.p,{children:"为了提升性能，系统采用文件缓存存储关联配置："}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"缓存键"}),"：",(0,r.jsx)(s.code,{children:"admin_relationships"})]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"缓存驱动"}),"：文件缓存"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"自动更新"}),"：保存/删除配置后系统会自动清除缓存（无需手动清理）"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"异常处理"}),"：缓存失败时降级到直接查询"]}),"\n"]}),"\n",(0,r.jsxs)(s.h3,{id:"参数构建",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#参数构建",children:"#"}),"参数构建"]}),"\n",(0,r.jsx)(s.p,{children:"系统通过反射机制智能构建关联方法参数："}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-php",meta:"",children:"public function buildArgs()\n{\n    $reflection = new \\ReflectionClass($this->model);\n    $params = $reflection->getMethod($this->method)->getParameters();\n\n    $args = [];\n    foreach ($params as $item) {\n        $value = data_get($this->args, $item->getName());\n        $args[] = [\n            'name' => $item->getName(),\n            'value' => filled($value) ? $value : $item->getDefaultValue(),\n        ];\n    }\n\n    return $args;\n}\n"})}),"\n",(0,r.jsxs)(s.h2,{id:"使用示例",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#使用示例",children:"#"}),"使用示例"]}),"\n",(0,r.jsxs)(s.h3,{id:"示例-1用户与个人资料一对一",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#示例-1用户与个人资料一对一",children:"#"}),"示例 1：用户与个人资料（一对一）"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"场景"}),"：每个用户有一个个人资料"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"配置"}),"："]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["源模型：",(0,r.jsx)(s.code,{children:"App\\Models\\User"})]}),"\n",(0,r.jsxs)(s.li,{children:["关联名称：",(0,r.jsx)(s.code,{children:"profile"})]}),"\n",(0,r.jsx)(s.li,{children:"关联类型：一对一 (hasOne)"}),"\n",(0,r.jsxs)(s.li,{children:["相关模型：",(0,r.jsx)(s.code,{children:"App\\Models\\Profile"})]}),"\n",(0,r.jsxs)(s.li,{children:["外键：",(0,r.jsx)(s.code,{children:"user_id"})]}),"\n",(0,r.jsxs)(s.li,{children:["本地键：",(0,r.jsx)(s.code,{children:"id"})]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"使用"}),"："]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-php",meta:"",children:"$user = User::find(1);\n$profile = $user->profile; // 获取用户资料\n"})}),"\n",(0,r.jsxs)(s.h3,{id:"示例-2文章与评论一对多",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#示例-2文章与评论一对多",children:"#"}),"示例 2：文章与评论（一对多）"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"场景"}),"：一篇文章有多个评论"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"配置"}),"："]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["源模型：",(0,r.jsx)(s.code,{children:"App\\Models\\Article"})]}),"\n",(0,r.jsxs)(s.li,{children:["关联名称：",(0,r.jsx)(s.code,{children:"comments"})]}),"\n",(0,r.jsx)(s.li,{children:"关联类型：一对多 (hasMany)"}),"\n",(0,r.jsxs)(s.li,{children:["相关模型：",(0,r.jsx)(s.code,{children:"App\\Models\\Comment"})]}),"\n",(0,r.jsxs)(s.li,{children:["外键：",(0,r.jsx)(s.code,{children:"article_id"})]}),"\n",(0,r.jsxs)(s.li,{children:["本地键：",(0,r.jsx)(s.code,{children:"id"})]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"使用"}),"："]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-php",meta:"",children:"$article = Article::find(1);\n$comments = $article->comments; // 获取文章评论\n"})}),"\n",(0,r.jsxs)(s.h3,{id:"示例-3用户与角色多对多",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#示例-3用户与角色多对多",children:"#"}),"示例 3：用户与角色（多对多）"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"场景"}),"：用户可以拥有多个角色，角色可以分配给多个用户"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"配置"}),"："]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["源模型：",(0,r.jsx)(s.code,{children:"App\\Models\\User"})]}),"\n",(0,r.jsxs)(s.li,{children:["关联名称：",(0,r.jsx)(s.code,{children:"roles"})]}),"\n",(0,r.jsx)(s.li,{children:"关联类型：多对多 (belongsToMany)"}),"\n",(0,r.jsxs)(s.li,{children:["相关模型：",(0,r.jsx)(s.code,{children:"App\\Models\\Role"})]}),"\n",(0,r.jsxs)(s.li,{children:["中间表：",(0,r.jsx)(s.code,{children:"user_roles"})]}),"\n",(0,r.jsxs)(s.li,{children:["外键：",(0,r.jsx)(s.code,{children:"user_id"})]}),"\n",(0,r.jsxs)(s.li,{children:["相关键：",(0,r.jsx)(s.code,{children:"role_id"})]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"使用"}),"："]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-php",meta:"",children:"$user = User::find(1);\n$roles = $user->roles; // 获取用户角色\n"})}),"\n",(0,r.jsxs)(s.h2,{id:"最佳实践",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#最佳实践",children:"#"}),"最佳实践"]}),"\n",(0,r.jsxs)(s.h3,{id:"命名规范",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#命名规范",children:"#"}),"命名规范"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"关联名称"}),"：使用小写字母和下划线，遵循 Laravel 约定"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"单数关联"}),"：",(0,r.jsx)(s.code,{children:"profile"}),"、",(0,r.jsx)(s.code,{children:"category"}),"、",(0,r.jsx)(s.code,{children:"author"})]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"复数关联"}),"：",(0,r.jsx)(s.code,{children:"comments"}),"、",(0,r.jsx)(s.code,{children:"tags"}),"、",(0,r.jsx)(s.code,{children:"users"})]}),"\n"]}),"\n",(0,r.jsxs)(s.h3,{id:"性能优化",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#性能优化",children:"#"}),"性能优化"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"预加载关联"}),"：使用 ",(0,r.jsx)(s.code,{children:"with()"})," 方法避免 N+1 查询问题"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"选择性加载"}),"：只加载需要的关联关系"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"索引优化"}),"：为外键字段添加数据库索引"]}),"\n"]}),"\n",(0,r.jsxs)(s.h3,{id:"维护建议",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#维护建议",children:"#"}),"维护建议"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"文档记录"}),"：在备注中详细说明关联关系的用途"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"定期检查"}),"：定期检查关联配置的有效性"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"测试验证"}),"：在开发环境中充分测试关联关系"]}),"\n"]}),"\n",(0,r.jsxs)(s.h2,{id:"注意事项",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#注意事项",children:"#"}),"注意事项"]}),"\n",(0,r.jsxs)(s.div,{className:"rspress-directive warning",children:[(0,r.jsx)(s.div,{className:"rspress-directive-title",children:"重要提醒"}),(0,r.jsx)(s.div,{className:"rspress-directive-content",children:(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"动态关联在系统启动时注册；配置保存/删除后缓存会自动清理并生效"}),"\n",(0,r.jsx)(s.li,{children:"确保相关模型和数据表存在，否则可能导致错误"}),"\n",(0,r.jsx)(s.li,{children:"复杂的关联关系建议在模型中直接定义，以获得更好的 IDE 支持"}),"\n",(0,r.jsx)(s.li,{children:"多态关联需要确保数据表结构符合 Laravel 规范"}),"\n"]})})]}),"\n",(0,r.jsxs)(s.div,{className:"rspress-directive tip",children:[(0,r.jsx)(s.div,{className:"rspress-directive-title",children:"性能提示"}),(0,r.jsx)(s.div,{className:"rspress-directive-content",children:(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"关联配置会被缓存，生产环境中性能影响很小"}),"\n",(0,r.jsx)(s.li,{children:"建议在开发完成后将常用关联迁移到模型文件中"}),"\n",(0,r.jsx)(s.li,{children:"使用代码预览功能确认生成的关联方法正确"}),"\n"]})})]})]})}function l(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,i.ah)(),e.components);return s?(0,r.jsx)(s,Object.assign({},e,{children:(0,r.jsx)(d,e)})):d(e)}let h=l;l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["guide%2Fbuilt-in%2Frelationships.md"]={toc:[{id:"功能特性",text:"功能特性",depth:2},{id:"支持的关联类型",text:"支持的关联类型",depth:2},{id:"模型管理",text:"模型管理",depth:2},{id:"生成模型",text:"生成模型",depth:3},{id:"关联关系配置",text:"关联关系配置",depth:2},{id:"新增关联关系",text:"新增关联关系",depth:3},{id:"配置验证",text:"配置验证",depth:3},{id:"代码预览",text:"代码预览",depth:3},{id:"工作原理",text:"工作原理",depth:2},{id:"动态注册机制",text:"动态注册机制",depth:3},{id:"缓存机制",text:"缓存机制",depth:3},{id:"参数构建",text:"参数构建",depth:3},{id:"使用示例",text:"使用示例",depth:2},{id:"示例-1用户与个人资料一对一",text:"示例 1：用户与个人资料（一对一）",depth:3},{id:"示例-2文章与评论一对多",text:"示例 2：文章与评论（一对多）",depth:3},{id:"示例-3用户与角色多对多",text:"示例 3：用户与角色（多对多）",depth:3},{id:"最佳实践",text:"最佳实践",depth:2},{id:"命名规范",text:"命名规范",depth:3},{id:"性能优化",text:"性能优化",depth:3},{id:"维护建议",text:"维护建议",depth:3},{id:"注意事项",text:"注意事项",depth:2}],title:"动态关联",frontmatter:{}}}}]);