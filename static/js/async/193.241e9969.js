"use strict";(self.webpackChunkrspress_doc_template=self.webpackChunkrspress_doc_template||[]).push([["193"],{8111:function(n,e,t){t.r(e),t.d(e,{default:function(){return l}});var a=t(2676),s=t(453);function r(n){let e=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",h3:"h3",pre:"pre",code:"code",strong:"strong",ol:"ol",li:"li"},(0,s.ah)(),n.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(e.h1,{id:"扩展开发示例",children:[(0,a.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#扩展开发示例",children:"#"}),"扩展开发示例"]}),"\n",(0,a.jsxs)(e.h2,{id:"简单通知扩展",children:[(0,a.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#简单通知扩展",children:"#"}),"简单通知扩展"]}),"\n",(0,a.jsx)(e.p,{children:"这是一个完整的通知扩展示例，展示了扩展开发的基本流程。"}),"\n",(0,a.jsxs)(e.h3,{id:"目录结构",children:[(0,a.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#目录结构",children:"#"}),"目录结构"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{meta:"",children:"extensions/slowlyo/notice/\n├── composer.json\n├── README.md\n├── logo.png\n├── src/\n│   ├── NoticeServiceProvider.php\n│   ├── Models/\n│   │   └── Notice.php\n│   └── Http/\n│       ├── Controllers/\n│       │   └── NoticeController.php\n│       └── routes.php\n├── database/\n│   └── migrations/\n│       └── 2024_01_01_000000_create_notices_table.php\n├── lang/\n│   ├── zh_CN/\n│   │   └── notice.php\n│   └── en/\n│       └── notice.php\n└── public/\n    └── extensions/\n        └── slowlyo/\n            └── notice/\n                ├── css/\n                │   └── notice.css\n                └── js/\n                    └── notice.js\n"})}),"\n",(0,a.jsxs)(e.h3,{id:"1-composer-配置",children:[(0,a.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#1-composer-配置",children:"#"}),"1. Composer 配置"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",meta:"",children:'{\n    "name": "slowlyo/notice",\n    "type": "library",\n    "description": "Owl Admin 通知扩展",\n    "version": "1.0.0",\n    "keywords": ["owl-admin", "notice", "notification"],\n    "license": "MIT",\n    "authors": [\n        {\n            "name": "Slowlyo",\n            "email": "slowlyo@qq.com"\n        }\n    ],\n    "homepage": "https://github.com/slowlyo/owl-admin-notice",\n    "require": {\n        "php": ">=8.1",\n        "slowlyo/owl-admin": "^2.0"\n    },\n    "autoload": {\n        "psr-4": {\n            "Slowlyo\\\\Notice\\\\": "src/"\n        }\n    },\n    "extra": {\n        "owl-admin": "Slowlyo\\\\Notice\\\\NoticeServiceProvider",\n        "alias": "系统通知"\n    }\n}\n'})}),"\n",(0,a.jsxs)(e.h3,{id:"2-服务提供者",children:[(0,a.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#2-服务提供者",children:"#"}),"2. 服务提供者"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-php",meta:"",children:"<?php\n\nnamespace Slowlyo\\Notice;\n\nuse Slowlyo\\OwlAdmin\\Renderers\\TextControl;\nuse Slowlyo\\OwlAdmin\\Renderers\\SwitchControl;\nuse Slowlyo\\OwlAdmin\\Renderers\\NumberControl;\nuse Slowlyo\\OwlAdmin\\Extend\\ServiceProvider;\n\nclass NoticeServiceProvider extends ServiceProvider\n{\n    protected $middleware = [\n        'notice.check' => \\Slowlyo\\Notice\\Http\\Middleware\\NoticeMiddleware::class,\n    ];\n\n    protected $exceptRoutes = [\n        'permission' => [\n            'notice/api/count',\n        ],\n    ];\n\n    public function customInitAfter()\n    {\n        // 加载前端资源\n        $this->loadCss('/css/notice.css');\n        $this->loadJs('/js/notice.js');\n\n        // 导入菜单\n        $this->importMenu([\n            [\n                'title' => '系统通知',\n                'url' => '/notice',\n                'icon' => 'fa fa-bell',\n                'order' => 100,\n            ],\n            [\n                'parent' => '系统通知',\n                'title' => '通知管理',\n                'url' => '/notice/manage',\n                'icon' => 'fa fa-list',\n            ],\n            [\n                'parent' => '系统通知',\n                'title' => '发送通知',\n                'url' => '/notice/send',\n                'icon' => 'fa fa-paper-plane',\n            ],\n        ]);\n    }\n\n    public function settingForm()\n    {\n        return $this->baseSettingForm()->body([\n            SwitchControl::make()\n                ->name('enabled')\n                ->label('启用通知')\n                ->value(true),\n\n            NumberControl::make()\n                ->name('max_notices')\n                ->label('最大通知数量')\n                ->value(100)\n                ->min(10)\n                ->max(1000),\n\n            SwitchControl::make()\n                ->name('auto_delete')\n                ->label('自动删除过期通知')\n                ->value(false),\n\n            NumberControl::make()\n                ->name('expire_days')\n                ->label('过期天数')\n                ->value(30)\n                ->min(1)\n                ->max(365)\n                ->visibleOn('${auto_delete}'),\n        ]);\n    }\n}\n"})}),"\n",(0,a.jsxs)(e.h3,{id:"3-数据库迁移",children:[(0,a.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#3-数据库迁移",children:"#"}),"3. 数据库迁移"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-php",meta:"",children:"<?php\n\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nreturn new class extends Migration\n{\n    public function up()\n    {\n        Schema::create('notices', function (Blueprint $table) {\n            $table->id();\n            $table->string('title');\n            $table->text('content');\n            $table->string('type')->default('info'); // info, success, warning, error\n            $table->json('target_users')->nullable(); // 目标用户ID数组\n            $table->boolean('is_global')->default(false); // 是否全局通知\n            $table->boolean('is_read')->default(false);\n            $table->timestamp('read_at')->nullable();\n            $table->unsignedBigInteger('sender_id')->nullable();\n            $table->unsignedBigInteger('receiver_id')->nullable();\n            $table->timestamp('expires_at')->nullable();\n            $table->timestamps();\n\n            $table->index(['receiver_id', 'is_read']);\n            $table->index(['is_global', 'created_at']);\n            $table->index('expires_at');\n        });\n    }\n\n    public function down()\n    {\n        Schema::dropIfExists('notices');\n    }\n};\n"})}),"\n",(0,a.jsxs)(e.h3,{id:"4-模型定义",children:[(0,a.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#4-模型定义",children:"#"}),"4. 模型定义"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-php",meta:"",children:"<?php\n\nnamespace Slowlyo\\Notice\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Relations\\BelongsTo;\n\nclass Notice extends Model\n{\n    protected $fillable = [\n        'title',\n        'content',\n        'type',\n        'target_users',\n        'is_global',\n        'is_read',\n        'read_at',\n        'sender_id',\n        'receiver_id',\n        'expires_at',\n    ];\n\n    protected $casts = [\n        'target_users' => 'array',\n        'is_global' => 'boolean',\n        'is_read' => 'boolean',\n        'read_at' => 'datetime',\n        'expires_at' => 'datetime',\n    ];\n\n    public function sender(): BelongsTo\n    {\n        return $this->belongsTo(config('admin.database.users_model'), 'sender_id');\n    }\n\n    public function receiver(): BelongsTo\n    {\n        return $this->belongsTo(config('admin.database.users_model'), 'receiver_id');\n    }\n\n    public function scopeForUser($query, $userId)\n    {\n        return $query->where(function ($q) use ($userId) {\n            $q->where('is_global', true)\n              ->orWhere('receiver_id', $userId)\n              ->orWhereJsonContains('target_users', $userId);\n        });\n    }\n\n    public function scopeUnread($query)\n    {\n        return $query->where('is_read', false);\n    }\n\n    public function scopeNotExpired($query)\n    {\n        return $query->where(function ($q) {\n            $q->whereNull('expires_at')\n              ->orWhere('expires_at', '>', now());\n        });\n    }\n}\n"})}),"\n",(0,a.jsxs)(e.h3,{id:"5-控制器实现",children:[(0,a.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#5-控制器实现",children:"#"}),"5. 控制器实现"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-php",meta:"",children:"<?php\n\nnamespace Slowlyo\\Notice\\Http\\Controllers;\n\nuse Illuminate\\Http\\Request;\nuse Slowlyo\\Notice\\Models\\Notice;\nuse Slowlyo\\OwlAdmin\\Controllers\\AdminController;\n\nclass NoticeController extends AdminController\n{\n    public function index()\n    {\n        if ($this->actionOfGetData()) {\n            $query = Notice::query()\n                ->forUser(admin_user()->id)\n                ->notExpired()\n                ->orderBy('created_at', 'desc');\n\n            return $this->response()->success([\n                'rows' => $query->paginate(request('perPage', 20)),\n            ]);\n        }\n\n        $page = $this->basePage()->body($this->list());\n\n        return $this->response()->success($page);\n    }\n\n    protected function list()\n    {\n        return amis()->CRUDTable()\n            ->perPage(20)\n            ->api($this->getListGetDataPath())\n            ->columns([\n                amis()->TableColumn('title', '标题'),\n                amis()->TableColumn('type', '类型')\n                    ->type('mapping')\n                    ->map([\n                        'info' => '<span class=\"label label-info\">信息</span>',\n                        'success' => '<span class=\"label label-success\">成功</span>',\n                        'warning' => '<span class=\"label label-warning\">警告</span>',\n                        'error' => '<span class=\"label label-danger\">错误</span>',\n                    ]),\n                amis()->TableColumn('is_read', '状态')\n                    ->type('mapping')\n                    ->map([\n                        true => '<span class=\"label label-success\">已读</span>',\n                        false => '<span class=\"label label-warning\">未读</span>',\n                    ]),\n                amis()->TableColumn('created_at', '创建时间')\n                    ->type('datetime'),\n                $this->rowActions([\n                    amis()->DrawerAction()\n                        ->label('查看')\n                        ->drawer(\n                            amis()->Drawer()\n                                ->title('通知详情')\n                                ->body([\n                                    amis()->Property()\n                                        ->title('${title}')\n                                        ->column(1)\n                                        ->items([\n                                            ['label' => '内容', 'content' => '${content}'],\n                                            ['label' => '类型', 'content' => '${type}'],\n                                            ['label' => '时间', 'content' => '${created_at}'],\n                                        ])\n                                ])\n                        ),\n                    amis()->AjaxAction()\n                        ->label('标记已读')\n                        ->level('link')\n                        ->visibleOn('${!is_read}')\n                        ->api([\n                            'url' => admin_url('notice/mark-read'),\n                            'method' => 'post',\n                            'data' => ['id' => '${id}'],\n                        ]),\n                ]),\n            ]);\n    }\n\n    public function markRead(Request $request)\n    {\n        $notice = Notice::findOrFail($request->id);\n        \n        $notice->update([\n            'is_read' => true,\n            'read_at' => now(),\n        ]);\n\n        return $this->response()->successMessage('标记成功');\n    }\n\n    public function getUnreadCount()\n    {\n        $count = Notice::forUser(admin_user()->id)\n            ->unread()\n            ->notExpired()\n            ->count();\n\n        return $this->response()->success(['count' => $count]);\n    }\n}\n"})}),"\n",(0,a.jsxs)(e.h3,{id:"6-路由定义",children:[(0,a.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#6-路由定义",children:"#"}),"6. 路由定义"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-php",meta:"",children:"<?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse Slowlyo\\Notice\\Http\\Controllers\\NoticeController;\n\nRoute::get('notice', [NoticeController::class, 'index']);\nRoute::post('notice/mark-read', [NoticeController::class, 'markRead']);\nRoute::get('notice/api/count', [NoticeController::class, 'getUnreadCount']);\n"})}),"\n",(0,a.jsxs)(e.h3,{id:"7-语言包",children:[(0,a.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#7-语言包",children:"#"}),"7. 语言包"]}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"zh_CN/notice.php"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-php",meta:"",children:"<?php\n\nreturn [\n    'title' => '标题',\n    'content' => '内容',\n    'type' => '类型',\n    'status' => '状态',\n    'read' => '已读',\n    'unread' => '未读',\n    'mark_read' => '标记已读',\n    'mark_all_read' => '全部已读',\n    'delete' => '删除',\n    'created_at' => '创建时间',\n];\n"})}),"\n",(0,a.jsxs)(e.h3,{id:"8-前端资源",children:[(0,a.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#8-前端资源",children:"#"}),"8. 前端资源"]}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"css/notice.css"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-css",meta:"",children:".notice-badge {\n    position: relative;\n}\n\n.notice-badge .badge {\n    position: absolute;\n    top: -8px;\n    right: -8px;\n    background: #ff4757;\n    color: white;\n    border-radius: 50%;\n    padding: 2px 6px;\n    font-size: 12px;\n}\n\n.notice-item {\n    padding: 10px;\n    border-bottom: 1px solid #eee;\n}\n\n.notice-item:hover {\n    background-color: #f5f5f5;\n}\n\n.notice-item.unread {\n    background-color: #fff3cd;\n}\n"})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"js/notice.js"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-javascript",meta:"",children:"(function() {\n    // 获取未读通知数量\n    function updateNoticeCount() {\n        fetch('/admin/notice/api/count')\n            .then(response => response.json())\n            .then(data => {\n                if (data.status === 0) {\n                    const badge = document.querySelector('.notice-badge .badge');\n                    if (badge) {\n                        badge.textContent = data.data.count;\n                        badge.style.display = data.data.count > 0 ? 'block' : 'none';\n                    }\n                }\n            });\n    }\n\n    // 页面加载时更新通知数量\n    document.addEventListener('DOMContentLoaded', updateNoticeCount);\n\n    // 每30秒更新一次\n    setInterval(updateNoticeCount, 30000);\n})();\n"})}),"\n",(0,a.jsxs)(e.h2,{id:"使用示例",children:[(0,a.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#使用示例",children:"#"}),"使用示例"]}),"\n",(0,a.jsxs)(e.h3,{id:"安装扩展",children:[(0,a.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#安装扩展",children:"#"}),"安装扩展"]}),"\n",(0,a.jsxs)(e.ol,{children:["\n",(0,a.jsxs)(e.li,{children:["将扩展代码放置到 ",(0,a.jsx)(e.code,{children:"extensions/slowlyo/notice/"})," 目录"]}),"\n",(0,a.jsx)(e.li,{children:"在扩展管理中启用扩展"}),"\n",(0,a.jsx)(e.li,{children:"扩展会自动运行数据库迁移并导入菜单"}),"\n"]}),"\n",(0,a.jsxs)(e.h3,{id:"发送通知",children:[(0,a.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#发送通知",children:"#"}),"发送通知"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-php",meta:"",children:"use Slowlyo\\Notice\\Models\\Notice;\n\n// 发送全局通知\nNotice::create([\n    'title' => '系统维护通知',\n    'content' => '系统将于今晚22:00-24:00进行维护',\n    'type' => 'warning',\n    'is_global' => true,\n    'sender_id' => admin_user()->id,\n]);\n\n// 发送给特定用户\nNotice::create([\n    'title' => '个人消息',\n    'content' => '您的申请已通过审核',\n    'type' => 'success',\n    'receiver_id' => $userId,\n    'sender_id' => admin_user()->id,\n]);\n"})}),"\n",(0,a.jsxs)(e.h3,{id:"获取通知",children:[(0,a.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#获取通知",children:"#"}),"获取通知"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-php",meta:"",children:"// 获取用户未读通知\n$notices = Notice::forUser($userId)\n    ->unread()\n    ->notExpired()\n    ->latest()\n    ->get();\n\n// 获取通知数量\n$count = Notice::forUser($userId)->unread()->count();\n"})}),"\n",(0,a.jsx)(e.p,{children:"这个示例展示了一个完整的扩展开发流程，包括数据库设计、业务逻辑、前端交互等各个方面。您可以参考这个示例来开发自己的扩展。"})]})}function i(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,s.ah)(),n.components);return e?(0,a.jsx)(e,Object.assign({},n,{children:(0,a.jsx)(r,n)})):r(n)}let l=i;i.__RSPRESS_PAGE_META={},i.__RSPRESS_PAGE_META["guide%2Fextension%2Fexamples.md"]={toc:[{id:"简单通知扩展",text:"简单通知扩展",depth:2},{id:"目录结构",text:"目录结构",depth:3},{id:"1-composer-配置",text:"1. Composer 配置",depth:3},{id:"2-服务提供者",text:"2. 服务提供者",depth:3},{id:"3-数据库迁移",text:"3. 数据库迁移",depth:3},{id:"4-模型定义",text:"4. 模型定义",depth:3},{id:"5-控制器实现",text:"5. 控制器实现",depth:3},{id:"6-路由定义",text:"6. 路由定义",depth:3},{id:"7-语言包",text:"7. 语言包",depth:3},{id:"8-前端资源",text:"8. 前端资源",depth:3},{id:"使用示例",text:"使用示例",depth:2},{id:"安装扩展",text:"安装扩展",depth:3},{id:"发送通知",text:"发送通知",depth:3},{id:"获取通知",text:"获取通知",depth:3}],title:"扩展开发示例",frontmatter:{}}}}]);