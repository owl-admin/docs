"use strict";(self.webpackChunkrspress_doc_template=self.webpackChunkrspress_doc_template||[]).push([["1498"],{3330:function(e,r,s){s.r(r),s.d(r,{default:function(){return c}});var n=s(2676),d=s(453);function t(e){let r=Object.assign({h1:"h1",a:"a",h3:"h3",p:"p",code:"code",pre:"pre",strong:"strong"},(0,d.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(r.h1,{id:"自定义路由不生效",children:[(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#自定义路由不生效",children:"#"}),"自定义路由不生效"]}),"\n",(0,n.jsxs)(r.h3,{id:"原因一路由顺序冲突",children:[(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#原因一路由顺序冲突",children:"#"}),"原因一：路由顺序冲突"]}),"\n",(0,n.jsxs)(r.p,{children:["代码生成器生成的路由使用 ",(0,n.jsx)(r.code,{children:"resource"})," 方法，会自动注册 7 个 RESTful 路由："]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-php",meta:"",children:"$router->resource('users', UserController::class);\n// 相当于注册了：\n// GET    /users          - index\n// GET    /users/create   - create  \n// POST   /users          - store\n// GET    /users/{id}     - show\n// GET    /users/{id}/edit - edit\n// PUT    /users/{id}     - update\n// DELETE /users/{id}     - destroy\n"})}),"\n",(0,n.jsxs)(r.p,{children:["如果你在 resource 路由",(0,n.jsx)(r.strong,{children:"之后"}),"添加自定义路由，且路径与 resource 路由冲突，自定义路由会被忽略。"]}),"\n",(0,n.jsxs)(r.h3,{id:"原因二自动生成文件被覆盖",children:[(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#原因二自动生成文件被覆盖",children:"#"}),"原因二：自动生成文件被覆盖"]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.code,{children:"routes/admin.php"})," 是自动生成的文件，每次运行代码生成器时会被",(0,n.jsx)(r.strong,{children:"完全重写"}),"，手动添加的路由会丢失。"]}),"\n",(0,n.jsxs)(r.h3,{id:"路由加载顺序",children:[(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#路由加载顺序",children:"#"}),"路由加载顺序"]}),"\n",(0,n.jsx)(r.p,{children:"系统按以下顺序加载路由："}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-php",meta:"",children:"1. 系统基础路由（登录、菜单、权限等）     - Admin::loadBaseRoute()\n2. 扩展路由                                - Admin::extension()->boot()\n3. routes/admin.php（代码生成器生成）      - loadRoutesFrom('routes/admin.php')\n4. app/Admin/routes.php（自定义路由）      - loadRoutesFrom('app/Admin/routes.php')\n5. 模块路由                                - loadRoutesFrom(module routes)\n"})}),"\n",(0,n.jsxs)(r.h3,{id:"解决方案",children:[(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#解决方案",children:"#"}),"解决方案"]}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.strong,{children:"方案一：自定义路由写在 resource 之前"})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-php",meta:"",children:"// ✅ 正确：自定义路由在前\n$router->get('users/export', [UserController::class, 'export']);\n$router->resource('users', UserController::class);\n"})}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.strong,{children:"方案二：使用不同的路径 (推荐)"})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-php",meta:"",children:"$router->resource('users', UserController::class);\n// ✅ 使用不冲突的路径\n$router->get('user-export', [UserController::class, 'export']);\n"})}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.strong,{children:"方案三：限制 resource 路由"})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-php",meta:"",children:"// 只注册需要的路由\n$router->resource('users', UserController::class)->only(['index', 'store', 'update', 'destroy']);\n"})})]})}function a(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:r}=Object.assign({},(0,d.ah)(),e.components);return r?(0,n.jsx)(r,Object.assign({},e,{children:(0,n.jsx)(t,e)})):t(e)}let c=a;a.__RSPRESS_PAGE_META={},a.__RSPRESS_PAGE_META["faq%2Froute-conflict.md"]={toc:[{id:"原因一路由顺序冲突",text:"原因一：路由顺序冲突",depth:3},{id:"原因二自动生成文件被覆盖",text:"原因二：自动生成文件被覆盖",depth:3},{id:"路由加载顺序",text:"路由加载顺序",depth:3},{id:"解决方案",text:"解决方案",depth:3}],title:"自定义路由不生效",frontmatter:{}}}}]);