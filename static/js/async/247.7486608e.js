"use strict";(self.webpackChunkrspress_doc_template=self.webpackChunkrspress_doc_template||[]).push([["247"],{4032:function(n,e,i){i.r(e),i.d(e,{default:function(){return a}});var s=i(2676),t=i(453);function r(n){let e=Object.assign({h1:"h1",a:"a",h2:"h2",ul:"ul",li:"li",code:"code",pre:"pre"},(0,t.ah)(),n.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(e.h1,{id:"查",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#查",children:"#"}),"查"]}),"\n",(0,s.jsxs)(e.h2,{id:"列表",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#列表",children:"#"}),"列表"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["前端会根据菜单路径, 访问对应的路由, 通过 ",(0,s.jsx)(e.code,{children:"get"})," 请求, 访问到对应控制器的 ",(0,s.jsx)(e.code,{children:"index"})," 方法"]}),"\n",(0,s.jsxs)(e.li,{children:["这里通过 ",(0,s.jsx)(e.code,{children:"_action"})," 参数, 让这个方法同时处理了 3 个功能","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["原因: 不需要额外的定义路由, 一个 ",(0,s.jsx)(e.code,{children:"resource"})," 路由就可以满足所有 ",(0,s.jsx)(e.code,{children:"CRUD"})," 的功能"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-php",meta:"",children:"public function index()\n{\n    // 带有参数 ?_action=getData 的请求, 查询数据并返回\n    if ($this->actionOfGetData()) {\n        return $this->response()->success($this->service->list());\n    }\n\n    // 带有参数 ?_action=export 的请求, 处理导出\n    if ($this->actionOfExport()) {\n        return $this->export();\n    }\n\n    // 没有携带 _action 参数的请求, 返回列表结构\n    return $this->response()->success($this->list()); // 这里调用了 list 方法\n}\n"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"list 方法, 用于返回列表结构"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-php",meta:"",children:"public function list()\n{\n    // baseCRUD 方法中, 配置了部分基础配置, 如果需要修改, 可以直接在后面覆盖\n    $crud = $this->baseCRUD()\n        // CRUD 的顶部工具栏\n        ->headerToolbar([\n            $this->createButton(true), // 新增按钮\n            ...$this->baseHeaderToolBar(), // 工具栏内的其他操作按钮\n        ])\n        // 筛选器\n        ->filter(\n            // baseFilter 方法中配置了一个基础的表单\n            $this->baseFilter()->body([\n                // 这里边配置筛选的表单项\n                amis()->TextControl('keyword', __('admin.keyword'))\n            ])\n        )\n        // 判断是否可以批量操作\n        ->itemCheckableOn('${items[index].state > 0}')\n        // 表格列\n        ->columns([\n            amis()->TableColumn('id', 'ID')->sortable(),\n            amis()->TableColumn('name', __('admin.admin_user.name')),\n            \n            // 行操作按钮\n            $this->rowActions([\n                $this->rowEditButton(true), // 编辑按钮\n                $this->rowDeleteButton(), // 删除按钮\n            ]),\n        ]);\n\n    // baseList 方法中是基础的页面配置\n    return $this->baseList($crud);\n}\n"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Service 中的 list 方法, 用于查询数据"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-php",meta:"",children:"/**\n * 列表 获取数据\n *\n * @return array\n */\npublic function list()\n{\n    // 处理查询条件\n    $query = $this->listQuery();\n\n    // 分页查询数据\n    $list  = $query->paginate(request()->input('perPage', 20));\n    $items = $list->items();\n    $total = $list->total();\n\n    return compact('items', 'total');\n}\n\n/**\n * 列表 获取查询 (大多数情况下, 只需要重写这个方法即可)\n *\n * @return Builder\n */\npublic function listQuery()\n{\n    $query = $this->query(); // 对应模型的 query 方法\n\n    $this->sortable($query); // 处理排序\n\n    $this->searchable($query); // 处理 CRUD 的 searchable 属性\n\n    return $query; // 返回查询条件\n}\n"})}),"\n",(0,s.jsxs)(e.h2,{id:"详情",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#详情",children:"#"}),"详情"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["页面模式下","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["通过访问 ",(0,s.jsx)(e.code,{children:"xxx/{id}"})," 路由, 进入到 ",(0,s.jsx)(e.code,{children:"AdminController"})," 方法中的 ",(0,s.jsx)(e.code,{children:"show"})," 方法"]}),"\n",(0,s.jsxs)(e.li,{children:["在 ",(0,s.jsx)(e.code,{children:"show"})," 方法中, 调用 ",(0,s.jsx)(e.code,{children:"detail"})," 方法, 并返回新增页面的结构"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["弹窗模式下","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["在访问 ",(0,s.jsx)(e.code,{children:"rowShowButton"})," 方法时, 会调用 ",(0,s.jsx)(e.code,{children:"detail"})," 方法, 并返回详情页面的结构"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-php",meta:"",children:"/**\n * 详情 (AdminController 中)\n *\n * @param $id\n *\n * @return JsonResponse|JsonResource\n * @throws ContainerExceptionInterface\n * @throws NotFoundExceptionInterface\n */\npublic function show($id)\n{\n    // 判断参数, 查询详情并返回\n    if ($this->actionOfGetData()) {\n        return $this->response()->success($this->service->getDetail($id));\n    }\n\n    $detail = amis()\n        ->Card()\n        ->className('base-form')\n        ->header(['title' => __('admin.detail')])\n        ->body($this->detail()) // 这里调用了 detail 方法\n        // 工具栏\n        ->toolbar([\n            $this->backButton() // 返回按钮\n        ]); \n\n    $page = $this->basePage()->body($detail);\n\n    return $this->response()->success($page);\n}\n\n/**\n * 前端 amis 通过识别 detail 方法返回的结构来详情页面\n * \n * @param bool $id 对应的主键\n * \n * @return Form\n */\npublic function detail($id)\n{\n    return $this->baseDetail()->body([\n        amis()->StaticExactControl()->name('id')->label('ID'),\n    ]);\n}\n\n/**\n * 详情 获取数据 (Service 中)\n *\n * @param $id\n *\n * @return Builder|Builder[]|\\Illuminate\\Database\\Eloquent\\Collection|Model|null\n */\npublic function getDetail($id)\n{\n    return $this->query()->find($id);\n}\n"})})]})}function l(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,t.ah)(),n.components);return e?(0,s.jsx)(e,Object.assign({},n,{children:(0,s.jsx)(r,n)})):r(n)}let a=l;l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["guide%2Fcrud%2Fread.md"]={toc:[{id:"列表",text:"列表",depth:2},{id:"详情",text:"详情",depth:2}],title:"查",frontmatter:{}}}}]);