"use strict";(self.webpackChunkrspress_doc_template=self.webpackChunkrspress_doc_template||[]).push([["2741"],{6011:function(e,n,i){i.r(n),i.d(n,{default:function(){return o}});var r=i(2676),d=i(453);function t(e){let n=Object.assign({h1:"h1",a:"a",blockquote:"blockquote",p:"p",code:"code",h2:"h2",h3:"h3",pre:"pre",ul:"ul",li:"li"},(0,d.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"条件组合查询",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#条件组合查询",children:"#"}),"条件组合查询"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"v3.0.3 新增"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["在 ",(0,r.jsx)(n.code,{children:"OwlAdmin"})," 中，可以使用 ",(0,r.jsx)(n.code,{children:"ConditionBuilder"})," 组件来灵活的构建条件组合查询。"]}),"\n",(0,r.jsxs)(n.h2,{id:"使用",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#使用",children:"#"}),"使用"]}),"\n",(0,r.jsxs)(n.h3,{id:"1-在model-中引入conditionbuilderscopetrait",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1-在model-中引入conditionbuilderscopetrait",children:"#"}),"1. 在",(0,r.jsx)(n.code,{children:"Model"})," 中引入",(0,r.jsx)(n.code,{children:"ConditionBuilderScopeTrait"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",meta:"",children:"\nuse Slowlyo\\OwlAdmin\\Traits\\ConditionBuilderScopeTrait;\n\nclass User extends Model\n{\n    use ConditionBuilderScopeTrait;\n}\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"2-在需要使用条件组合查询的语句中添加withconditionbuilder-方法",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2-在需要使用条件组合查询的语句中添加withconditionbuilder-方法",children:"#"}),"2. 在需要使用条件组合查询的语句中，添加",(0,r.jsx)(n.code,{children:"withConditionBuilder()"})," 方法`"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"withConditionBuilder()"})," 是在 ",(0,r.jsx)(n.code,{children:"ConditionBuilderScopeTrait"})," 中实现的 ",(0,r.jsx)(n.a,{href:"https://learnku.com/docs/laravel/9.x/eloquent/12251#f97e0f",rel:"noopener noreferrer",target:"_blank",children:"局部查询作用域"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",meta:"",children:"User::query()->withConditionBuilder()->get();\n// 可以传入 true , 使构建的查询字段不拼接表名\nUser::query()->withConditionBuilder(true)->get();\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"3-添加conditionbuilder-组件",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#3-添加conditionbuilder-组件",children:"#"}),"3. 添加",(0,r.jsx)(n.code,{children:"ConditionBuilder"})," 组件"]}),"\n",(0,r.jsxs)(n.p,{children:["以基础的 ",(0,r.jsx)(n.code,{children:"CRUD"})," 页面为例："]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"ConditionBuilder"})," 组件的使用，请参考 ",(0,r.jsx)(n.a,{href:"https://aisuda.bce.baidu.com/amis/zh-CN/components/form/condition-builder",rel:"noopener noreferrer",target:"_blank",children:"官方文档"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",meta:"",children:"public function list(): Page\n{\n    $crud = $this->baseCRUD()\n        ->filter(\n            $this->baseFilter()->body([\n                // baseFilterConditionBuilder 方法已在基类中实现\n                $this->baseFilterConditionBuilder()->fields([\n                    // text 类型\n                    [\n                        'name'  => 'title',\n                        'label' => '名称',\n                        'type'  => 'text',\n                    ],\n                    // 自定义类型\n                    [\n                        'type'      => 'custom', // 设置类型为 自定义\n                        'name'      => 'custom', // 字段名\n                        'label'     => '自定义', // 字段标题\n                        'operators' => [ // 设置操作符\n                            [\n                                'label' => '自定义',    // 操作符标题\n                                'value' => 'custom-op', // 操作符值\n                            ],\n                        ],\n                        'value'     => amis()->TextControl(), // right 需要渲染的组件\n                    ],\n                ]),\n            ])\n        )\n        ->columns([\n            // ...\n        ]);\n\n    return $this->baseList($crud);\n}\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"扩展",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#扩展",children:"#"}),"扩展"]}),"\n",(0,r.jsxs)(n.p,{children:["在准备扩展前，请先确保读懂了 ",(0,r.jsx)(n.code,{children:"ConditionBuilderScopeTrait"})," 的实现，以及 ",(0,r.jsx)(n.code,{children:"ConditionBuilder"})," 组件的使用"]}),"\n",(0,r.jsxs)(n.h3,{id:"1-参考上述示例添加自定义类型",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1-参考上述示例添加自定义类型",children:"#"}),"1. 参考上述示例，添加自定义类型"]}),"\n",(0,r.jsxs)(n.h3,{id:"2-在对应的model-中添加extraconditionbuilderquery-方法",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2-在对应的model-中添加extraconditionbuilderquery-方法",children:"#"}),"2. 在对应的",(0,r.jsx)(n.code,{children:"Model"})," 中，添加",(0,r.jsx)(n.code,{children:"extraConditionBuilderQuery"})," 方法"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",meta:"",children:"class User Extends Model\n{\n    use ConditionBuilderScopeTrait;\n\n    /**\n     * @param \\Illuminate\\Database\\Query\\Builder|self $query query实例\n     * @param array $filter 筛选项\n     * @param string $or 组合方式 and / or\n     *\n     * @return void\n     */\n    public function extraConditionBuilderQuery($query, $filter, $or)\n    {\n        $field = data_get($filter, 'left.field'); // 获取到要查询的字段\n        $op    = data_get($filter, 'op'); // 操作符, 对应到自定义类型中的 operators 下的某一项的 value\n        $value = data_get($filter, 'right'); // 用户输入的值\n\n        // 根据操作符，进行自定义查询\n        if ($op === 'custom-op') {\n            $query->where($field, '=', $value, $or);\n        }\n    }\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"注意："}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["在构建查询时，涉及循环&递归，请不要在 ",(0,r.jsx)(n.code,{children:"extraConditionBuilderQuery"})," 方法中进行任何io操作~"]}),"\n",(0,r.jsx)(n.li,{children:"ConditionBuilder 组件产生的数据较大，建议使用 post 请求~"}),"\n"]})]})}function l(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,d.ah)(),e.components);return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(t,e)})):t(e)}let o=l;l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["guide%2Fexamples%2Fcondition-builder.md"]={toc:[{id:"使用",text:"使用",depth:2},{id:"1-在model-中引入conditionbuilderscopetrait",text:"1. 在`Model` 中引入`ConditionBuilderScopeTrait`",depth:3},{id:"2-在需要使用条件组合查询的语句中添加withconditionbuilder-方法",text:"2. 在需要使用条件组合查询的语句中，添加`withConditionBuilder()` 方法`",depth:3},{id:"3-添加conditionbuilder-组件",text:"3. 添加`ConditionBuilder` 组件",depth:3},{id:"扩展",text:"扩展",depth:2},{id:"1-参考上述示例添加自定义类型",text:"1. 参考上述示例，添加自定义类型",depth:3},{id:"2-在对应的model-中添加extraconditionbuilderquery-方法",text:"2. 在对应的`Model` 中，添加`extraConditionBuilderQuery` 方法",depth:3}],title:"条件组合查询",frontmatter:{}}}}]);