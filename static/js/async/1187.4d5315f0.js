"use strict";(self.webpackChunkrspress_doc_template=self.webpackChunkrspress_doc_template||[]).push([["1187"],{8421:function(e,n,r){r.r(n),r.d(n,{default:function(){return c}});var d=r(2676),s=r(453);function i(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",code:"code",h3:"h3",ul:"ul",li:"li",pre:"pre",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",blockquote:"blockquote"},(0,s.ah)(),e.components);return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsxs)(n.h1,{id:"开发",children:[(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#开发",children:"#"}),"开发"]}),"\n",(0,d.jsxs)(n.h2,{id:"创建扩展",children:[(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#创建扩展",children:"#"}),"创建扩展"]}),"\n",(0,d.jsxs)(n.p,{children:["在扩展管理中使用 ",(0,d.jsx)(n.code,{children:"创建扩展"})," 来生成一个扩展的骨架。"]}),"\n",(0,d.jsxs)(n.p,{children:["配置相应的包名及命名空间，然后点击 ",(0,d.jsx)(n.code,{children:"确认"})," 即可。"]}),"\n",(0,d.jsxs)(n.h3,{id:"格式",children:[(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#格式",children:"#"}),"格式"]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"包名: 作者名/扩展名 (例如: slowlyo/banner)"}),"\n",(0,d.jsx)(n.li,{children:"命名空间: 作者名\\扩展名 (例如: Slowlyo\\Banner)"}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["扩展包创建完成后，会在 ",(0,d.jsx)(n.code,{children:"extensions"})," 目录下生成一个扩展包的骨架，目录结构如下:"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{meta:"",children:".\n├── database\n│   └── migrations                       # 数据库迁移文件\n├── public\n│   └── extensions\n│       └── slowlyo\n│           └── banner                   # 扩展前端文件, 会发布到 public/extensions 目录下\n├── src\n│   ├── Http\n│   │   ├── Controllers\n│   │   │   └── BannerController.php     # 扩展控制器\n│   │   ├── Middleware                   # 扩展中间件\n│   │   └── routes.php                   # 扩展路由\n│   └── BannerServiceProvider.php        # 扩展服务提供者\n├── .gitignore\n├── composer.json                        # composer 配置文件, 需自行配置 alias/authors/description 等\n└── README.md                            # 扩展说明文档, 可在扩展管理中查看\n"})}),"\n",(0,d.jsxs)(n.h2,{id:"配置",children:[(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#配置",children:"#"}),"配置"]}),"\n",(0,d.jsxs)(n.h3,{id:"logo",children:[(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#logo",children:"#"}),"logo"]}),"\n",(0,d.jsxs)(n.p,{children:["在插件根目录下添加 ",(0,d.jsx)(n.code,{children:"logo.png"})," 文件，用于在扩展管理中展示。"]}),"\n",(0,d.jsxs)(n.h3,{id:"文档",children:[(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#文档",children:"#"}),"文档"]}),"\n",(0,d.jsxs)(n.p,{children:["根目录的 ",(0,d.jsx)(n.code,{children:"README.md"})," 文件, 会在扩展管理中展示。"]}),"\n",(0,d.jsxs)(n.h3,{id:"composerjson",children:[(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#composerjson",children:"#"}),"composer.json"]}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"字段"}),(0,d.jsx)(n.th,{children:"说明"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"alias"}),(0,d.jsx)(n.td,{children:"扩展名称(在扩展管理中以这个为主)"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"authors"}),(0,d.jsx)(n.td,{children:"作者信息"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"description"}),(0,d.jsx)(n.td,{children:"描述信息"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"version"}),(0,d.jsx)(n.td,{children:"版本号"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"homepage"}),(0,d.jsx)(n.td,{children:"扩展主页"})]})]})]}),"\n",(0,d.jsxs)(n.h2,{id:"功能开发",children:[(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#功能开发",children:"#"}),"功能开发"]}),"\n",(0,d.jsxs)(n.h3,{id:"路由",children:[(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#路由",children:"#"}),"路由"]}),"\n",(0,d.jsxs)(n.p,{children:["你可以在 ",(0,d.jsx)(n.code,{children:"extensions/扩展名/src/Http/routes.php"})," 文件中定义扩展的路由。"]}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsx)(n.p,{children:"注意避免重复"}),"\n"]}),"\n",(0,d.jsxs)(n.h3,{id:"菜单",children:[(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#菜单",children:"#"}),"菜单"]}),"\n",(0,d.jsxs)(n.p,{children:["在",(0,d.jsx)(n.code,{children:"src/BannerServiceProvider.php"})," 中添加 ",(0,d.jsx)(n.code,{children:"$menu"})," 属性:"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-php",meta:"",children:"protected $menu = [\n    [\n        'parent'   => '',\n        'title'    => '轮播',\n        'url'      => '/banner',\n        'url_type' => '1',\n        'icon'     => 'fa fa-users',\n    ],\n    [\n        'parent'   => '轮播', // 此处父级菜单根据 title 查找\n        'title'    => '子菜单',\n        'url'      => '/banner/child',\n        'url_type' => '1',\n        'icon'     => 'fa fa-users',\n    ],\n];\n"})}),"\n",(0,d.jsxs)(n.h3,{id:"语言包",children:[(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#语言包",children:"#"}),"语言包"]}),"\n",(0,d.jsxs)(n.p,{children:["在扩展目录下创建 ",(0,d.jsx)(n.code,{children:"lang"})," 目录, 逻辑与laravel的语言包一致, 例如:"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{meta:"",children:".\n└── lang\n    ├── zh-CN\n    │   └── banner.php                    # 中文语言包\n    └── en\n        └── banner.php                    # 英文语言包\n"})}),"\n",(0,d.jsx)(n.p,{children:"在控制器中可以通过下面的方法访问语言包内容，关于多语言的更多用法可以参考 laravel 官方文档"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-php",meta:"",children:"use Slowlyo\\Banner\\BannerServiceProvider;\n\nBannerServiceProvider::trans('title');\n"})}),"\n",(0,d.jsxs)(n.h3,{id:"前端",children:[(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#前端",children:"#"}),"前端"]}),"\n",(0,d.jsxs)(n.p,{children:["你可以在服务提供者中使用 ",(0,d.jsx)(n.code,{children:"Admin::js()"})," 方法来动态加载你的前端文件 [",(0,d.jsx)(n.code,{children:"register()"})," / ",(0,d.jsx)(n.code,{children:"init()"}),"]"]}),"\n",(0,d.jsxs)(n.h3,{id:"中间件",children:[(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#中间件",children:"#"}),"中间件"]}),"\n",(0,d.jsxs)(n.p,{children:["在",(0,d.jsx)(n.code,{children:"src/BannerServiceProvider.php"})," 中添加 ",(0,d.jsx)(n.code,{children:"$middleware"})," 属性:"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-php",meta:"",children:"protected $middleware = [\n    LogOperation::class,\n    // ...\n];\n"})}),"\n",(0,d.jsxs)(n.h3,{id:"扩展配置",children:[(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#扩展配置",children:"#"}),"扩展配置"]}),"\n",(0,d.jsxs)(n.p,{children:["在",(0,d.jsx)(n.code,{children:"src/BannerServiceProvider.php"})," 中有以下方法, 依葫芦画瓢即可:"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-php",meta:"",children:"public function settingForm()\n{\n    return $this->baseSettingForm()->body([\n        TextControl::make()->name('value')->label('Value')->required(true),\n        // 继续添加你的配置项\n    ]);\n}\n"})}),"\n",(0,d.jsxs)(n.p,{children:["你可以使用 ",(0,d.jsx)(n.code,{children:"setting"})," 方法来获取配置项的值:"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-php",meta:"",children:"use Slowlyo\\Banner\\BannerServiceProvider;\n\n// 读取配置参数\n$except = BannerServiceProvider::setting('except');\n// 支持多级配置\n$except = BannerServiceProvider::setting('except.value');\n"})}),"\n",(0,d.jsxs)(n.h3,{id:"数据库迁移",children:[(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#数据库迁移",children:"#"}),"数据库迁移"]}),"\n",(0,d.jsxs)(n.p,{children:["在 ",(0,d.jsx)(n.code,{children:"extensions/扩展名/database/migrations"})," 目录下创建迁移文件"]}),"\n",(0,d.jsx)(n.p,{children:"扩展启用时会自动执行迁移文件, 卸载时会自动回滚"}),"\n",(0,d.jsxs)(n.h3,{id:"其他",children:[(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#其他",children:"#"}),"其他"]}),"\n",(0,d.jsxs)(n.p,{children:["基础的服务提供者中提供了 ",(0,d.jsx)(n.code,{children:"customInitBefore"})," 和 ",(0,d.jsx)(n.code,{children:"customInitAfter"})," 两个方法, 用于扩展的自定义初始化操作"]}),"\n",(0,d.jsxs)(n.h3,{id:"发布到-packagistorg",children:[(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#发布到-packagistorg",children:"#"}),"发布到 Packagist.org"]}),"\n",(0,d.jsxs)(n.p,{children:["参考 ",(0,d.jsx)(n.a,{href:"https://learnku.com/docs/composer/2018",rel:"noopener noreferrer",target:"_blank",children:"Packagist 中文文档"})]})]})}function h(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,d.jsx)(n,Object.assign({},e,{children:(0,d.jsx)(i,e)})):i(e)}let c=h;h.__RSPRESS_PAGE_META={},h.__RSPRESS_PAGE_META["guide%2Fextension%2Fdevelop.md"]={toc:[{id:"创建扩展",text:"创建扩展",depth:2},{id:"格式",text:"格式",depth:3},{id:"配置",text:"配置",depth:2},{id:"logo",text:"logo",depth:3},{id:"文档",text:"文档",depth:3},{id:"composerjson",text:"composer.json",depth:3},{id:"功能开发",text:"功能开发",depth:2},{id:"路由",text:"路由",depth:3},{id:"菜单",text:"菜单",depth:3},{id:"语言包",text:"语言包",depth:3},{id:"前端",text:"前端",depth:3},{id:"中间件",text:"中间件",depth:3},{id:"扩展配置",text:"扩展配置",depth:3},{id:"数据库迁移",text:"数据库迁移",depth:3},{id:"其他",text:"其他",depth:3},{id:"发布到-packagistorg",text:"发布到 Packagist.org",depth:3}],title:"开发",frontmatter:{}}}}]);