"use strict";(self.webpackChunkrspress_doc_template=self.webpackChunkrspress_doc_template||[]).push([["8736"],{7698:function(e,n,r){r.r(n),r.d(n,{default:function(){return t}});var s=r(2676),i=r(453);function l(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",ul:"ul",li:"li",code:"code",pre:"pre"},(0,i.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"增",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#增",children:"#"}),"增"]}),"\n",(0,s.jsxs)(n.h2,{id:"form-方法构建新增表单",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#form-方法构建新增表单",children:"#"}),"form 方法构建新增表单"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["页面模式下","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["通过访问 ",(0,s.jsx)(n.code,{children:"create"})," 路由, 进入到 ",(0,s.jsx)(n.code,{children:"AdminController"})," 方法中的 ",(0,s.jsx)(n.code,{children:"create"})," 方法"]}),"\n",(0,s.jsxs)(n.li,{children:["在 ",(0,s.jsx)(n.code,{children:"create"})," 方法中, 调用 ",(0,s.jsx)(n.code,{children:"form"})," 方法, 并返回新增页面的结构"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["弹窗模式下","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["在访问 ",(0,s.jsx)(n.code,{children:"createButton"})," 方法时, 会调用 ",(0,s.jsx)(n.code,{children:"form"})," 方法, 并返回新增表单的结构"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",meta:"",children:"/**\n * 前端 amis 通过识别 form 方法返回的结构来构建表单\n * \n * @param bool $isEdit 用于判断是否为编辑\n * \n * @return Form\n */\npublic function form($isEdit)\n{\n    // baseForm 方法中, 处理了表单的一些基础内容\n    // 可以传入一个 bool 参数, 控制在表单提交成功后是否返回上一页\n    return $this->baseForm()->body([\n        TextControl::make()->name('name')->label('Name'),\n        TextControl::make()->name('email')->label('Email'),\n    ]);\n}\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"store-方法处理新增表单提交",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#store-方法处理新增表单提交",children:"#"}),"store 方法处理新增表单提交"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["提交的流程","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["前端渲染新增表单 (里面包含了提交的路径)","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["页面模式下, 提交 ",(0,s.jsx)(n.code,{children:"api"})," 在 ",(0,s.jsx)(n.code,{children:"AdminController"})," 下的 ",(0,s.jsx)(n.code,{children:"create"})," 方法中进行了设置"]}),"\n",(0,s.jsxs)(n.li,{children:["弹窗模式下, 提交 ",(0,s.jsx)(n.code,{children:"api"})," 在 ",(0,s.jsx)(n.code,{children:"createButton"})," 方法中进行了设置"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["提交到后端, 后端会调用 ",(0,s.jsx)(n.code,{children:"store"})," 方法, 并进行相应的处理"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"AdminController"})," 中的 ",(0,s.jsx)(n.code,{children:"store"})," 方法, 可以满足大多数的新增表单提交需求, 但是如果有特殊的需求, 也可以重写该方法"]}),"\n",(0,s.jsxs)(n.li,{children:["大多数情况下, 重写对应 ",(0,s.jsx)(n.code,{children:"service"})," 中的 ",(0,s.jsx)(n.code,{children:"store"})," 方法即可"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",meta:"",children:"/**\n * 新增保存\n *\n * @param Request $request\n *\n * @return JsonResponse|JsonResource\n */\npublic function store(Request $request)\n{\n    $response = fn($result) => $this->autoResponse($result, __('admin.save'));\n\n    // 处理快速编辑\n    if ($this->actionOfQuickEdit()) {\n        return $response($this->service->quickEdit($request->all()));\n    }\n\n    // 处理快速编辑某项\n    if ($this->actionOfQuickEditItem()) {\n        return $response($this->service->quickEditItem($request->all()));\n    }\n\n    // 返回新增结果\n    return $response($this->service->store($request->all()));\n}\n\n/**\n * service 中实际处理新增逻辑的方法, 可以在自己的 service 中重写该方法\n *\n * @param $data\n *\n * @return bool\n */\npublic function store($data): bool\n{\n    $columns = $this->getTableColumns();\n    $model   = $this->getModel();\n\n    foreach ($data as $k => $v) {\n        if (!in_array($k, $columns)) {\n            continue;\n        }\n\n        $model->setAttribute($k, $v);\n    }\n\n    return $model->save();\n}\n"})})]})}function c(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(l,e)})):l(e)}let t=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["guide%2Fcrud%2Fcreate.md"]={toc:[{id:"form-方法构建新增表单",text:"form 方法构建新增表单",depth:2},{id:"store-方法处理新增表单提交",text:"store 方法处理新增表单提交",depth:2}],title:"增",frontmatter:{}}}}]);